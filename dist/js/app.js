/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Folder.vue?vue&type=script&lang=js&":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Folder.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vuedraggable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuedraggable */ "./node_modules/vuedraggable/dist/vuedraggable.umd.js");
/* harmony import */ var vuedraggable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vuedraggable__WEBPACK_IMPORTED_MODULE_0__);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  components: {
    draggable: (vuedraggable__WEBPACK_IMPORTED_MODULE_0___default())
  },
  data: function data() {
    return {
      // formDone: false,
      folders: [],
      newFolder: null,
      selectedTab: 0,
      expand: false
    };
  },
  computed: {
    formReady: function formReady() {
      return Object.values(this.newFolder).every(function (val) {
        return val !== "";
      });
    },
    updateBackgroundColor: function updateBackgroundColor(color) {
      console.log(color);

      if (color === "yellow") {
        this.$set(this.$data, 'color', 'red');
      } else {
        this.$set(this.$data, 'color', 'yellow');
      }
    }
  },
  methods: {
    addFolder: function addFolder() {
      if (this.newFolder !== null) {
        this.folders.push({
          name: this.newFolder
        });
        this.newFolder = null;
      }
    },
    removeFolder: function removeFolder(index) {
      this.folders.splice(index, 1);
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formindex.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formindex.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  data: function data() {
    return {
      inputValue: "some text",
      activeStep: 1,
      formSteps: [],
      imageData: "",
      info: {
        title: "",
        author: "",
        number: "",
        name: "",
        curriculum: "",
        topic: "",
        rating: ""
      },
      formDone: false
    };
  },
  computed: {
    formReady: function formReady() {
      return Object.values(this.info).every(function (val) {
        return val !== "";
      });
    }
  },
  methods: {
    previewImage: function previewImage(event) {
      var _this = this;

      // Reference to the DOM input element
      var input = event.target; // Ensure that you have a file before attempting to read it

      if (input.files && input.files[0]) {
        // create a new FileReader to read this image and convert to base64 format
        var reader = new FileReader(); // Define a callback function to run, when FileReader finishes its job

        reader.onload = function (e) {
          // Note: arrow function used here, so that "this.imageData" refers to the imageData of Vue component
          // Read image as base64 and set to imageData
          _this.imageData = e.target.result;
          _this.activeStep++;
        }; // Start the reader job - read file as a data url (base64 format)


        reader.readAsDataURL(input.files[0]);
      }
    },
    onInput: function onInput(event) {
      this.$emit("input", event.target.value);
    },
    prev: function prev() {
      this.activeStep--;
    },
    next: function next() {
      this.activeStep++;
    },
    submit: function submit() {
      alert("Submit to blah and show blah and etc.");
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formstep.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formstep.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  data: function data() {
    return {
      inputValue: "some text",
      activeStep: 1,
      formSteps: [],
      imageData: "",
      // step:1,
      info: {
        title: "",
        author: "",
        number: "",
        name: "",
        curriculum: "",
        topic: "",
        rating: ""
      },
      formDone: false
    };
  },
  computed: {
    formReady: function formReady() {
      return Object.values(this.info).every(function (val) {
        return val !== "";
      });
    }
  },
  methods: {
    previewImage: function previewImage(event) {
      var _this = this;

      // Reference to the DOM input element
      var input = event.target; // Ensure that you have a file before attempting to read it

      if (input.files && input.files[0]) {
        // create a new FileReader to read this image and convert to base64 format
        var reader = new FileReader(); // Define a callback function to run, when FileReader finishes its job

        reader.onload = function (e) {
          // Note: arrow function used here, so that "this.imageData" refers to the imageData of Vue component
          // Read image as base64 and set to imageData
          _this.imageData = e.target.result;
          _this.activeStep++;
        }; // Start the reader job - read file as a data url (base64 format)


        reader.readAsDataURL(input.files[0]);
      }
    },
    onInput: function onInput(event) {
      this.$emit("input", event.target.value);
    },
    prev: function prev() {
      this.activeStep--;
    },
    next: function next() {
      this.activeStep++;
    },
    submit: function submit() {
      alert("Submit to blah and show blah and etc.");
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Studyset.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Studyset.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  data: function data() {
    return {
      infoset: {
        title: 'World History: Cultures, States and Societies to 1500',
        author: 'Eugene Berger, Georgia Gwinnett, George Israel, Middle Georgia',
        number: '1',
        name: 'Ancient Mesopotamia',
        curriculum: 'IB',
        topic: 'History',
        rating: ''
      },
      formDone: false,
      files: []
    };
  }
});

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.esm.js");
/* harmony import */ var _components_Studyset_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Studyset.vue */ "./src/js/components/Studyset.vue");
/* harmony import */ var _components_Folder_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Folder.vue */ "./src/js/components/Folder.vue");
/* harmony import */ var _components_Formstep_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Formstep.vue */ "./src/js/components/Formstep.vue");
/* harmony import */ var _components_Formindex_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Formindex.vue */ "./src/js/components/Formindex.vue");
/* harmony import */ var vue_draggable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vue-draggable */ "./node_modules/vue-draggable/lib/vue-draggable.js");
/* harmony import */ var vue_draggable__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(vue_draggable__WEBPACK_IMPORTED_MODULE_4__);
document.addEventListener("DOMContentLoaded", function () {
  var sliderStud = new Swiper(".stud-saying__slider", {
    spaceBetween: 30,
    pagination: {
      el: ".swiper-pagination",
      clickable: true
    }
  });
  $('.burger, .overlay').click(function () {
    $('.burger').toggleClass('clicked');
    $('.overlay').toggleClass('show');
    $('nav').toggleClass('show');
    $('body').toggleClass('overflow');
  });
  var nav = $('.nav__menu');
  var line = $('<div />').addClass('line');
  line.appendTo(nav);
  var active = nav.find('.active');
  var pos = 0;
  var wid = 0;

  if (active.length) {
    pos = active.position().left;
    wid = active.width();
    line.css({
      left: pos,
      width: wid
    });
  }

  $('#emailModal').on('shown.bs.modal', function () {
    $('#emailModal').trigger('focus');
  });
  $('#sort').on('shown.bs.modal', function () {
    $('#sort').trigger('focus');
  });
  $('#filter').on('shown.bs.modal', function () {
    $('#filter').trigger('focus');
  });
  $('#folder').on('shown.bs.modal', function () {
    $('#folder').trigger('focus');
  });
  $('#removefolder').on('shown.bs.modal', function () {
    $('#removefolder').trigger('focus');
  });
  $('#renamefolder').on('shown.bs.modal', function () {
    $('#renamefolder').trigger('focus');
  });
  $('#editText').on('shown.bs.modal', function () {
    $('#editText').trigger('focus');
  });
  jQuery(document).ready(function () {
    jQuery('.toast__close').click(function (e) {
      e.preventDefault();
      var parent = $(this).parent('.toast');
      parent.fadeOut("slow", function () {
        $(this).remove();
      });
    });
  });
  $("document").ready(function () {
    $(".tab__body").hide();
    $(".tab__body:first").show();
  });
  $(".tab__nav li").click(function () {
    $(".tab__body").hide();
    var activeTab = $(this).attr("rel");
    $("#" + activeTab).fadeIn();
    $(".tab__nav li").removeClass("active");
    $(this).addClass("active");
  }); // $(".tab-slider__desc-btn").click(function () {
  // 	$(".card__container").toggleClass("active");  
  // });

  $(".tab-slider__desc-btn").click(function () {
    $('.card__container').toggleClass("active");
  });
  $(".card__row").on("click", ".card__container", function () {
    $(this).toggleClass("active");
  });
  $(window).keyup(function (e) {
    var target = $('.checkbox-other input:focus');

    if (e.keyCode == 9 && $(target).length) {
      $(target).parent().addClass('focused');
    }
  });
  $('.checkbox-other input').focusout(function () {
    $(this).parent().removeClass('focused');
  });
  $(".acordeon").on("click", ".acordeon-cabecera", function () {
    $(this).toggleClass("active").next().slideToggle();
  });
  Dropzone.options.uploadWidget = {
    paramName: 'file',
    maxFilesize: 2,
    // MB
    maxFiles: 1,
    dictDefaultMessage: 'Drag an image here to upload, or click to select one',
    headers: {
      'x-csrf-token': document.querySelectorAll('meta[name=csrf-token]')[0].getAttributeNode('content').value
    },
    acceptedFiles: 'image/*',
    init: function init() {
      this.on('success', function (file, resp) {
        console.log(file);
        console.log(resp);
      });
      this.on('thumbnail', function (file) {
        if (file.accepted !== false) {
          if (file.width < 640 || file.height < 480) {
            file.rejectDimensions();
          } else {
            file.acceptDimensions();
          }
        }
      });
    },
    accept: function accept(file, done) {
      file.acceptDimensions = done;

      file.rejectDimensions = function () {
        // done('The image must be at least 640 x 544px')
        done('The image must be at least 400 x 400px');
      };
    }
  };
  $("#jpId").jPlayer({
    ready: function ready() {
      $(this).jPlayer("setMedia", {
        m4v: "/media/myVideo.mp4",
        ogv: "/media/myVideo.ogv"
      }).jPlayer("play"); //Включаем авто старт
    },
    solution: "flash, html",
    supplied: "mp4, ogv",
    swfPath: "/scripts"
  });
  $('.js-navtoggle').click(function () {
    $('.sidebar-push').toggleClass('open');
  });
  var btns = document.getElementsByClassName('library__btn');
  var par = document.getElementsByClassName('tab__trigger');

  btns[0].onclick = function () {
    par[0].classList.add("active");
  };
});






new vue__WEBPACK_IMPORTED_MODULE_5__["default"]({
  el: '#app',
  components: {
    Folder: _components_Folder_vue__WEBPACK_IMPORTED_MODULE_1__["default"],
    Formstep: _components_Formstep_vue__WEBPACK_IMPORTED_MODULE_2__["default"],
    Formindex: _components_Formindex_vue__WEBPACK_IMPORTED_MODULE_3__["default"],
    Studyset: _components_Studyset_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    VueDraggable: (vue_draggable__WEBPACK_IMPORTED_MODULE_4___default())
  }
}); // ue.use(VueDraggable)

vue__WEBPACK_IMPORTED_MODULE_5__["default"].use((vue_draggable__WEBPACK_IMPORTED_MODULE_4___default()["default"]));

/***/ }),

/***/ "./src/sass/main.sass":
/*!****************************!*\
  !*** ./src/sass/main.sass ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "./node_modules/sortablejs/modular/sortable.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/sortablejs/modular/sortable.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "MultiDrag": () => (/* binding */ MultiDragPlugin),
/* harmony export */   "Sortable": () => (/* binding */ Sortable),
/* harmony export */   "Swap": () => (/* binding */ SwapPlugin)
/* harmony export */ });
/**!
 * Sortable 1.10.2
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

var version = "1.10.2";

function userAgent(pattern) {
  if (typeof window !== 'undefined' && window.navigator) {
    return !!
    /*@__PURE__*/
    navigator.userAgent.match(pattern);
  }
}

var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);

var captureMode = {
  capture: false,
  passive: false
};

function on(el, event, fn) {
  el.addEventListener(event, fn, !IE11OrLess && captureMode);
}

function off(el, event, fn) {
  el.removeEventListener(event, fn, !IE11OrLess && captureMode);
}

function matches(
/**HTMLElement*/
el,
/**String*/
selector) {
  if (!selector) return;
  selector[0] === '>' && (selector = selector.substring(1));

  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }

  return false;
}

function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}

function closest(
/**HTMLElement*/
el,
/**String*/
selector,
/**HTMLElement*/
ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;

    do {
      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }

      if (el === ctx) break;
      /* jshint boss:true */
    } while (el = getParentOrHost(el));
  }

  return null;
}

var R_SPACE = /\s+/g;

function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? 'add' : 'remove'](name);
    } else {
      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
    }
  }
}

function css(el, prop, val) {
  var style = el && el.style;

  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, '');
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }

      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf('webkit') === -1) {
        prop = '-webkit-' + prop;
      }

      style[prop] = val + (typeof val === 'string' ? '' : 'px');
    }
  }
}

function matrix(el, selfOnly) {
  var appliedTransforms = '';

  if (typeof el === 'string') {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, 'transform');

      if (transform && transform !== 'none') {
        appliedTransforms = transform + ' ' + appliedTransforms;
      }
      /* jshint boss:true */

    } while (!selfOnly && (el = el.parentNode));
  }

  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  /*jshint -W056 */

  return matrixFn && new matrixFn(appliedTransforms);
}

function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName),
        i = 0,
        n = list.length;

    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }

    return list;
  }

  return [];
}

function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;

  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
/**
 * Returns the "bounding client rect" of given element
 * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted
 * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container
 * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr
 * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone
 * @param  {[HTMLElement]} container              The parent the element will be placed in
 * @return {Object}                               The boundingClientRect of el, with specified adjustments
 */


function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {
  if (!el.getBoundingClientRect && el !== window) return;
  var elRect, top, left, bottom, right, height, width;

  if (el !== window && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top = elRect.top;
    left = elRect.left;
    bottom = elRect.bottom;
    right = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top = 0;
    left = 0;
    bottom = window.innerHeight;
    right = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }

  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    // Adjust for translate()
    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
    // Not needed on <= IE11

    if (!IE11OrLess) {
      do {
        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {
          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container

          top -= containerRect.top + parseInt(css(container, 'border-top-width'));
          left -= containerRect.left + parseInt(css(container, 'border-left-width'));
          bottom = top + elRect.height;
          right = left + elRect.width;
          break;
        }
        /* jshint boss:true */

      } while (container = container.parentNode);
    }
  }

  if (undoScale && el !== window) {
    // Adjust for scale()
    var elMatrix = matrix(container || el),
        scaleX = elMatrix && elMatrix.a,
        scaleY = elMatrix && elMatrix.d;

    if (elMatrix) {
      top /= scaleY;
      left /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom = top + height;
      right = left + width;
    }
  }

  return {
    top: top,
    left: left,
    bottom: bottom,
    right: right,
    width: width,
    height: height
  };
}
/**
 * Checks if a side of an element is scrolled past a side of its parents
 * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question
 * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')
 * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')
 * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element
 */


function isScrolledPast(el, elSide, parentSide) {
  var parent = getParentAutoScrollElement(el, true),
      elSideVal = getRect(el)[elSide];
  /* jshint boss:true */

  while (parent) {
    var parentSideVal = getRect(parent)[parentSide],
        visible = void 0;

    if (parentSide === 'top' || parentSide === 'left') {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }

    if (!visible) return parent;
    if (parent === getWindowScrollingElement()) break;
    parent = getParentAutoScrollElement(parent, false);
  }

  return false;
}
/**
 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
 * and non-draggable elements
 * @param  {HTMLElement} el       The parent element
 * @param  {Number} childNum      The index of the child
 * @param  {Object} options       Parent Sortable's options
 * @return {HTMLElement}          The child at index childNum, or null if not found
 */


function getChild(el, childNum, options) {
  var currentChild = 0,
      i = 0,
      children = el.children;

  while (i < children.length) {
    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children[i];
      }

      currentChild++;
    }

    i++;
  }

  return null;
}
/**
 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
 * @param  {HTMLElement} el       Parent element
 * @param  {selector} selector    Any other elements that should be ignored
 * @return {HTMLElement}          The last child, ignoring ghostEl
 */


function lastChild(el, selector) {
  var last = el.lastElementChild;

  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {
    last = last.previousElementSibling;
  }

  return last || null;
}
/**
 * Returns the index of an element within its parent for a selected set of
 * elements
 * @param  {HTMLElement} el
 * @param  {selector} selector
 * @return {number}
 */


function index(el, selector) {
  var index = 0;

  if (!el || !el.parentNode) {
    return -1;
  }
  /* jshint boss:true */


  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index++;
    }
  }

  return index;
}
/**
 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
 * The value is returned in real pixels.
 * @param  {HTMLElement} el
 * @return {Array}             Offsets in the format of [left, top]
 */


function getRelativeScrollOffset(el) {
  var offsetLeft = 0,
      offsetTop = 0,
      winScroller = getWindowScrollingElement();

  if (el) {
    do {
      var elMatrix = matrix(el),
          scaleX = elMatrix.a,
          scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }

  return [offsetLeft, offsetTop];
}
/**
 * Returns the index of the object within the given array
 * @param  {Array} arr   Array that may or may not hold the object
 * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find
 * @return {Number}      The index of the object in the array, or -1
 */


function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i)) continue;

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);
    }
  }

  return -1;
}

function getParentAutoScrollElement(el, includeSelf) {
  // skip to window
  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;

  do {
    // we don't need to get elem css if it isn't even overflowing in the first place (performance)
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);

      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {
        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();
        if (gotSelf || includeSelf) return elem;
        gotSelf = true;
      }
    }
    /* jshint boss:true */

  } while (elem = elem.parentNode);

  return getWindowScrollingElement();
}

function extend(dst, src) {
  if (dst && src) {
    for (var key in src) {
      if (src.hasOwnProperty(key)) {
        dst[key] = src[key];
      }
    }
  }

  return dst;
}

function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}

var _throttleTimeout;

function throttle(callback, ms) {
  return function () {
    if (!_throttleTimeout) {
      var args = arguments,
          _this = this;

      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }

      _throttleTimeout = setTimeout(function () {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}

function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}

function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}

function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;

  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}

function setRect(el, rect) {
  css(el, 'position', 'absolute');
  css(el, 'top', rect.top);
  css(el, 'left', rect.left);
  css(el, 'width', rect.width);
  css(el, 'height', rect.height);
}

function unsetRect(el) {
  css(el, 'position', '');
  css(el, 'top', '');
  css(el, 'left', '');
  css(el, 'width', '');
  css(el, 'height', '');
}

var expando = 'Sortable' + new Date().getTime();

function AnimationStateManager() {
  var animationStates = [],
      animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation) return;
      var children = [].slice.call(this.el.children);
      children.forEach(function (child) {
        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });

        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation


        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);

          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }

        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target: target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;

      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === 'function') callback();
        return;
      }

      var animating = false,
          animationTime = 0;
      animationStates.forEach(function (state) {
        var time = 0,
            target = state.target,
            fromRect = target.fromRect,
            toRect = getRect(target),
            prevFromRect = target.prevFromRect,
            prevToRect = target.prevToRect,
            animatingRect = state.rect,
            targetMatrix = matrix(target, true);

        if (targetMatrix) {
          // Compensate for current animation
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }

        target.toRect = toRect;

        if (target.thisAnimationDuration) {
          // Could also check if animatingRect is between fromRect and toRect
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect
          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            // If returning to same place as started from animation and on same axis
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        } // if fromRect != toRect: animate


        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;

          if (!time) {
            time = _this.options.animation;
          }

          _this.animate(target, animatingRect, toRect, time);
        }

        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function () {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);

      if (!animating) {
        if (typeof callback === 'function') callback();
      } else {
        animationCallbackId = setTimeout(function () {
          if (typeof callback === 'function') callback();
        }, animationTime);
      }

      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, 'transition', '');
        css(target, 'transform', '');
        var elMatrix = matrix(this.el),
            scaleX = elMatrix && elMatrix.a,
            scaleY = elMatrix && elMatrix.d,
            translateX = (currentRect.left - toRect.left) / (scaleX || 1),
            translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');
        repaint(target); // repaint

        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
        css(target, 'transform', 'translate3d(0,0,0)');
        typeof target.animated === 'number' && clearTimeout(target.animated);
        target.animated = setTimeout(function () {
          css(target, 'transition', '');
          css(target, 'transform', '');
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}

function repaint(target) {
  return target.offsetWidth;
}

function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}

var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    // Set default static properties
    for (var option in defaults) {
      if (defaults.hasOwnProperty(option) && !(option in plugin)) {
        plugin[option] = defaults[option];
      }
    }

    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;

    this.eventCanceled = false;

    evt.cancel = function () {
      _this.eventCanceled = true;
    };

    var eventNameGlobal = eventName + 'Global';
    plugins.forEach(function (plugin) {
      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable

      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({
          sortable: sortable
        }, evt));
      } // Only fire plugin event if plugin is enabled in this sortable,
      // and plugin has event defined


      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread({
          sortable: sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults, options) {
    plugins.forEach(function (plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized; // Add default options from plugin

      _extends(defaults, initialized.defaults);
    });

    for (var option in sortable.options) {
      if (!sortable.options.hasOwnProperty(option)) continue;
      var modified = this.modifyOption(sortable, option, sortable.options[option]);

      if (typeof modified !== 'undefined') {
        sortable.options[option] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function (plugin) {
      if (typeof plugin.eventProperties !== 'function') return;

      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function (plugin) {
      // Plugin must exist on the Sortable
      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin

      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};

function dispatchEvent(_ref) {
  var sortable = _ref.sortable,
      rootEl = _ref.rootEl,
      name = _ref.name,
      targetEl = _ref.targetEl,
      cloneEl = _ref.cloneEl,
      toEl = _ref.toEl,
      fromEl = _ref.fromEl,
      oldIndex = _ref.oldIndex,
      newIndex = _ref.newIndex,
      oldDraggableIndex = _ref.oldDraggableIndex,
      newDraggableIndex = _ref.newDraggableIndex,
      originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl && rootEl[expando];
  if (!sortable) return;
  var evt,
      options = sortable.options,
      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent(name, true, true);
  }

  evt.to = toEl || rootEl;
  evt.from = fromEl || rootEl;
  evt.item = targetEl || rootEl;
  evt.clone = cloneEl;
  evt.oldIndex = oldIndex;
  evt.newIndex = newIndex;
  evt.oldDraggableIndex = oldDraggableIndex;
  evt.newDraggableIndex = newDraggableIndex;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));

  for (var option in allEventProperties) {
    evt[option] = allEventProperties[option];
  }

  if (rootEl) {
    rootEl.dispatchEvent(evt);
  }

  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}

var pluginEvent = function pluginEvent(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      originalEvent = _ref.evt,
      data = _objectWithoutProperties(_ref, ["evt"]);

  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({
    dragEl: dragEl,
    parentEl: parentEl,
    ghostEl: ghostEl,
    rootEl: rootEl,
    nextEl: nextEl,
    lastDownEl: lastDownEl,
    cloneEl: cloneEl,
    cloneHidden: cloneHidden,
    dragStarted: moved,
    putSortable: putSortable,
    activeSortable: Sortable.active,
    originalEvent: originalEvent,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable: sortable,
        name: name,
        originalEvent: originalEvent
      });
    }
  }, data));
};

function _dispatchEvent(info) {
  dispatchEvent(_objectSpread({
    putSortable: putSortable,
    cloneEl: cloneEl,
    targetEl: dragEl,
    rootEl: rootEl,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex
  }, info));
}

var dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    oldIndex,
    newIndex,
    oldDraggableIndex,
    newDraggableIndex,
    activeGroup,
    putSortable,
    awaitingDragStarted = false,
    ignoreNextClick = false,
    sortables = [],
    tapEvt,
    touchEvt,
    lastDx,
    lastDy,
    tapDistanceLeft,
    tapDistanceTop,
    moved,
    lastTarget,
    lastDirection,
    pastFirstInvertThresh = false,
    isCircumstantialInvert = false,
    targetMoveDistance,
    // For positioning ghost absolutely
ghostRelativeParent,
    ghostRelativeParentInitialScroll = [],
    // (left, top)
_silent = false,
    savedInputChecked = [];
/** @const */

var documentExists = typeof document !== 'undefined',
    PositionGhostAbsolutely = IOS,
    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',
    // This will not pass for IE9, because IE9 DnD only works on anchors
supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),
    supportCssPointerEvents = function () {
  if (!documentExists) return; // false when <= IE11

  if (IE11OrLess) {
    return false;
  }

  var el = document.createElement('x');
  el.style.cssText = 'pointer-events:auto';
  return el.style.pointerEvents === 'auto';
}(),
    _detectDirection = function _detectDirection(el, options) {
  var elCSS = css(el),
      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),
      child1 = getChild(el, 0, options),
      child2 = getChild(el, 1, options),
      firstChildCSS = child1 && css(child1),
      secondChildCSS = child2 && css(child2),
      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,
      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;

  if (elCSS.display === 'flex') {
    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';
  }

  if (elCSS.display === 'grid') {
    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
  }

  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== 'none') {
    var touchingSideChild2 = firstChildCSS["float"] === 'left' ? 'left' : 'right';
    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';
  }

  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';
},
    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,
      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,
      dragElOppLength = vertical ? dragRect.width : dragRect.height,
      targetS1Opp = vertical ? targetRect.left : targetRect.top,
      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,
      targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
},

/**
 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
 * @param  {Number} x      X position
 * @param  {Number} y      Y position
 * @return {HTMLElement}   Element of the first found nearest Sortable
 */
_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {
  var ret;
  sortables.some(function (sortable) {
    if (lastChild(sortable)) return;
    var rect = getRect(sortable),
        threshold = sortable[expando].options.emptyInsertThreshold,
        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,
        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;

    if (threshold && insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
},
    _prepareGroup = function _prepareGroup(options) {
  function toFn(value, pull) {
    return function (to, from, dragEl, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;

      if (value == null && (pull || sameGroup)) {
        // Default pull value
        // Default pull and put value if same group
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === 'clone') {
        return value;
      } else if (typeof value === 'function') {
        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }

  var group = {};
  var originalGroup = options.group;

  if (!originalGroup || _typeof(originalGroup) != 'object') {
    originalGroup = {
      name: originalGroup
    };
  }

  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
},
    _hideGhostForTarget = function _hideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', 'none');
  }
},
    _unhideGhostForTarget = function _unhideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', '');
  }
}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position


if (documentExists) {
  document.addEventListener('click', function (evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}

var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;

    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

    if (nearest) {
      // Create imitation event
      var event = {};

      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }

      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;

      nearest[expando]._onDragOver(event);
    }
  }
};

var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
/**
 * @class  Sortable
 * @param  {HTMLElement}  el
 * @param  {Object}       [options]
 */


function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }

  this.el = el; // root element

  this.options = options = _extends({}, options); // Export instance

  el[expando] = this;
  var defaults = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: false,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: 'sortable-ghost',
    chosenClass: 'sortable-chosen',
    dragClass: 'sortable-drag',
    ignore: 'a, img',
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl) {
      dataTransfer.setData('Text', dragEl.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: 'data-id',
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: 'sortable-fallback',
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults); // Set default options

  for (var name in defaults) {
    !(name in options) && (options[name] = defaults[name]);
  }

  _prepareGroup(options); // Bind all private methods


  for (var fn in this) {
    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
      this[fn] = this[fn].bind(this);
    }
  } // Setup drag mode


  this.nativeDraggable = options.forceFallback ? false : supportDraggable;

  if (this.nativeDraggable) {
    // Touch start threshold cannot be greater than the native dragstart threshold
    this.options.touchStartThreshold = 1;
  } // Bind events


  if (options.supportPointer) {
    on(el, 'pointerdown', this._onTapStart);
  } else {
    on(el, 'mousedown', this._onTapStart);
    on(el, 'touchstart', this._onTapStart);
  }

  if (this.nativeDraggable) {
    on(el, 'dragover', this);
    on(el, 'dragenter', this);
  }

  sortables.push(this.el); // Restore sorting

  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager

  _extends(this, AnimationStateManager());
}

Sortable.prototype =
/** @lends Sortable.prototype */
{
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(
  /** Event|TouchEvent */
  evt) {
    if (!evt.cancelable) return;

    var _this = this,
        el = this.el,
        options = this.options,
        preventOnFilter = options.preventOnFilter,
        type = evt.type,
        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,
        target = (touch || evt).target,
        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,
        filter = options.filter;

    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.


    if (dragEl) {
      return;
    }

    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return; // only left button and enabled
    } // cancel dnd if original target is content editable


    if (originalTarget.isContentEditable) {
      return;
    }

    target = closest(target, options.draggable, el, false);

    if (target && target.animated) {
      return;
    }

    if (lastDownEl === target) {
      // Ignoring duplicate `down`
      return;
    } // Get the index of the dragged element within its parent


    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable); // Check filter

    if (typeof filter === 'function') {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: 'filter',
          targetEl: target,
          toEl: el,
          fromEl: el
        });

        pluginEvent('filter', _this, {
          evt: evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    } else if (filter) {
      filter = filter.split(',').some(function (criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);

        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: 'filter',
            targetEl: target,
            fromEl: el,
            toEl: el
          });

          pluginEvent('filter', _this, {
            evt: evt
          });
          return true;
        }
      });

      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    }

    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    } // Prepare `dragstart`


    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(
  /** Event */
  evt,
  /** Touch */
  touch,
  /** HTMLElement */
  target) {
    var _this = this,
        el = _this.el,
        options = _this.options,
        ownerDocument = el.ownerDocument,
        dragStartFn;

    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style['will-change'] = 'all';

      dragStartFn = function dragStartFn() {
        pluginEvent('delayEnded', _this, {
          evt: evt
        });

        if (Sortable.eventCanceled) {
          _this._onDrop();

          return;
        } // Delayed drag has been triggered
        // we can re-enable the events: touchmove/mousemove


        _this._disableDelayedDragEvents();

        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        } // Bind the events: dragstart/dragend


        _this._triggerDragStart(evt, touch); // Drag start event


        _dispatchEvent({
          sortable: _this,
          name: 'choose',
          originalEvent: evt
        }); // Chosen item


        toggleClass(dragEl, options.chosenClass, true);
      }; // Disable "draggable"


      options.ignore.split(',').forEach(function (criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mouseup', _this._onDrop);
      on(ownerDocument, 'touchend', _this._onDrop);
      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)

      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }

      pluginEvent('delayStart', this, {
        evt: evt
      }); // Delay is impossible for native DnD in Edge or IE

      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();

          return;
        } // If the user moves the pointer or let go the click or touch
        // before the delay has been reached:
        // disable the delayed drag


        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
        on(ownerDocument, 'touchend', _this._disableDelayedDrag);
        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(
  /** TouchEvent|PointerEvent **/
  e) {
    var touch = e.touches ? e.touches[0] : e;

    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);

    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._disableDelayedDrag);
    off(ownerDocument, 'touchend', this._disableDelayedDrag);
    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(
  /** Event */
  evt,
  /** Touch */
  touch) {
    touch = touch || evt.pointerType == 'touch' && evt;

    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on(document, 'pointermove', this._onTouchMove);
      } else if (touch) {
        on(document, 'touchmove', this._onTouchMove);
      } else {
        on(document, 'mousemove', this._onTouchMove);
      }
    } else {
      on(dragEl, 'dragend', this);
      on(rootEl, 'dragstart', this._onDragStart);
    }

    try {
      if (document.selection) {
        // Timeout neccessary for IE9
        _nextTick(function () {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {}
  },
  _dragStarted: function _dragStarted(fallback, evt) {

    awaitingDragStarted = false;

    if (rootEl && dragEl) {
      pluginEvent('dragStarted', this, {
        evt: evt
      });

      if (this.nativeDraggable) {
        on(document, 'dragover', _checkOutsideTargetEl);
      }

      var options = this.options; // Apply effect

      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost(); // Drag start event

      _dispatchEvent({
        sortable: this,
        name: 'start',
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;

      _hideGhostForTarget();

      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent = target;

      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent) break;
        parent = target;
      }

      dragEl.parentNode[expando]._isOutsideThisEl(target);

      if (parent) {
        do {
          if (parent[expando]) {
            var inserted = void 0;
            inserted = parent[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target: target,
              rootEl: parent
            });

            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }

          target = parent; // store last element
        }
        /* jshint boss:true */
        while (parent = parent.parentNode);
      }

      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(
  /**TouchEvent*/
  evt) {
    if (tapEvt) {
      var options = this.options,
          fallbackTolerance = options.fallbackTolerance,
          fallbackOffset = options.fallbackOffset,
          touch = evt.touches ? evt.touches[0] : evt,
          ghostMatrix = ghostEl && matrix(ghostEl, true),
          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,
          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,
          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),
          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),
          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging

      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }

        this._onDragStart(evt, true);
      }

      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }

        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, 'webkitTransform', cssMatrix);
        css(ghostEl, 'mozTransform', cssMatrix);
        css(ghostEl, 'msTransform', cssMatrix);
        css(ghostEl, 'transform', cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }

      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    // Bug if using scale(): https://stackoverflow.com/questions/2637058
    // Not being adjusted for
    if (!ghostEl) {
      var container = this.options.fallbackOnBody ? document.body : rootEl,
          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),
          options = this.options; // Position absolutely

      if (PositionGhostAbsolutely) {
        // Get relatively positioned parent
        ghostRelativeParent = container;

        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }

        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }

        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }

      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, 'transition', '');
      css(ghostEl, 'transform', '');
      css(ghostEl, 'box-sizing', 'border-box');
      css(ghostEl, 'margin', 0);
      css(ghostEl, 'top', rect.top);
      css(ghostEl, 'left', rect.left);
      css(ghostEl, 'width', rect.width);
      css(ghostEl, 'height', rect.height);
      css(ghostEl, 'opacity', '0.8');
      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');
      css(ghostEl, 'zIndex', '100000');
      css(ghostEl, 'pointerEvents', 'none');
      Sortable.ghost = ghostEl;
      container.appendChild(ghostEl); // Set transform-origin

      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');
    }
  },
  _onDragStart: function _onDragStart(
  /**Event*/
  evt,
  /**boolean*/
  fallback) {
    var _this = this;

    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent('dragStart', this, {
      evt: evt
    });

    if (Sortable.eventCanceled) {
      this._onDrop();

      return;
    }

    pluginEvent('setupClone', this);

    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.draggable = false;
      cloneEl.style['will-change'] = '';

      this._hideClone();

      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    } // #1143: IFrame support workaround


    _this.cloneId = _nextTick(function () {
      pluginEvent('clone', _this);
      if (Sortable.eventCanceled) return;

      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }

      _this._hideClone();

      _dispatchEvent({
        sortable: _this,
        name: 'clone'
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events

    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      // Undo what was set in _prepareDragStart before drag started
      off(document, 'mouseup', _this._onDrop);
      off(document, 'touchend', _this._onDrop);
      off(document, 'touchcancel', _this._onDrop);

      if (dataTransfer) {
        dataTransfer.effectAllowed = 'move';
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }

      on(document, 'drop', _this); // #1276 fix:

      css(dragEl, 'transform', 'translateZ(0)');
    }

    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on(document, 'selectstart', _this);
    moved = true;

    if (Safari) {
      css(document.body, 'user-select', 'none');
    }
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function _onDragOver(
  /**Event*/
  evt) {
    var el = this.el,
        target = evt.target,
        dragRect,
        targetRect,
        revert,
        options = this.options,
        group = options.group,
        activeSortable = Sortable.active,
        isOwner = activeGroup === group,
        canSort = options.sort,
        fromSortable = putSortable || activeSortable,
        vertical,
        _this = this,
        completedFired = false;

    if (_silent) return;

    function dragOverEvent(name, extra) {
      pluginEvent(name, _this, _objectSpread({
        evt: evt,
        isOwner: isOwner,
        axis: vertical ? 'vertical' : 'horizontal',
        revert: revert,
        dragRect: dragRect,
        targetRect: targetRect,
        canSort: canSort,
        fromSortable: fromSortable,
        target: target,
        completed: completed,
        onMove: function onMove(target, after) {
          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);
        },
        changed: changed
      }, extra));
    } // Capture animation state


    function capture() {
      dragOverEvent('dragOverAnimationCapture');

      _this.captureAnimationState();

      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    } // Return invocation when dragEl is inserted (or completed)


    function completed(insertion) {
      dragOverEvent('dragOverCompleted', {
        insertion: insertion
      });

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }

        if (_this !== fromSortable) {
          // Set ghost class to new sortable's ghost class
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }

        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        } // Animation


        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }

        _this.animateAll(function () {
          dragOverEvent('dragOverAnimationComplete');
          _this._ignoreWhileAnimating = null;
        });

        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      } // Null lastTarget if it is not inside a previously swapped element


      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      } // no bubbling and not fallback


      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted


        !insertion && nearestEmptyInsertDetectEvent(evt);
      }

      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    } // Call when dragEl has been inserted


    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);

      _dispatchEvent({
        sortable: _this,
        name: 'change',
        toEl: el,
        newIndex: newIndex,
        newDraggableIndex: newDraggableIndex,
        originalEvent: evt
      });
    }

    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }

    target = closest(target, options.draggable, el, true);
    dragOverEvent('dragOver');
    if (Sortable.eventCanceled) return completedFired;

    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }

    ignoreNextClick = false;

    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list
    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === 'vertical';
      dragRect = getRect(dragEl);
      dragOverEvent('dragOverValid');
      if (Sortable.eventCanceled) return completedFired;

      if (revert) {
        parentEl = rootEl; // actualization

        capture();

        this._hideClone();

        dragOverEvent('revert');

        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }

        return completed(true);
      }

      var elLastChild = lastChild(el, options.draggable);

      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        // If already at end of list: Do not insert
        if (elLastChild === dragEl) {
          return completed(false);
        } // assign target only if condition is true


        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }

        if (target) {
          targetRect = getRect(target);
        }

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();
          el.appendChild(dragEl);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0,
            targetBeforeFirstSwap,
            differentLevel = dragEl.parentNode !== el,
            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),
            side1 = vertical ? 'top' : 'left',
            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),
            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;

        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }

        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;

        if (direction !== 0) {
          // Check if target is beside dragEl in respective direction (ignoring hidden elements)
          var dragIndex = index(dragEl);

          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));
        } // If dragEl is already beside target: Do not insert


        if (direction === 0 || sibling === target) {
          return completed(false);
        }

        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling,
            after = false;
        after = direction === 1;

        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }

          _silent = true;
          setTimeout(_unsilent, 30);
          capture();

          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          } // Undo chrome's scroll adjustment (has no effect on other browsers)


          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }

          parentEl = dragEl.parentNode; // actualization
          // must be done before animation

          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }

          changed();
          return completed(true);
        }
      }

      if (el.contains(dragEl)) {
        return completed(false);
      }
    }

    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off(document, 'mousemove', this._onTouchMove);
    off(document, 'touchmove', this._onTouchMove);
    off(document, 'pointermove', this._onTouchMove);
    off(document, 'dragover', nearestEmptyInsertDetectEvent);
    off(document, 'mousemove', nearestEmptyInsertDetectEvent);
    off(document, 'touchmove', nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._onDrop);
    off(ownerDocument, 'touchend', this._onDrop);
    off(ownerDocument, 'pointerup', this._onDrop);
    off(ownerDocument, 'touchcancel', this._onDrop);
    off(document, 'selectstart', this);
  },
  _onDrop: function _onDrop(
  /**Event*/
  evt) {
    var el = this.el,
        options = this.options; // Get the index of the dragged element within its parent

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent('drop', this, {
      evt: evt
    });
    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);

    if (Sortable.eventCanceled) {
      this._nulling();

      return;
    }

    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);

    _cancelNextTick(this.cloneId);

    _cancelNextTick(this._dragStartId); // Unbind events


    if (this.nativeDraggable) {
      off(document, 'drop', this);
      off(el, 'dragstart', this._onDragStart);
    }

    this._offMoveEvents();

    this._offUpEvents();

    if (Safari) {
      css(document.body, 'user-select', '');
    }

    css(dragEl, 'transform', '');

    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }

      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        // Remove clone(s)
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }

      if (dragEl) {
        if (this.nativeDraggable) {
          off(dragEl, 'dragend', this);
        }

        _disableDraggable(dragEl);

        dragEl.style['will-change'] = ''; // Remove classes
        // ghostClass is added in dragStarted

        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }

        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event

        _dispatchEvent({
          sortable: this,
          name: 'unchoose',
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });

        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            // Add event
            _dispatchEvent({
              rootEl: parentEl,
              name: 'add',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            }); // Remove event


            _dispatchEvent({
              sortable: this,
              name: 'remove',
              toEl: parentEl,
              originalEvent: evt
            }); // drag from one list and drop into another


            _dispatchEvent({
              rootEl: parentEl,
              name: 'sort',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });

            _dispatchEvent({
              sortable: this,
              name: 'sort',
              toEl: parentEl,
              originalEvent: evt
            });
          }

          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              // drag & drop within the same list
              _dispatchEvent({
                sortable: this,
                name: 'update',
                toEl: parentEl,
                originalEvent: evt
              });

              _dispatchEvent({
                sortable: this,
                name: 'sort',
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }

        if (Sortable.active) {
          /* jshint eqnull:true */
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }

          _dispatchEvent({
            sortable: this,
            name: 'end',
            toEl: parentEl,
            originalEvent: evt
          }); // Save sorting


          this.save();
        }
      }
    }

    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent('nulling', this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function (el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(
  /**Event*/
  evt) {
    switch (evt.type) {
      case 'drop':
      case 'dragend':
        this._onDrop(evt);

        break;

      case 'dragenter':
      case 'dragover':
        if (dragEl) {
          this._onDragOver(evt);

          _globalDragOver(evt);
        }

        break;

      case 'selectstart':
        evt.preventDefault();
        break;
    }
  },

  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function toArray() {
    var order = [],
        el,
        children = this.el.children,
        i = 0,
        n = children.length,
        options = this.options;

    for (; i < n; i++) {
      el = children[i];

      if (closest(el, options.draggable, this.el, false)) {
        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }

    return order;
  },

  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function sort(order) {
    var items = {},
        rootEl = this.el;
    this.toArray().forEach(function (id, i) {
      var el = rootEl.children[i];

      if (closest(el, this.options.draggable, rootEl, false)) {
        items[id] = el;
      }
    }, this);
    order.forEach(function (id) {
      if (items[id]) {
        rootEl.removeChild(items[id]);
        rootEl.appendChild(items[id]);
      }
    });
  },

  /**
   * Save the current sorting
   */
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },

  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },

  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function option(name, value) {
    var options = this.options;

    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);

      if (typeof modifiedValue !== 'undefined') {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }

      if (name === 'group') {
        _prepareGroup(options);
      }
    }
  },

  /**
   * Destroy
   */
  destroy: function destroy() {
    pluginEvent('destroy', this);
    var el = this.el;
    el[expando] = null;
    off(el, 'mousedown', this._onTapStart);
    off(el, 'touchstart', this._onTapStart);
    off(el, 'pointerdown', this._onTapStart);

    if (this.nativeDraggable) {
      off(el, 'dragover', this);
      off(el, 'dragenter', this);
    } // Remove draggable attributes


    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
      el.removeAttribute('draggable');
    });

    this._onDrop();

    this._disableDelayedDragEvents();

    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent('hideClone', this);
      if (Sortable.eventCanceled) return;
      css(cloneEl, 'display', 'none');

      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }

      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable) {
    if (putSortable.lastPutMode !== 'clone') {
      this._hideClone();

      return;
    }

    if (cloneHidden) {
      pluginEvent('showClone', this);
      if (Sortable.eventCanceled) return; // show clone at dragEl or original position

      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }

      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }

      css(cloneEl, 'display', '');
      cloneHidden = false;
    }
  }
};

function _globalDragOver(
/**Event*/
evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = 'move';
  }

  evt.cancelable && evt.preventDefault();
}

function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt,
      sortable = fromEl[expando],
      onMoveFn = sortable.options.onMove,
      retVal; // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !Edge) {
    evt = new CustomEvent('move', {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent('move', true, true);
  }

  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);

  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }

  return retVal;
}

function _disableDraggable(el) {
  el.draggable = false;
}

function _unsilent() {
  _silent = false;
}

function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}

function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,
      targetLength = vertical ? targetRect.height : targetRect.width,
      targetS1 = vertical ? targetRect.top : targetRect.left,
      targetS2 = vertical ? targetRect.bottom : targetRect.right,
      invert = false;

  if (!invertSwap) {
    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
      // check if past first invert threshold on side opposite of lastDirection
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        // past first invert threshold, do not restrict inverted threshold to dragEl shadow
        pastFirstInvertThresh = true;
      }

      if (!pastFirstInvertThresh) {
        // dragEl shadow (target move distance shadow)
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
        : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      // Regular
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }

  invert = invert || invertSwap;

  if (invert) {
    // Invert of regular
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }

  return 0;
}
/**
 * Gets the direction dragEl must be swapped relative to target in order to make it
 * seem that dragEl has been "inserted" into that element's position
 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
 * @return {Number}                   Direction dragEl must be swapped
 */


function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
/**
 * Generate id
 * @param   {HTMLElement} el
 * @returns {String}
 * @private
 */


function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent,
      i = str.length,
      sum = 0;

  while (i--) {
    sum += str.charCodeAt(i);
  }

  return sum.toString(36);
}

function _saveInputCheckedState(root) {
  savedInputChecked.length = 0;
  var inputs = root.getElementsByTagName('input');
  var idx = inputs.length;

  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}

function _nextTick(fn) {
  return setTimeout(fn, 0);
}

function _cancelNextTick(id) {
  return clearTimeout(id);
} // Fixed #973:


if (documentExists) {
  on(document, 'touchmove', function (evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
} // Export utils


Sortable.utils = {
  on: on,
  off: off,
  css: css,
  find: find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend: extend,
  throttle: throttle,
  closest: closest,
  toggleClass: toggleClass,
  clone: clone,
  index: index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild: getChild
};
/**
 * Get the Sortable instance of an element
 * @param  {HTMLElement} element The element
 * @return {Sortable|undefined}         The instance of Sortable
 */

Sortable.get = function (element) {
  return element[expando];
};
/**
 * Mount a plugin to Sortable
 * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted
 */


Sortable.mount = function () {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins[0].constructor === Array) plugins = plugins[0];
  plugins.forEach(function (plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }

    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);
    PluginManager.mount(plugin);
  });
};
/**
 * Create sortable instance
 * @param {HTMLElement}  el
 * @param {Object}      [options]
 */


Sortable.create = function (el, options) {
  return new Sortable(el, options);
}; // Export


Sortable.version = version;

var autoScrolls = [],
    scrollEl,
    scrollRootEl,
    scrolling = false,
    lastAutoScrollX,
    lastAutoScrollY,
    touchEvt$1,
    pointerElemChangedInterval;

function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    }; // Bind all private methods

    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }
  }

  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;

      if (this.sortable.nativeDraggable) {
        on(document, 'dragover', this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on(document, 'pointermove', this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on(document, 'touchmove', this._handleFallbackAutoScroll);
        } else {
          on(document, 'mousemove', this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;

      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop() {
      if (this.sortable.nativeDraggable) {
        off(document, 'dragover', this._handleAutoScroll);
      } else {
        off(document, 'pointermove', this._handleFallbackAutoScroll);
        off(document, 'touchmove', this._handleFallbackAutoScroll);
        off(document, 'mousemove', this._handleFallbackAutoScroll);
      }

      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;

      var x = (evt.touches ? evt.touches[0] : evt).clientX,
          y = (evt.touches ? evt.touches[0] : evt).clientY,
          elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt; // IE does not seem to have native autoscroll,
      // Edge's autoscroll seems too conditional,
      // MACOS Safari does not have autoscroll,
      // Firefox and Chrome are good

      if (fallback || Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change

        var ogElemScroller = getParentAutoScrollElement(elem, true);

        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour

          pointerElemChangedInterval = setInterval(function () {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);

            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }

            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }

        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends(AutoScroll, {
    pluginName: 'scroll',
    initializeByDefault: true
  });
}

function clearAutoScrolls() {
  autoScrolls.forEach(function (autoScroll) {
    clearInterval(autoScroll.pid);
  });
  autoScrolls = [];
}

function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}

var autoScroll = throttle(function (evt, options, rootEl, isFallback) {
  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
  if (!options.scroll) return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX,
      y = (evt.touches ? evt.touches[0] : evt).clientY,
      sens = options.scrollSensitivity,
      speed = options.scrollSpeed,
      winScroller = getWindowScrollingElement();
  var scrollThisInstance = false,
      scrollCustomFn; // New scroll root, set scrollEl

  if (scrollRootEl !== rootEl) {
    scrollRootEl = rootEl;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;

    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl, true);
    }
  }

  var layersOut = 0;
  var currentParent = scrollEl;

  do {
    var el = currentParent,
        rect = getRect(el),
        top = rect.top,
        bottom = rect.bottom,
        left = rect.left,
        right = rect.right,
        width = rect.width,
        height = rect.height,
        canScrollX = void 0,
        canScrollY = void 0,
        scrollWidth = el.scrollWidth,
        scrollHeight = el.scrollHeight,
        elCSS = css(el),
        scrollPosX = el.scrollLeft,
        scrollPosY = el.scrollTop;

    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');
    }

    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);

    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }

    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);

      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        /* jshint loopfunc:true */

        autoScrolls[layersOut].pid = setInterval(function () {
          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely

          }

          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

          if (typeof scrollCustomFn === 'function') {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {
              return;
            }
          }

          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }

    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));

  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
}, 30);

var drop = function drop(_ref) {
  var originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      dragEl = _ref.dragEl,
      activeSortable = _ref.activeSortable,
      dispatchSortableEvent = _ref.dispatchSortableEvent,
      hideGhostForTarget = _ref.hideGhostForTarget,
      unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent) return;
  var toSortable = putSortable || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();

  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent('spill');
    this.onSpill({
      dragEl: dragEl,
      putSortable: putSortable
    });
  }
};

function Revert() {}

Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl = _ref3.dragEl,
        putSortable = _ref3.putSortable;
    this.sortable.captureAnimationState();

    if (putSortable) {
      putSortable.captureAnimationState();
    }

    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);

    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl);
    }

    this.sortable.animateAll();

    if (putSortable) {
      putSortable.animateAll();
    }
  },
  drop: drop
};

_extends(Revert, {
  pluginName: 'revertOnSpill'
});

function Remove() {}

Remove.prototype = {
  onSpill: function onSpill(_ref4) {
    var dragEl = _ref4.dragEl,
        putSortable = _ref4.putSortable;
    var parentSortable = putSortable || this.sortable;
    parentSortable.captureAnimationState();
    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);
    parentSortable.animateAll();
  },
  drop: drop
};

_extends(Remove, {
  pluginName: 'removeOnSpill'
});

var lastSwapEl;

function SwapPlugin() {
  function Swap() {
    this.defaults = {
      swapClass: 'sortable-swap-highlight'
    };
  }

  Swap.prototype = {
    dragStart: function dragStart(_ref) {
      var dragEl = _ref.dragEl;
      lastSwapEl = dragEl;
    },
    dragOverValid: function dragOverValid(_ref2) {
      var completed = _ref2.completed,
          target = _ref2.target,
          onMove = _ref2.onMove,
          activeSortable = _ref2.activeSortable,
          changed = _ref2.changed,
          cancel = _ref2.cancel;
      if (!activeSortable.options.swap) return;
      var el = this.sortable.el,
          options = this.options;

      if (target && target !== el) {
        var prevSwapEl = lastSwapEl;

        if (onMove(target) !== false) {
          toggleClass(target, options.swapClass, true);
          lastSwapEl = target;
        } else {
          lastSwapEl = null;
        }

        if (prevSwapEl && prevSwapEl !== lastSwapEl) {
          toggleClass(prevSwapEl, options.swapClass, false);
        }
      }

      changed();
      completed(true);
      cancel();
    },
    drop: function drop(_ref3) {
      var activeSortable = _ref3.activeSortable,
          putSortable = _ref3.putSortable,
          dragEl = _ref3.dragEl;
      var toSortable = putSortable || this.sortable;
      var options = this.options;
      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);

      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {
        if (dragEl !== lastSwapEl) {
          toSortable.captureAnimationState();
          if (toSortable !== activeSortable) activeSortable.captureAnimationState();
          swapNodes(dragEl, lastSwapEl);
          toSortable.animateAll();
          if (toSortable !== activeSortable) activeSortable.animateAll();
        }
      }
    },
    nulling: function nulling() {
      lastSwapEl = null;
    }
  };
  return _extends(Swap, {
    pluginName: 'swap',
    eventProperties: function eventProperties() {
      return {
        swapItem: lastSwapEl
      };
    }
  });
}

function swapNodes(n1, n2) {
  var p1 = n1.parentNode,
      p2 = n2.parentNode,
      i1,
      i2;
  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;
  i1 = index(n1);
  i2 = index(n2);

  if (p1.isEqualNode(p2) && i1 < i2) {
    i2++;
  }

  p1.insertBefore(n2, p1.children[i1]);
  p2.insertBefore(n1, p2.children[i2]);
}

var multiDragElements = [],
    multiDragClones = [],
    lastMultiDragSelect,
    // for selection with modifier key down (SHIFT)
multiDragSortable,
    initialFolding = false,
    // Initial multi-drag fold when drag started
folding = false,
    // Folding any other time
dragStarted = false,
    dragEl$1,
    clonesFromRect,
    clonesHidden;

function MultiDragPlugin() {
  function MultiDrag(sortable) {
    // Bind all private methods
    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }

    if (sortable.options.supportPointer) {
      on(document, 'pointerup', this._deselectMultiDrag);
    } else {
      on(document, 'mouseup', this._deselectMultiDrag);
      on(document, 'touchend', this._deselectMultiDrag);
    }

    on(document, 'keydown', this._checkKeyDown);
    on(document, 'keyup', this._checkKeyUp);
    this.defaults = {
      selectedClass: 'sortable-selected',
      multiDragKey: null,
      setData: function setData(dataTransfer, dragEl) {
        var data = '';

        if (multiDragElements.length && multiDragSortable === sortable) {
          multiDragElements.forEach(function (multiDragElement, i) {
            data += (!i ? '' : ', ') + multiDragElement.textContent;
          });
        } else {
          data = dragEl.textContent;
        }

        dataTransfer.setData('Text', data);
      }
    };
  }

  MultiDrag.prototype = {
    multiDragKeyDown: false,
    isMultiDrag: false,
    delayStartGlobal: function delayStartGlobal(_ref) {
      var dragged = _ref.dragEl;
      dragEl$1 = dragged;
    },
    delayEnded: function delayEnded() {
      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);
    },
    setupClone: function setupClone(_ref2) {
      var sortable = _ref2.sortable,
          cancel = _ref2.cancel;
      if (!this.isMultiDrag) return;

      for (var i = 0; i < multiDragElements.length; i++) {
        multiDragClones.push(clone(multiDragElements[i]));
        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;
        multiDragClones[i].draggable = false;
        multiDragClones[i].style['will-change'] = '';
        toggleClass(multiDragClones[i], this.options.selectedClass, false);
        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);
      }

      sortable._hideClone();

      cancel();
    },
    clone: function clone(_ref3) {
      var sortable = _ref3.sortable,
          rootEl = _ref3.rootEl,
          dispatchSortableEvent = _ref3.dispatchSortableEvent,
          cancel = _ref3.cancel;
      if (!this.isMultiDrag) return;

      if (!this.options.removeCloneOnHide) {
        if (multiDragElements.length && multiDragSortable === sortable) {
          insertMultiDragClones(true, rootEl);
          dispatchSortableEvent('clone');
          cancel();
        }
      }
    },
    showClone: function showClone(_ref4) {
      var cloneNowShown = _ref4.cloneNowShown,
          rootEl = _ref4.rootEl,
          cancel = _ref4.cancel;
      if (!this.isMultiDrag) return;
      insertMultiDragClones(false, rootEl);
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', '');
      });
      cloneNowShown();
      clonesHidden = false;
      cancel();
    },
    hideClone: function hideClone(_ref5) {
      var _this = this;

      var sortable = _ref5.sortable,
          cloneNowHidden = _ref5.cloneNowHidden,
          cancel = _ref5.cancel;
      if (!this.isMultiDrag) return;
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', 'none');

        if (_this.options.removeCloneOnHide && clone.parentNode) {
          clone.parentNode.removeChild(clone);
        }
      });
      cloneNowHidden();
      clonesHidden = true;
      cancel();
    },
    dragStartGlobal: function dragStartGlobal(_ref6) {
      var sortable = _ref6.sortable;

      if (!this.isMultiDrag && multiDragSortable) {
        multiDragSortable.multiDrag._deselectMultiDrag();
      }

      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.sortableIndex = index(multiDragElement);
      }); // Sort multi-drag elements

      multiDragElements = multiDragElements.sort(function (a, b) {
        return a.sortableIndex - b.sortableIndex;
      });
      dragStarted = true;
    },
    dragStarted: function dragStarted(_ref7) {
      var _this2 = this;

      var sortable = _ref7.sortable;
      if (!this.isMultiDrag) return;

      if (this.options.sort) {
        // Capture rects,
        // hide multi drag elements (by positioning them absolute),
        // set multi drag elements rects to dragRect,
        // show multi drag elements,
        // animate to rects,
        // unset rects & remove from DOM
        sortable.captureAnimationState();

        if (this.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            css(multiDragElement, 'position', 'absolute');
          });
          var dragRect = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRect);
          });
          folding = true;
          initialFolding = true;
        }
      }

      sortable.animateAll(function () {
        folding = false;
        initialFolding = false;

        if (_this2.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
        } // Remove all auxiliary multidrag items from el, if sorting enabled


        if (_this2.options.sort) {
          removeMultiDragElements();
        }
      });
    },
    dragOver: function dragOver(_ref8) {
      var target = _ref8.target,
          completed = _ref8.completed,
          cancel = _ref8.cancel;

      if (folding && ~multiDragElements.indexOf(target)) {
        completed(false);
        cancel();
      }
    },
    revert: function revert(_ref9) {
      var fromSortable = _ref9.fromSortable,
          rootEl = _ref9.rootEl,
          sortable = _ref9.sortable,
          dragRect = _ref9.dragRect;

      if (multiDragElements.length > 1) {
        // Setup unfold animation
        multiDragElements.forEach(function (multiDragElement) {
          sortable.addAnimationState({
            target: multiDragElement,
            rect: folding ? getRect(multiDragElement) : dragRect
          });
          unsetRect(multiDragElement);
          multiDragElement.fromRect = dragRect;
          fromSortable.removeAnimationState(multiDragElement);
        });
        folding = false;
        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref10) {
      var sortable = _ref10.sortable,
          isOwner = _ref10.isOwner,
          insertion = _ref10.insertion,
          activeSortable = _ref10.activeSortable,
          parentEl = _ref10.parentEl,
          putSortable = _ref10.putSortable;
      var options = this.options;

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        }

        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location

        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {
          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible
          var dragRectAbsolute = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted
            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable

            parentEl.appendChild(multiDragElement);
          });
          folding = true;
        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out


        if (!isOwner) {
          // Only remove if not folding (folding will remove them anyways)
          if (!folding) {
            removeMultiDragElements();
          }

          if (multiDragElements.length > 1) {
            var clonesHiddenBefore = clonesHidden;

            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden


            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {
              multiDragClones.forEach(function (clone) {
                activeSortable.addAnimationState({
                  target: clone,
                  rect: clonesFromRect
                });
                clone.fromRect = clonesFromRect;
                clone.thisAnimationDuration = null;
              });
            }
          } else {
            activeSortable._showClone(sortable);
          }
        }
      }
    },
    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {
      var dragRect = _ref11.dragRect,
          isOwner = _ref11.isOwner,
          activeSortable = _ref11.activeSortable;
      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.thisAnimationDuration = null;
      });

      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {
        clonesFromRect = _extends({}, dragRect);
        var dragMatrix = matrix(dragEl$1, true);
        clonesFromRect.top -= dragMatrix.f;
        clonesFromRect.left -= dragMatrix.e;
      }
    },
    dragOverAnimationComplete: function dragOverAnimationComplete() {
      if (folding) {
        folding = false;
        removeMultiDragElements();
      }
    },
    drop: function drop(_ref12) {
      var evt = _ref12.originalEvent,
          rootEl = _ref12.rootEl,
          parentEl = _ref12.parentEl,
          sortable = _ref12.sortable,
          dispatchSortableEvent = _ref12.dispatchSortableEvent,
          oldIndex = _ref12.oldIndex,
          putSortable = _ref12.putSortable;
      var toSortable = putSortable || this.sortable;
      if (!evt) return;
      var options = this.options,
          children = parentEl.children; // Multi-drag selection

      if (!dragStarted) {
        if (options.multiDragKey && !this.multiDragKeyDown) {
          this._deselectMultiDrag();
        }

        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));

        if (!~multiDragElements.indexOf(dragEl$1)) {
          multiDragElements.push(dragEl$1);
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'select',
            targetEl: dragEl$1,
            originalEvt: evt
          }); // Modifier activated, select from last to dragEl

          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {
            var lastIndex = index(lastMultiDragSelect),
                currentIndex = index(dragEl$1);

            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {
              // Must include lastMultiDragSelect (select it), in case modified selection from no selection
              // (but previous selection existed)
              var n, i;

              if (currentIndex > lastIndex) {
                i = lastIndex;
                n = currentIndex;
              } else {
                i = currentIndex;
                n = lastIndex + 1;
              }

              for (; i < n; i++) {
                if (~multiDragElements.indexOf(children[i])) continue;
                toggleClass(children[i], options.selectedClass, true);
                multiDragElements.push(children[i]);
                dispatchEvent({
                  sortable: sortable,
                  rootEl: rootEl,
                  name: 'select',
                  targetEl: children[i],
                  originalEvt: evt
                });
              }
            }
          } else {
            lastMultiDragSelect = dragEl$1;
          }

          multiDragSortable = toSortable;
        } else {
          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);
          lastMultiDragSelect = null;
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'deselect',
            targetEl: dragEl$1,
            originalEvt: evt
          });
        }
      } // Multi-drag drop


      if (dragStarted && this.isMultiDrag) {
        // Do not "unfold" after around dragEl if reverted
        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {
          var dragRect = getRect(dragEl$1),
              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');
          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;
          toSortable.captureAnimationState();

          if (!initialFolding) {
            if (options.animation) {
              dragEl$1.fromRect = dragRect;
              multiDragElements.forEach(function (multiDragElement) {
                multiDragElement.thisAnimationDuration = null;

                if (multiDragElement !== dragEl$1) {
                  var rect = folding ? getRect(multiDragElement) : dragRect;
                  multiDragElement.fromRect = rect; // Prepare unfold animation

                  toSortable.addAnimationState({
                    target: multiDragElement,
                    rect: rect
                  });
                }
              });
            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert
            // properly they must all be removed


            removeMultiDragElements();
            multiDragElements.forEach(function (multiDragElement) {
              if (children[multiDragIndex]) {
                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);
              } else {
                parentEl.appendChild(multiDragElement);
              }

              multiDragIndex++;
            }); // If initial folding is done, the elements may have changed position because they are now
            // unfolding around dragEl, even though dragEl may not have his index changed, so update event
            // must be fired here as Sortable will not.

            if (oldIndex === index(dragEl$1)) {
              var update = false;
              multiDragElements.forEach(function (multiDragElement) {
                if (multiDragElement.sortableIndex !== index(multiDragElement)) {
                  update = true;
                  return;
                }
              });

              if (update) {
                dispatchSortableEvent('update');
              }
            }
          } // Must be done after capturing individual rects (scroll bar)


          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
          toSortable.animateAll();
        }

        multiDragSortable = toSortable;
      } // Remove clones if necessary


      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        multiDragClones.forEach(function (clone) {
          clone.parentNode && clone.parentNode.removeChild(clone);
        });
      }
    },
    nullingGlobal: function nullingGlobal() {
      this.isMultiDrag = dragStarted = false;
      multiDragClones.length = 0;
    },
    destroyGlobal: function destroyGlobal() {
      this._deselectMultiDrag();

      off(document, 'pointerup', this._deselectMultiDrag);
      off(document, 'mouseup', this._deselectMultiDrag);
      off(document, 'touchend', this._deselectMultiDrag);
      off(document, 'keydown', this._checkKeyDown);
      off(document, 'keyup', this._checkKeyUp);
    },
    _deselectMultiDrag: function _deselectMultiDrag(evt) {
      if (typeof dragStarted !== "undefined" && dragStarted) return; // Only deselect if selection is in this sortable

      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable

      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click

      if (evt && evt.button !== 0) return;

      while (multiDragElements.length) {
        var el = multiDragElements[0];
        toggleClass(el, this.options.selectedClass, false);
        multiDragElements.shift();
        dispatchEvent({
          sortable: this.sortable,
          rootEl: this.sortable.el,
          name: 'deselect',
          targetEl: el,
          originalEvt: evt
        });
      }
    },
    _checkKeyDown: function _checkKeyDown(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = true;
      }
    },
    _checkKeyUp: function _checkKeyUp(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = false;
      }
    }
  };
  return _extends(MultiDrag, {
    // Static methods & properties
    pluginName: 'multiDrag',
    utils: {
      /**
       * Selects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be selected
       */
      select: function select(el) {
        var sortable = el.parentNode[expando];
        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;

        if (multiDragSortable && multiDragSortable !== sortable) {
          multiDragSortable.multiDrag._deselectMultiDrag();

          multiDragSortable = sortable;
        }

        toggleClass(el, sortable.options.selectedClass, true);
        multiDragElements.push(el);
      },

      /**
       * Deselects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be deselected
       */
      deselect: function deselect(el) {
        var sortable = el.parentNode[expando],
            index = multiDragElements.indexOf(el);
        if (!sortable || !sortable.options.multiDrag || !~index) return;
        toggleClass(el, sortable.options.selectedClass, false);
        multiDragElements.splice(index, 1);
      }
    },
    eventProperties: function eventProperties() {
      var _this3 = this;

      var oldIndicies = [],
          newIndicies = [];
      multiDragElements.forEach(function (multiDragElement) {
        oldIndicies.push({
          multiDragElement: multiDragElement,
          index: multiDragElement.sortableIndex
        }); // multiDragElements will already be sorted if folding

        var newIndex;

        if (folding && multiDragElement !== dragEl$1) {
          newIndex = -1;
        } else if (folding) {
          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');
        } else {
          newIndex = index(multiDragElement);
        }

        newIndicies.push({
          multiDragElement: multiDragElement,
          index: newIndex
        });
      });
      return {
        items: _toConsumableArray(multiDragElements),
        clones: [].concat(multiDragClones),
        oldIndicies: oldIndicies,
        newIndicies: newIndicies
      };
    },
    optionListeners: {
      multiDragKey: function multiDragKey(key) {
        key = key.toLowerCase();

        if (key === 'ctrl') {
          key = 'Control';
        } else if (key.length > 1) {
          key = key.charAt(0).toUpperCase() + key.substr(1);
        }

        return key;
      }
    }
  });
}

function insertMultiDragElements(clonesInserted, rootEl) {
  multiDragElements.forEach(function (multiDragElement, i) {
    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(multiDragElement, target);
    } else {
      rootEl.appendChild(multiDragElement);
    }
  });
}
/**
 * Insert multi-drag clones
 * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted
 * @param  {HTMLElement} rootEl
 */


function insertMultiDragClones(elementsInserted, rootEl) {
  multiDragClones.forEach(function (clone, i) {
    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(clone, target);
    } else {
      rootEl.appendChild(clone);
    }
  });
}

function removeMultiDragElements() {
  multiDragElements.forEach(function (multiDragElement) {
    if (multiDragElement === dragEl$1) return;
    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);
  });
}

Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sortable);



/***/ }),

/***/ "./node_modules/vue-draggable/lib/vue-draggable.js":
/*!*********************************************************!*\
  !*** ./node_modules/vue-draggable/lib/vue-draggable.js ***!
  \*********************************************************/
/***/ (function(module) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_563__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_563__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_563__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_563__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_563__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_563__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__nested_webpack_require_563__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__nested_webpack_require_563__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __nested_webpack_require_563__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__nested_webpack_require_563__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_563__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_563__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_563__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_563__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_563__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_563__(__nested_webpack_require_563__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/components/vue-draggable-group.component.js":
/*!*********************************************************!*\
  !*** ./src/components/vue-draggable-group.component.js ***!
  \*********************************************************/
/*! exports provided: VueDraggableGroup */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_4337__) {

"use strict";
__nested_webpack_require_4337__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_4337__.d(__webpack_exports__, "VueDraggableGroup", function() { return VueDraggableGroup; });
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var CUSTOM_EVENTS = ['added', 'removed', 'reordered'];
var VueDraggableGroup = {
  name: 'VueDraggableGroup',
  props: {
    groups: {
      required: true,
      type: Array
    },
    value: {
      required: true,
      type: Array
    },
    itemsKey: {
      type: String,
      "default": 'items'
    }
  },
  render: function render() {
    return this.$scopedSlots["default"]({});
  },
  methods: {
    added: function added(event) {
      var _this = this,
          _this$value;

      var newItems = this.groups.map(function (group) {
        return group[_this.itemsKey];
      }).reduce(function (prev, curr) {
        return [].concat(_toConsumableArray(prev), _toConsumableArray(curr));
      }, []).filter(function (item) {
        return event.detail.ids.map(Number).indexOf(item.id) >= 0;
      });

      (_this$value = this.value).splice.apply(_this$value, [event.detail.index, 0].concat(_toConsumableArray(newItems)));

      this.$emit('change', this.groups);
    },
    removed: function removed(event) {
      var newArray = this.value.filter(function (item) {
        return event.detail.ids.map(Number).indexOf(item.id) < 0;
      });
      this.$emit('input', newArray);
    },
    reordered: function reordered(event, group) {
      var reorderedItems = this.value.filter(function (item) {
        return event.detail.ids.map(Number).indexOf(item.id) >= 0;
      });
      var notReorderedItems = this.value.filter(function (item) {
        return event.detail.ids.map(Number).indexOf(item.id) < 0;
      });
      notReorderedItems.splice.apply(notReorderedItems, [event.detail.index, 0].concat(_toConsumableArray(reorderedItems)));
      this.$emit('input', notReorderedItems);
      this.$emit('change', this.groups);
    },
    addListeners: function addListeners() {
      var _this2 = this;

      CUSTOM_EVENTS.forEach(function (event) {
        return _this2.$el.addEventListener(event, _this2[event]);
      });
    },
    removeListeners: function removeListeners() {
      var _this3 = this;

      CUSTOM_EVENTS.forEach(function (event) {
        return _this3.$el.removeEventListener(event, _this3[event]);
      });
    }
  },
  mounted: function mounted() {
    this.addListeners();
  },
  beforeDestroy: function beforeDestroy() {
    this.removeListeners();
  }
};

/***/ }),

/***/ "./src/core/helpers/dom.helper.js":
/*!****************************************!*\
  !*** ./src/core/helpers/dom.helper.js ***!
  \****************************************/
/*! exports provided: getDroptargets, getDraggables, updateInitialAttributes, setInitialAtributes, removeOldDropzoneAreaElements, getContainer, addDropeffects, clearDropeffects, hasModifier */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_7854__) {

"use strict";
__nested_webpack_require_7854__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "getDroptargets", function() { return getDroptargets; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "getDraggables", function() { return getDraggables; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "updateInitialAttributes", function() { return updateInitialAttributes; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "setInitialAtributes", function() { return setInitialAtributes; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "removeOldDropzoneAreaElements", function() { return removeOldDropzoneAreaElements; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "getContainer", function() { return getContainer; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "addDropeffects", function() { return addDropeffects; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "clearDropeffects", function() { return clearDropeffects; });
/* harmony export (binding) */ __nested_webpack_require_7854__.d(__webpack_exports__, "hasModifier", function() { return hasModifier; });
var getDroptargets = function getDroptargets(el, dropzoneSelector) {
  return el.querySelectorAll(dropzoneSelector);
};
var getDraggables = function getDraggables(el, draggableSelector) {
  return el.querySelectorAll(draggableSelector);
};
var updateInitialAttributes = function updateInitialAttributes(el) {
  this.targets = getDroptargets(el, this.defaultOptions.dropzoneSelector);
  this.items = getDraggables(el, this.defaultOptions.draggableSelector);

  for (var i = 0; i < this.targets.length; i++) {
    this.targets[i].setAttribute('aria-dropeffect', 'none');
  }

  for (var _i = 0; _i < this.items.length; _i++) {
    this.items[_i].setAttribute('draggable', 'true');

    if (this.items[_i].getAttribute('aria-grabbed') !== 'true') {
      this.items[_i].setAttribute('aria-grabbed', 'false');
    }

    this.items[_i].setAttribute('tabindex', '0');
  }
};
var setInitialAtributes = function setInitialAtributes(el) {
  this.targets = getDroptargets(el, this.defaultOptions.dropzoneSelector);
  this.items = getDraggables(el, this.defaultOptions.draggableSelector);

  for (var i = 0; i < this.targets.length; i++) {
    this.targets[i].setAttribute('aria-dropeffect', 'none');
  }

  for (var _i2 = 0; _i2 < this.items.length; _i2++) {
    this.items[_i2].setAttribute('draggable', 'true');

    this.items[_i2].setAttribute('aria-grabbed', 'false');

    this.items[_i2].setAttribute('tabindex', '0');
  }
};
var removeOldDropzoneAreaElements = function removeOldDropzoneAreaElements() {
  var oldItemDropzoneElements = document.querySelectorAll('.item-dropzone-area');

  for (var i = 0; i < oldItemDropzoneElements.length; i++) {
    oldItemDropzoneElements[i].remove();
  }
};
var getContainer = function getContainer(element) {
  var containerElement = element;

  do {
    if (containerElement && containerElement.nodeType === 1 && containerElement.getAttribute('aria-dropeffect')) {
      return containerElement;
    }
  } while (containerElement = containerElement ? containerElement.parentNode : null);

  return null;
};
var addDropeffects = function addDropeffects(items, selections, targets) {
  // apply aria-dropeffect and tabindex to all targets apart from the owner
  for (var len = targets.length, i = 0; i < len; i++) {
    if (targets[i] !== selections.owner && targets[i].getAttribute('aria-dropeffect') === 'none') {
      targets[i].setAttribute('aria-dropeffect', 'move');
      targets[i].setAttribute('tabindex', '0');
    }
  } // remove aria-grabbed and tabindex from all items inside those containers


  for (var _len = items.length, _i3 = 0; _i3 < _len; _i3++) {
    if (items[_i3].parentNode !== selections.owner && items[_i3].getAttribute('aria-grabbed')) {
      items[_i3].removeAttribute('aria-grabbed');

      items[_i3].removeAttribute('tabindex');
    }
  }
};
var clearDropeffects = function clearDropeffects(items, selections, targets) {
  // if we dont't have any selected items just skip
  if (!selections.items.length) {
    return;
  } // reset aria-dropeffect and remove tabindex from all targets


  for (var i = 0; i < targets.length; i++) {
    if (targets[i].getAttribute('aria-dropeffect') !== 'none') {
      targets[i].setAttribute('aria-dropeffect', 'none');
      targets[i].removeAttribute('tabindex');
    }
  } // restore aria-grabbed and tabindex to all selectable items
  // without changing the grabbed value of any existing selected items


  for (var _i4 = 0; _i4 < items.length; _i4++) {
    if (!items[_i4].getAttribute('aria-grabbed')) {
      items[_i4].setAttribute('aria-grabbed', 'false');

      items[_i4].setAttribute('tabindex', '0');
    } else if (items[_i4].getAttribute('aria-grabbed') === 'true') {
      items[_i4].setAttribute('tabindex', '0');
    }
  }
};
var hasModifier = function hasModifier(e) {
  return e.ctrlKey || e.metaKey || e.shiftKey;
};

/***/ }),

/***/ "./src/core/helpers/events.helper.js":
/*!*******************************************!*\
  !*** ./src/core/helpers/events.helper.js ***!
  \*******************************************/
/*! exports provided: dispatchCustomEvent, dispatchReorderEvents */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_13338__) {

"use strict";
__nested_webpack_require_13338__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_13338__.d(__webpack_exports__, "dispatchCustomEvent", function() { return dispatchCustomEvent; });
/* harmony export (binding) */ __nested_webpack_require_13338__.d(__webpack_exports__, "dispatchReorderEvents", function() { return dispatchReorderEvents; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var createCustomEvent = function createCustomEvent(name, data) {
  return new CustomEvent(name, {
    detail: data
  });
};

var dispatchCustomEvent = function dispatchCustomEvent(name, data, element) {
  var customEvent = createCustomEvent(name, data);
  element.dispatchEvent(customEvent);
};
var dispatchReorderEvents = function dispatchReorderEvents(e) {
  var oldItems = this.selections.droptarget.querySelectorAll(this.defaultOptions.draggableSelector);
  var index = this.nextItemElement ? Array.prototype.indexOf.call(oldItems, this.nextItemElement) : oldItems.length;

  var eventData = _objectSpread({
    ids: this.selections.items.map(function (item) {
      return item.dataset.id;
    }),
    index: index,
    nativeEvent: e
  }, this.selections);

  if (this.selections.droptarget === this.selections.owner) {
    dispatchCustomEvent('reordered', eventData, this.selections.droptarget);
    return;
  }

  dispatchCustomEvent('added', eventData, this.selections.droptarget);
  dispatchCustomEvent('removed', eventData, this.selections.owner);
};

/***/ }),

/***/ "./src/core/helpers/index.js":
/*!***********************************!*\
  !*** ./src/core/helpers/index.js ***!
  \***********************************/
/*! exports provided: getDroptargets, getDraggables, updateInitialAttributes, setInitialAtributes, removeOldDropzoneAreaElements, getContainer, addDropeffects, clearDropeffects, hasModifier, addSelection, removeSelection, clearSelections, stopDragAndDrop, dispatchCustomEvent, dispatchReorderEvents */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_16362__) {

"use strict";
__nested_webpack_require_16362__.r(__webpack_exports__);
/* harmony import */ var _dom_helper__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_16362__(/*! ./dom.helper */ "./src/core/helpers/dom.helper.js");
/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "getDroptargets", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["getDroptargets"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "getDraggables", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["getDraggables"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "updateInitialAttributes", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["updateInitialAttributes"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "setInitialAtributes", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["setInitialAtributes"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "removeOldDropzoneAreaElements", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["removeOldDropzoneAreaElements"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "getContainer", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["getContainer"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "addDropeffects", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "clearDropeffects", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "hasModifier", function() { return _dom_helper__WEBPACK_IMPORTED_MODULE_0__["hasModifier"]; });

/* harmony import */ var _state_helper__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_16362__(/*! ./state.helper */ "./src/core/helpers/state.helper.js");
/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "addSelection", function() { return _state_helper__WEBPACK_IMPORTED_MODULE_1__["addSelection"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "removeSelection", function() { return _state_helper__WEBPACK_IMPORTED_MODULE_1__["removeSelection"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "clearSelections", function() { return _state_helper__WEBPACK_IMPORTED_MODULE_1__["clearSelections"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "stopDragAndDrop", function() { return _state_helper__WEBPACK_IMPORTED_MODULE_1__["stopDragAndDrop"]; });

/* harmony import */ var _events_helper__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_16362__(/*! ./events.helper */ "./src/core/helpers/events.helper.js");
/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "dispatchCustomEvent", function() { return _events_helper__WEBPACK_IMPORTED_MODULE_2__["dispatchCustomEvent"]; });

/* harmony reexport (safe) */ __nested_webpack_require_16362__.d(__webpack_exports__, "dispatchReorderEvents", function() { return _events_helper__WEBPACK_IMPORTED_MODULE_2__["dispatchReorderEvents"]; });





/***/ }),

/***/ "./src/core/helpers/state.helper.js":
/*!******************************************!*\
  !*** ./src/core/helpers/state.helper.js ***!
  \******************************************/
/*! exports provided: addSelection, removeSelection, clearSelections, stopDragAndDrop */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_19960__) {

"use strict";
__nested_webpack_require_19960__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_19960__.d(__webpack_exports__, "addSelection", function() { return addSelection; });
/* harmony export (binding) */ __nested_webpack_require_19960__.d(__webpack_exports__, "removeSelection", function() { return removeSelection; });
/* harmony export (binding) */ __nested_webpack_require_19960__.d(__webpack_exports__, "clearSelections", function() { return clearSelections; });
/* harmony export (binding) */ __nested_webpack_require_19960__.d(__webpack_exports__, "stopDragAndDrop", function() { return stopDragAndDrop; });
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var addSelection = function addSelection(item) {
  // if the owner reference is still null, set it to this item's parent
  // so that further selection is only allowed within the same container
  if (!this.selections.owner) {
    this.selections.owner = item.parentNode;
  } // or if that's already happened then compare it with this item's parent
  // and if they're not the same container, return to prevent selection


  if (!this.defaultOptions.multipleDropzonesItemsDraggingEnabled && this.selections.owner !== item.parentNode) {
    return;
  } // set this item's grabbed state


  item.setAttribute('aria-grabbed', 'true'); // add it to the items array

  this.selections.items = this.selections.items.indexOf(item) >= 0 ? this.selections.items : [].concat(_toConsumableArray(this.selections.items), [item]);
};
var removeSelection = function removeSelection(item) {
  // reset this item's grabbed state
  item.setAttribute('aria-grabbed', 'false'); // then find and remove this item from the existing items array

  for (var i = 0; i < this.selections.items.length; i++) {
    if (this.selections.items[i] === item) {
      this.selections.items.splice(i, 1);
      break;
    }
  }
};
var clearSelections = function clearSelections() {
  // if we have any selected items
  if (this.selections.items.length) {
    // reset the owner reference
    this.selections.owner = null; // reset the grabbed state on every selected item

    for (var i = 0; i < this.selections.items.length; i++) {
      this.selections.items[i].setAttribute('aria-grabbed', 'false');
    } // then reset the items array


    this.selections.items = [];
  }
};
var stopDragAndDrop = function stopDragAndDrop() {
  // throw exception and catch this to stop further d&d
  throw new Error('Requested D&D stop...');
};

/***/ }),

/***/ "./src/core/index.js":
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/*! exports provided: VueDraggable */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_23150__) {

"use strict";
__nested_webpack_require_23150__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_23150__.d(__webpack_exports__, "VueDraggable", function() { return VueDraggable; });
/* harmony import */ var _listeners__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_23150__(/*! ./listeners */ "./src/core/listeners/index.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_23150__(/*! ./helpers */ "./src/core/helpers/index.js");
/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_23150__(/*! ./options */ "./src/core/options.js");
/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_23150__(/*! ./state */ "./src/core/state.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }





var VueDraggable =
/*#__PURE__*/
function () {
  function VueDraggable(el, componentInstance, options) {
    _classCallCheck(this, VueDraggable);

    Object.assign(this, Object(_state__WEBPACK_IMPORTED_MODULE_3__["getState"])(), {
      defaultOptions: Object(_options__WEBPACK_IMPORTED_MODULE_2__["getOptions"])(componentInstance, options)
    }, {
      el: el
    });
    this.registerListeners(el);
    this.initiate(el);
  }

  _createClass(VueDraggable, [{
    key: "registerListeners",
    value: function registerListeners(el) {
      _listeners__WEBPACK_IMPORTED_MODULE_0__["attachListeners"].bind(this)(el);
    }
  }, {
    key: "initiate",
    value: function initiate(el) {
      _helpers__WEBPACK_IMPORTED_MODULE_1__["setInitialAtributes"].bind(this)(el);
    }
  }, {
    key: "update",
    value: function update(el) {
      _helpers__WEBPACK_IMPORTED_MODULE_1__["updateInitialAttributes"].bind(this)(el);
    }
  }]);

  return VueDraggable;
}();
;

/***/ }),

/***/ "./src/core/listeners/handlers/dragend.handler.js":
/*!********************************************************!*\
  !*** ./src/core/listeners/handlers/dragend.handler.js ***!
  \********************************************************/
/*! exports provided: dragendHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_25886__) {

"use strict";
__nested_webpack_require_25886__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_25886__.d(__webpack_exports__, "dragendHandler", function() { return dragendHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_25886__(/*! ./../../helpers */ "./src/core/helpers/index.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



var reorderDomElements = function reorderDomElements(droptarget, items, nextItemElement) {
  for (var i = 0; i < items.length; i++) {
    if (nextItemElement) {
      droptarget.insertBefore(items[i], nextItemElement);
      continue;
    }

    droptarget.appendChild(items[i]);
  }
};

var dragendHandler = function dragendHandler(e) {
  if (typeof this.defaultOptions.onDragend === 'function') {
    try {
      this.defaultOptions.onDragend(_objectSpread({
        nativeEvent: e,
        stop: _helpers__WEBPACK_IMPORTED_MODULE_0__["stopDragAndDrop"]
      }, this.selections));
    } catch (error) {
      Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["removeOldDropzoneAreaElements"])();
      return;
    }
  } // if we have a valid drop target reference
  // (which implies that we have some selected items)


  if (this.selections.droptarget) {
    if (this.defaultOptions.reactivityEnabled) {
      _helpers__WEBPACK_IMPORTED_MODULE_0__["dispatchReorderEvents"].bind(this)(e);
    } else {
      // make dom manipulation only if reactivity is disabled
      reorderDomElements(this.selections.droptarget, this.selections.items, this.nextItemElement);
    }

    if (typeof this.defaultOptions.onDrop === 'function') {
      this.defaultOptions.onDrop(_objectSpread({
        nativeEvent: e,
        stop: function stop() {
          throw new Error("Stop method is available only for callbacks\n                    'onDragstart' and 'onDragend'. For more info look at\n                    https://github.com/Vivify-Ideas/vue-draggable/blob/master/README.md\n                  ");
        }
      }, this.selections));
    } // prevent default to allow the action


    e.preventDefault();
  } // if we have any selected items


  if (this.selections.items.length) {
    // clear dropeffect from the target containers
    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets); // if we have a valid drop target reference

    if (this.selections.droptarget) {
      // reset the selections array
      _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)(); // reset the target's dragover class

      this.selections.droptarget.className = this.selections.droptarget.className.replace(/ dragover/g, ''); // reset the target reference

      this.selections.droptarget = null;
    }
  } // dropzone area elements


  Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["removeOldDropzoneAreaElements"])();
};

/***/ }),

/***/ "./src/core/listeners/handlers/dragenter.handler.js":
/*!**********************************************************!*\
  !*** ./src/core/listeners/handlers/dragenter.handler.js ***!
  \**********************************************************/
/*! exports provided: dragenterHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_30147__) {

"use strict";
__nested_webpack_require_30147__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_30147__.d(__webpack_exports__, "dragenterHandler", function() { return dragenterHandler; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var dragenterHandler = function dragenterHandler(e) {
  this.related = e.target;

  if (typeof this.defaultOptions.onDragenter === 'function') {
    try {
      this.defaultOptions.onDragenter(_objectSpread({
        nativeEvent: e,
        stop: function stop() {
          throw new Error("Stop method is available only for callbacks\n                    'onDragstart' and 'onDragend'. For more info look at\n                    https://github.com/Vivify-Ideas/vue-draggable/blob/master/README.md\n                  ");
        }
      }, this.selections));
    } catch (error) {
      e.preventDefault();
      return;
    }
  }
};

/***/ }),

/***/ "./src/core/listeners/handlers/dragleave.handler.js":
/*!**********************************************************!*\
  !*** ./src/core/listeners/handlers/dragleave.handler.js ***!
  \**********************************************************/
/*! exports provided: dragleaveHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_32424__) {

"use strict";
__nested_webpack_require_32424__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_32424__.d(__webpack_exports__, "dragleaveHandler", function() { return dragleaveHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_32424__(/*! ./../../helpers */ "./src/core/helpers/index.js");

var dragleaveHandler = function dragleaveHandler() {
  // get a drop target reference from the relatedTarget
  var droptarget = Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["getContainer"])(this.related); // if the drop target is different from the last stored reference
  // (or we have one of those references but not the other one)

  if (droptarget !== this.selections.droptarget) {
    // if we have a saved reference, clear its existing dragover class
    if (this.selections.droptarget) {
      this.selections.droptarget.className = this.selections.droptarget.className.replace(/ dragover/g, '');
    } // apply the dragover class to the new drop target reference


    if (droptarget) {
      droptarget.className += ' dragover';
    } // then save that reference for next time


    this.selections.droptarget = droptarget;
  }
};

/***/ }),

/***/ "./src/core/listeners/handlers/dragover.handler.js":
/*!*********************************************************!*\
  !*** ./src/core/listeners/handlers/dragover.handler.js ***!
  \*********************************************************/
/*! exports provided: dragoverHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_33969__) {

"use strict";
__nested_webpack_require_33969__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_33969__.d(__webpack_exports__, "dragoverHandler", function() { return dragoverHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_33969__(/*! ./../../helpers */ "./src/core/helpers/index.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var state = {
  previousTarget: null,
  dragoverCalls: 0
};

var displayDropzones = function displayDropzones(e) {
  if (state.dragoverCalls % 100 !== 0 && (e.target === state.previousTarget || !e.target || e.target.className === 'item-dropzone-area')) return;
  state.dragoverCalls++;
  state.previousTarget = e.target;
  this.nextItemElement = e.target.closest(this.defaultOptions.draggableSelector);
  this.selections.droptarget = e.target.closest(this.defaultOptions.dropzoneSelector);
  var itemDropzoneElement = document.createElement('div');
  itemDropzoneElement.className = 'item-dropzone-area';
  Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["removeOldDropzoneAreaElements"])();

  if (this.selections.droptarget && this.nextItemElement) {
    this.selections.droptarget.insertBefore(itemDropzoneElement, state.previousTarget.closest(this.defaultOptions.draggableSelector));
  }

  if (this.selections.droptarget && !this.nextItemElement) {
    this.selections.droptarget.appendChild(itemDropzoneElement);
  }
};

var dragoverHandler = function dragoverHandler(e) {
  // if we have any selected items,
  // allow them to be dragged
  if (this.selections.items.length) {
    e.preventDefault();
  }

  if (!this.defaultOptions.showDropzoneAreas) {
    return;
  }

  displayDropzones.bind(this)(e);

  if (typeof this.defaultOptions.onDragover === 'function') {
    try {
      this.defaultOptions.onDragover(_objectSpread({
        nativeEvent: e,
        stop: function stop() {
          throw new Error("Stop method is available only for callbacks\n                    'onDragstart' and 'onDragend'. For more info look at\n                    https://github.com/Vivify-Ideas/vue-draggable/blob/master/README.md\n                  ");
        }
      }, this.selections));
    } catch (error) {
      e.preventDefault();
      return;
    }
  }
};

/***/ }),

/***/ "./src/core/listeners/handlers/dragstart.handler.js":
/*!**********************************************************!*\
  !*** ./src/core/listeners/handlers/dragstart.handler.js ***!
  \**********************************************************/
/*! exports provided: dragstartHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_37610__) {

"use strict";
__nested_webpack_require_37610__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_37610__.d(__webpack_exports__, "dragstartHandler", function() { return dragstartHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_37610__(/*! ./../../helpers */ "./src/core/helpers/index.js");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


var dragstartHandler = function dragstartHandler(e) {
  var elem = e.target.closest(this.defaultOptions.draggableSelector); // if the element's parent is not the owner, then block this event

  if (!this.defaultOptions.multipleDropzonesItemsDraggingEnabled && elem && this.selections.owner !== elem.parentNode) {
    e.preventDefault();
    return;
  }

  if (typeof this.defaultOptions.onDragstart === 'function') {
    try {
      this.defaultOptions.onDragstart(_objectSpread({
        nativeEvent: e,
        stop: _helpers__WEBPACK_IMPORTED_MODULE_0__["stopDragAndDrop"]
      }, this.selections));
    } catch (error) {
      e.preventDefault();
      Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["removeOldDropzoneAreaElements"])();
      return;
    }
  } // [else] if the multiple selection modifier is pressed
  // and the item's grabbed state is currently false


  if (Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e) && elem.getAttribute('aria-grabbed') === 'false') {
    // add this additional selection
    _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(elem);
  } // we don't need the transfer data, but we have to define something
  // otherwise the drop action won't work at all in firefox
  // most browsers support the proper mime-type syntax, eg. "text/plain"
  // but we have to use this incorrect syntax for the benefit of IE10+


  e.dataTransfer.setData('text', ''); // apply dropeffect to the target containers

  Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"])(this.items, this.selections, this.targets);
};

/***/ }),

/***/ "./src/core/listeners/handlers/index.js":
/*!**********************************************!*\
  !*** ./src/core/listeners/handlers/index.js ***!
  \**********************************************/
/*! exports provided: mousedownHandler, mouseupHandler, dragoverHandler, dragstartHandler, dragenterHandler, dragleaveHandler, dragendHandler, keydownHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_41049__) {

"use strict";
__nested_webpack_require_41049__.r(__webpack_exports__);
/* harmony import */ var _mousedown_handler__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_41049__(/*! ./mousedown.handler */ "./src/core/listeners/handlers/mousedown.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "mousedownHandler", function() { return _mousedown_handler__WEBPACK_IMPORTED_MODULE_0__["mousedownHandler"]; });

/* harmony import */ var _mouseup_handler__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_41049__(/*! ./mouseup.handler */ "./src/core/listeners/handlers/mouseup.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "mouseupHandler", function() { return _mouseup_handler__WEBPACK_IMPORTED_MODULE_1__["mouseupHandler"]; });

/* harmony import */ var _dragover_handler__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_41049__(/*! ./dragover.handler */ "./src/core/listeners/handlers/dragover.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "dragoverHandler", function() { return _dragover_handler__WEBPACK_IMPORTED_MODULE_2__["dragoverHandler"]; });

/* harmony import */ var _dragstart_handler__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_41049__(/*! ./dragstart.handler */ "./src/core/listeners/handlers/dragstart.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "dragstartHandler", function() { return _dragstart_handler__WEBPACK_IMPORTED_MODULE_3__["dragstartHandler"]; });

/* harmony import */ var _dragenter_handler__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_41049__(/*! ./dragenter.handler */ "./src/core/listeners/handlers/dragenter.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "dragenterHandler", function() { return _dragenter_handler__WEBPACK_IMPORTED_MODULE_4__["dragenterHandler"]; });

/* harmony import */ var _dragleave_handler__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_41049__(/*! ./dragleave.handler */ "./src/core/listeners/handlers/dragleave.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "dragleaveHandler", function() { return _dragleave_handler__WEBPACK_IMPORTED_MODULE_5__["dragleaveHandler"]; });

/* harmony import */ var _dragend_handler__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_41049__(/*! ./dragend.handler */ "./src/core/listeners/handlers/dragend.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "dragendHandler", function() { return _dragend_handler__WEBPACK_IMPORTED_MODULE_6__["dragendHandler"]; });

/* harmony import */ var _keydown_handler__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_41049__(/*! ./keydown.handler */ "./src/core/listeners/handlers/keydown.handler.js");
/* harmony reexport (safe) */ __nested_webpack_require_41049__.d(__webpack_exports__, "keydownHandler", function() { return _keydown_handler__WEBPACK_IMPORTED_MODULE_7__["keydownHandler"]; });










/***/ }),

/***/ "./src/core/listeners/handlers/keydown.handler.js":
/*!********************************************************!*\
  !*** ./src/core/listeners/handlers/keydown.handler.js ***!
  \********************************************************/
/*! exports provided: keydownHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_44349__) {

"use strict";
__nested_webpack_require_44349__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_44349__.d(__webpack_exports__, "keydownHandler", function() { return keydownHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_44349__(/*! ./../../helpers */ "./src/core/helpers/index.js");


var isItemAroundSelectionArea = function isItemAroundSelectionArea(item, lastItem) {
  return item.parentNode === lastItem.parentNode;
};

var keydownHandler = function keydownHandler(e) {
  // if the element is a grabbable item
  if (e.target.getAttribute('aria-grabbed')) {
    // Space is the selection or unselection keystroke
    if (e.keyCode === 32) {
      // if the multiple selection modifier is pressed
      if (Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e)) {
        // if the item's grabbed state is currently true
        if (e.target.getAttribute('aria-grabbed') === 'true') {
          // if this is the only selected item, clear dropeffect
          // from the target containers, which we must do first
          // in case subsequent unselection sets owner to null
          if (this.selections.items.length === 1) {
            Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets);
          } // unselect this item


          _helpers__WEBPACK_IMPORTED_MODULE_0__["removeSelection"].bind(this)(e.target); // if we have any selections
          // apply dropeffect to the target containers,
          // in case earlier selections were made by mouse

          if (this.selections.items.length) {
            Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"])(this.items, this.selections, this.targets);
          } // if that was the only selected item
          // then reset the owner container reference


          if (!this.selections.items.length) {
            this.selections.owner = null;
          }
        } else {
          // else [if its grabbed state is currently false]
          // add this additional selection
          _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(e.target); // apply dropeffect to the target containers

          Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"])(this.items, this.selections, this.targets);
        }
      } else if (e.target.getAttribute('aria-grabbed') === 'false') {
        // else [if the multiple selection modifier is not pressed]
        // and the item's grabbed state is currently false
        // clear dropeffect from the target containers
        Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets); // clear all existing selections

        _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)(); // add this new selection

        _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(e.target); // apply dropeffect to the target containers

        Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"])(this.items, this.selections, this.targets);
      } else {
        // else [if modifier is not pressed and grabbed is already true]
        // apply dropeffect to the target containers
        Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"])(this.items, this.selections, this.targets);
      } // then prevent default to avoid any conflict with native actions


      e.preventDefault();
    } // (CMD or Ctrl) + A - select all the items around the selected one


    if (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) {
      var lastItem = this.selections.items.slice(-1).pop();

      if (this.items && this.items.length > 0) {
        for (var i = 0; i < this.items.length; i++) {
          var item = this.items[i];
          var shouldSelectItem = isItemAroundSelectionArea(item, lastItem);
          shouldSelectItem && _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(item);
        }
      }

      e.preventDefault(); // prevent entire page selection.
    } // Modifier + M is the end-of-selection keystroke


    if (e.keyCode === 77 && Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e)) {
      // if we have any selected items
      if (this.selections.items.length) {
        // apply dropeffect to the target containers
        // in case earlier selections were made by mouse
        Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["addDropeffects"])(this.items, this.selections, this.targets); // if the owner container is the last one, focus the first one

        if (this.selections.owner === this.targets[this.targets.length - 1]) {
          this.targets[0].focus();
        } else {
          // else [if it's not the last one], find and focus the next one
          for (var _i = 0; _i < this.targets.length; _i++) {
            if (this.selections.owner === this.targets[_i]) {
              this.targets[_i + 1].focus();

              break;
            }
          }
        }
      } // then prevent default to avoid any conflict with native actions


      e.preventDefault();
    }
  } // Escape is the abort keystroke (for any target element)


  if (e.keyCode === 27) {
    // if we have any selected items
    if (this.selections.items.length) {
      // clear dropeffect from the target containers
      Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets); // then set focus back on the last item that was selected, which is
      // necessary because we've removed tabindex from the current focus

      this.selections.items[this.selections.items.length - 1].focus(); // clear all existing selections

      _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)(); // but don't prevent default so that native actions can still occur
    }
  } // if the element is a drop target container


  if (e.target.getAttribute('aria-dropeffect')) {
    // Enter or Modifier + M is the drop keystroke
    if (e.keyCode === 13 || e.keyCode === 77 && Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e)) {
      // append the selected items to the end of the target container
      if (this.defaultOptions.reactivityEnabled) {
        this.selections.droptarget = e.target;
        _helpers__WEBPACK_IMPORTED_MODULE_0__["dispatchReorderEvents"].bind(this)(e);
      } else {
        for (var _i2 = 0; _i2 < this.selections.items.length; _i2++) {
          e.target.appendChild(this.selections.items[_i2]);
        }
      } // clear dropeffect from the target containers


      Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets); // then set focus back on the last item that was selected, which is
      // necessary because we've removed tabindex from the current focus

      this.selections.items[this.selections.items.length - 1].focus(); // reset the selections array

      _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)(); // prevent default to to avoid any conflict with native actions

      e.preventDefault();
    }
  }
};

/***/ }),

/***/ "./src/core/listeners/handlers/mousedown.handler.js":
/*!**********************************************************!*\
  !*** ./src/core/listeners/handlers/mousedown.handler.js ***!
  \**********************************************************/
/*! exports provided: mousedownHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_51831__) {

"use strict";
__nested_webpack_require_51831__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_51831__.d(__webpack_exports__, "mousedownHandler", function() { return mousedownHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_51831__(/*! ./../../helpers */ "./src/core/helpers/index.js");

var mousedownHandler = function mousedownHandler(e) {
  if (this.defaultOptions.handlerSelector) {
    var handler = e.target.closest(this.defaultOptions.handlerSelector);

    if (!handler) {
      return;
    }
  }

  var elem = e.target.closest(this.defaultOptions.draggableSelector); // if the element is a draggable item

  if (elem && elem.getAttribute('draggable')) {
    // clear dropeffect from the target containers
    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets); // if the multiple selection modifier is not pressed
    // and the item's grabbed state is currently false

    if (!Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e) && elem.getAttribute('aria-grabbed') === 'false') {
      // clear all existing selections
      _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)(); // then add this new selection

      _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(elem);
    }
  } else if (!Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e)) {
    // else [if the element is anything else]
    // and the selection modifier is not pressed
    // clear dropeffect from the target containers
    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets); // clear all existing selections

    _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)();
  } else {
    // else [if the element is anything else and the modifier is pressed]
    // clear dropeffect from the target containers
    Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["clearDropeffects"])(this.items, this.selections, this.targets);
  }
};

/***/ }),

/***/ "./src/core/listeners/handlers/mouseup.handler.js":
/*!********************************************************!*\
  !*** ./src/core/listeners/handlers/mouseup.handler.js ***!
  \********************************************************/
/*! exports provided: mouseupHandler */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_54243__) {

"use strict";
__nested_webpack_require_54243__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_54243__.d(__webpack_exports__, "mouseupHandler", function() { return mouseupHandler; });
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_54243__(/*! ./../../helpers */ "./src/core/helpers/index.js");


var isItemInSelectionArea = function isItemInSelectionArea(item, element, lastItem) {
  return item.parentNode === element.parentNode && (element.offsetTop > lastItem.offsetTop && item.offsetTop <= element.offsetTop && item.offsetTop >= lastItem.offsetTop || item.offsetTop >= element.offsetTop && item.offsetTop <= lastItem.offsetTop);
};

var mouseupHandler = function mouseupHandler(e) {
  var elem = e.target.closest(this.defaultOptions.draggableSelector); // if the element is a draggable item

  if (elem && elem.getAttribute('draggable')) {
    // if shift key is pressed select multiple items
    if (Object(_helpers__WEBPACK_IMPORTED_MODULE_0__["hasModifier"])(e)) {
      if (this.selections.items.length && e.shiftKey) {
        // last selected item
        var lastItem = this.selections.items.slice(-1).pop();

        if (this.items && this.items.length > 0) {
          for (var i = 0; i < this.items.length; i++) {
            var item = this.items[i];
            var shouldSelectItem = isItemInSelectionArea(item, elem, lastItem);
            shouldSelectItem && _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(item);
          } // if the item's grabbed state is currently true

        }
      } else if (elem.getAttribute('aria-grabbed') === 'true') {
        // unselect this item
        _helpers__WEBPACK_IMPORTED_MODULE_0__["removeSelection"].bind(this)(elem); // if that was the only selected item
        // then reset the owner container reference

        if (!this.selections.items.length) {
          this.selections.owner = null;
        }
      } else {
        // else [if the item's grabbed state is false]
        // add this additional selection
        _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(elem);
      }
    } else {
      // if no modifier, clear all selections and add current item.
      _helpers__WEBPACK_IMPORTED_MODULE_0__["clearSelections"].bind(this)();
      _helpers__WEBPACK_IMPORTED_MODULE_0__["addSelection"].bind(this)(elem);
    }
  }
};

/***/ }),

/***/ "./src/core/listeners/index.js":
/*!*************************************!*\
  !*** ./src/core/listeners/index.js ***!
  \*************************************/
/*! exports provided: attachListeners */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_56902__) {

"use strict";
__nested_webpack_require_56902__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_56902__.d(__webpack_exports__, "attachListeners", function() { return attachListeners; });
/* harmony import */ var _handlers__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_56902__(/*! ./handlers */ "./src/core/listeners/handlers/index.js");

var attachListeners = function attachListeners(el) {
  // mousedown event to clear previous selections
  el.addEventListener('mousedown', _handlers__WEBPACK_IMPORTED_MODULE_0__["mousedownHandler"].bind(this), false); // mouseup event to implement multiple selection

  el.addEventListener('mouseup', _handlers__WEBPACK_IMPORTED_MODULE_0__["mouseupHandler"].bind(this), false); // dragstart event to initiate mouse dragging

  el.addEventListener('dragstart', _handlers__WEBPACK_IMPORTED_MODULE_0__["dragstartHandler"].bind(this), false); // keydown event to implement selection and abort

  el.addEventListener('keydown', _handlers__WEBPACK_IMPORTED_MODULE_0__["keydownHandler"].bind(this), false); // dragenter event to set related variable

  el.addEventListener('dragenter', _handlers__WEBPACK_IMPORTED_MODULE_0__["dragenterHandler"].bind(this), false); // dragleave event to maintain target highlighting using that variable

  el.addEventListener('dragleave', _handlers__WEBPACK_IMPORTED_MODULE_0__["dragleaveHandler"].bind(this), false); // dragover event to allow the drag by preventing its default

  el.addEventListener('dragover', _handlers__WEBPACK_IMPORTED_MODULE_0__["dragoverHandler"].bind(this), false); // dragend event to implement items being validly dropped into targets,
  // or invalidly dropped elsewhere, and to clean-up the interface either way

  el.addEventListener('dragend', _handlers__WEBPACK_IMPORTED_MODULE_0__["dragendHandler"].bind(this), false);
};

/***/ }),

/***/ "./src/core/options.js":
/*!*****************************!*\
  !*** ./src/core/options.js ***!
  \*****************************/
/*! exports provided: getOptions */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_58976__) {

"use strict";
__nested_webpack_require_58976__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_58976__.d(__webpack_exports__, "getOptions", function() { return getOptions; });
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var getOptions = function getOptions(componentInstance, options) {
  return _objectSpread({
    dropzoneSelector: 'ul',
    draggableSelector: 'li',
    handlerSelector: null,
    reactivityEnabled: true,
    multipleDropzonesItemsDraggingEnabled: false,
    showDropzoneAreas: true
  }, options, {
    onDragstart: (options.onDragstart || function () {}).bind(componentInstance),
    onDragenter: (options.onDragenter || function () {}).bind(componentInstance),
    onDragover: (options.onDragover || function () {}).bind(componentInstance),
    onDragend: (options.onDragend || function () {}).bind(componentInstance),
    onDrop: (options.onDrop || function () {}).bind(componentInstance)
  });
};

/***/ }),

/***/ "./src/core/state.js":
/*!***************************!*\
  !*** ./src/core/state.js ***!
  \***************************/
/*! exports provided: getState */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_61175__) {

"use strict";
__nested_webpack_require_61175__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_61175__.d(__webpack_exports__, "getState", function() { return getState; });
var getState = function getState() {
  return {
    targets: null,
    items: null,
    nextItemElement: null,
    // related variable is needed to maintain a reference to the
    // dragleave's relatedTarget, since it doesn't have e.relatedTarget
    related: null,
    selections: {
      items: [],
      owner: null,
      droptarget: null
    }
  };
};

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: VueDraggableDirective, default */
/***/ (function(module, __webpack_exports__, __nested_webpack_require_61955__) {

"use strict";
__nested_webpack_require_61955__.r(__webpack_exports__);
/* harmony export (binding) */ __nested_webpack_require_61955__.d(__webpack_exports__, "VueDraggableDirective", function() { return VueDraggableDirective; });
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_61955__(/*! ./core */ "./src/core/index.js");
/* harmony import */ var _components_vue_draggable_group_component__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_61955__(/*! ./components/vue-draggable-group.component */ "./src/components/vue-draggable-group.component.js");


var instances = [];
var VueDraggableDirective = {
  bind: function bind(el, options, vnode) {
    var instance = new _core__WEBPACK_IMPORTED_MODULE_0__["VueDraggable"](el, vnode.context, options.value);
    instances.push(instance);
  },
  componentUpdated: function componentUpdated(el) {
    setTimeout(function () {
      instances.forEach(function (instance) {
        if (instance.el !== el) return;
        instance.update(el);
      });
    });
  },
  unbind: function unbind(el) {
    instances = instances.filter(function (instance) {
      return instance.el !== el;
    });
  }
};

_core__WEBPACK_IMPORTED_MODULE_0__["VueDraggable"].install = function (Vue) {
  Vue.directive('drag-and-drop', VueDraggableDirective);
  Vue.component('vue-draggable-group', _components_vue_draggable_group_component__WEBPACK_IMPORTED_MODULE_1__["VueDraggableGroup"]);
};

/* harmony default export */ __webpack_exports__["default"] = (_core__WEBPACK_IMPORTED_MODULE_0__["VueDraggable"]);

/***/ })

/******/ });
});
//# sourceMappingURL=vue-draggable.js.map

/***/ }),

/***/ "./src/js/components/Folder.vue":
/*!**************************************!*\
  !*** ./src/js/components/Folder.vue ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Folder_vue_vue_type_template_id_17594d8c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Folder.vue?vue&type=template&id=17594d8c& */ "./src/js/components/Folder.vue?vue&type=template&id=17594d8c&");
/* harmony import */ var _Folder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Folder.vue?vue&type=script&lang=js& */ "./src/js/components/Folder.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _Folder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Folder_vue_vue_type_template_id_17594d8c___WEBPACK_IMPORTED_MODULE_0__.render,
  _Folder_vue_vue_type_template_id_17594d8c___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/js/components/Folder.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/js/components/Formindex.vue":
/*!*****************************************!*\
  !*** ./src/js/components/Formindex.vue ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Formindex_vue_vue_type_template_id_407bc472___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Formindex.vue?vue&type=template&id=407bc472& */ "./src/js/components/Formindex.vue?vue&type=template&id=407bc472&");
/* harmony import */ var _Formindex_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Formindex.vue?vue&type=script&lang=js& */ "./src/js/components/Formindex.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _Formindex_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Formindex_vue_vue_type_template_id_407bc472___WEBPACK_IMPORTED_MODULE_0__.render,
  _Formindex_vue_vue_type_template_id_407bc472___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/js/components/Formindex.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/js/components/Formstep.vue":
/*!****************************************!*\
  !*** ./src/js/components/Formstep.vue ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Formstep_vue_vue_type_template_id_daf51f48___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Formstep.vue?vue&type=template&id=daf51f48& */ "./src/js/components/Formstep.vue?vue&type=template&id=daf51f48&");
/* harmony import */ var _Formstep_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Formstep.vue?vue&type=script&lang=js& */ "./src/js/components/Formstep.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _Formstep_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Formstep_vue_vue_type_template_id_daf51f48___WEBPACK_IMPORTED_MODULE_0__.render,
  _Formstep_vue_vue_type_template_id_daf51f48___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/js/components/Formstep.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/js/components/Studyset.vue":
/*!****************************************!*\
  !*** ./src/js/components/Studyset.vue ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Studyset_vue_vue_type_template_id_7fe01f76___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Studyset.vue?vue&type=template&id=7fe01f76& */ "./src/js/components/Studyset.vue?vue&type=template&id=7fe01f76&");
/* harmony import */ var _Studyset_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Studyset.vue?vue&type=script&lang=js& */ "./src/js/components/Studyset.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _Studyset_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Studyset_vue_vue_type_template_id_7fe01f76___WEBPACK_IMPORTED_MODULE_0__.render,
  _Studyset_vue_vue_type_template_id_7fe01f76___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/js/components/Studyset.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/js/components/Folder.vue?vue&type=script&lang=js&":
/*!***************************************************************!*\
  !*** ./src/js/components/Folder.vue?vue&type=script&lang=js& ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Folder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Folder.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Folder.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Folder_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/js/components/Formindex.vue?vue&type=script&lang=js&":
/*!******************************************************************!*\
  !*** ./src/js/components/Formindex.vue?vue&type=script&lang=js& ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Formindex_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Formindex.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formindex.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Formindex_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/js/components/Formstep.vue?vue&type=script&lang=js&":
/*!*****************************************************************!*\
  !*** ./src/js/components/Formstep.vue?vue&type=script&lang=js& ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Formstep_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Formstep.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formstep.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Formstep_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/js/components/Studyset.vue?vue&type=script&lang=js&":
/*!*****************************************************************!*\
  !*** ./src/js/components/Studyset.vue?vue&type=script&lang=js& ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Studyset_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Studyset.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Studyset.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Studyset_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/js/components/Folder.vue?vue&type=template&id=17594d8c&":
/*!*********************************************************************!*\
  !*** ./src/js/components/Folder.vue?vue&type=template&id=17594d8c& ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Folder_vue_vue_type_template_id_17594d8c___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Folder_vue_vue_type_template_id_17594d8c___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Folder_vue_vue_type_template_id_17594d8c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Folder.vue?vue&type=template&id=17594d8c& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Folder.vue?vue&type=template&id=17594d8c&");


/***/ }),

/***/ "./src/js/components/Formindex.vue?vue&type=template&id=407bc472&":
/*!************************************************************************!*\
  !*** ./src/js/components/Formindex.vue?vue&type=template&id=407bc472& ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Formindex_vue_vue_type_template_id_407bc472___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Formindex_vue_vue_type_template_id_407bc472___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Formindex_vue_vue_type_template_id_407bc472___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Formindex.vue?vue&type=template&id=407bc472& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formindex.vue?vue&type=template&id=407bc472&");


/***/ }),

/***/ "./src/js/components/Formstep.vue?vue&type=template&id=daf51f48&":
/*!***********************************************************************!*\
  !*** ./src/js/components/Formstep.vue?vue&type=template&id=daf51f48& ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Formstep_vue_vue_type_template_id_daf51f48___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Formstep_vue_vue_type_template_id_daf51f48___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Formstep_vue_vue_type_template_id_daf51f48___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Formstep.vue?vue&type=template&id=daf51f48& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formstep.vue?vue&type=template&id=daf51f48&");


/***/ }),

/***/ "./src/js/components/Studyset.vue?vue&type=template&id=7fe01f76&":
/*!***********************************************************************!*\
  !*** ./src/js/components/Studyset.vue?vue&type=template&id=7fe01f76& ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Studyset_vue_vue_type_template_id_7fe01f76___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Studyset_vue_vue_type_template_id_7fe01f76___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Studyset_vue_vue_type_template_id_7fe01f76___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Studyset.vue?vue&type=template&id=7fe01f76& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Studyset.vue?vue&type=template&id=7fe01f76&");


/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Folder.vue?vue&type=template&id=17594d8c&":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Folder.vue?vue&type=template&id=17594d8c& ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "sample" },
    [
      _vm._l(_vm.folders, function(folder, index) {
        return _c(
          "div",
          {
            key: index,
            staticClass: "acordeon",
            on: {
              click: function($event) {
                _vm.selectedTab = index
              }
            }
          },
          [
            _c("ul", { staticClass: "folder__dropdown" }, [
              _c("li", [
                _c("input", {
                  attrs: { id: "check01", type: "checkbox", name: "menu" }
                }),
                _vm._v(" "),
                _c("label", { attrs: { for: "check01" } }, [
                  _c(
                    "svg",
                    {
                      attrs: {
                        width: "40",
                        height: "10",
                        viewBox: "0 0 40 10",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          "fill-rule": "evenodd",
                          "clip-rule": "evenodd",
                          d:
                            "M10 5C10 7.76142 7.76142 10 5 10C2.23858 10 0 7.76142 0 5C0 2.23858 2.23858 0 5 0C7.76142 0 10 2.23858 10 5ZM25 5C25 7.76142 22.7614 10 20 10C17.2386 10 15 7.76142 15 5C15 2.23858 17.2386 0 20 0C22.7614 0 25 2.23858 25 5ZM35 10C37.7614 10 40 7.76142 40 5C40 2.23858 37.7614 0 35 0C32.2386 0 30 2.23858 30 5C30 7.76142 32.2386 10 35 10Z",
                          fill: "#009051"
                        }
                      })
                    ]
                  )
                ]),
                _vm._v(" "),
                _vm._m(0, true)
              ])
            ]),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass: "acordeon-cabecera",
                class: { active: _vm.selectedTab == index }
              },
              [
                _c("span", [_vm._v(_vm._s(folder.name))]),
                _vm._v(" "),
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "23",
                      height: "14",
                      viewBox: "0 0 23 14",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d: "M11.5 0L0.674683 13.5L22.3253 13.5L11.5 0Z",
                        fill: "#009051"
                      }
                    })
                  ]
                )
              ]
            ),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass: "acordeon-contenido",
                class: { active: _vm.selectedTab == index }
              },
              [
                _c("draggable", {
                  staticClass: "lib__row",
                  attrs: { group: "my-group" }
                })
              ],
              1
            )
          ]
        )
      }),
      _vm._v(" "),
      _c(
        "div",
        {
          staticClass: "modal fade",
          attrs: {
            id: "folder",
            tabindex: "-1",
            role: "dialog",
            "aria-hidden": "true"
          }
        },
        [
          _c(
            "div",
            {
              staticClass: "modal-dialog modal-dialog-centered filter__modal",
              attrs: { role: "document" }
            },
            [
              _c("div", { staticClass: "modal-content" }, [
                _c(
                  "button",
                  {
                    staticClass: "close",
                    attrs: { type: "button", "data-dismiss": "modal" }
                  },
                  [
                    _c(
                      "svg",
                      {
                        attrs: {
                          width: "26",
                          height: "26",
                          fill: "none",
                          xmlns: "http://www.w3.org/2000/svg"
                        }
                      },
                      [
                        _c("path", {
                          attrs: {
                            d:
                              "M15.73 13.235l9.048-9.211a1.99 1.99 0 000-2.78 1.906 1.906 0 00-2.73 0L13 10.456 3.952 1.244a1.906 1.906 0 00-2.73 0 1.99 1.99 0 000 2.78l9.048 9.211-9.048 9.212a1.99 1.99 0 000 2.78c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582L13 16.015l9.048 9.212c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582a1.99 1.99 0 000-2.78l-9.022-9.212z",
                            fill: "#009051"
                          }
                        })
                      ]
                    )
                  ]
                ),
                _vm._v(" "),
                _c("div", { staticClass: "modal-body" }, [
                  _c("h5", { staticClass: "filter__title" }, [
                    _vm._v("create a folder")
                  ]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.newFolder,
                        expression: "newFolder"
                      }
                    ],
                    staticClass: "login__input form-input",
                    attrs: { type: "text" },
                    domProps: { value: _vm.newFolder },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.newFolder = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _c("div", { staticClass: "button__container" }, [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button", "data-dismiss": "modal" },
                        on: { click: _vm.addFolder }
                      },
                      [_vm._v("\n              create folder\n            ")]
                    )
                  ])
                ])
              ])
            ]
          )
        ]
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          staticClass: "modal fade",
          attrs: {
            id: "removefolder",
            tabindex: "-1",
            role: "dialog",
            "aria-hidden": "true"
          }
        },
        [
          _c(
            "div",
            {
              staticClass: "modal-dialog modal-dialog-centered filter__modal",
              attrs: { role: "document" }
            },
            [
              _c("div", { staticClass: "modal-content" }, [
                _c(
                  "button",
                  {
                    staticClass: "close",
                    attrs: { type: "button", "data-dismiss": "modal" }
                  },
                  [
                    _c(
                      "svg",
                      {
                        attrs: {
                          width: "26",
                          height: "26",
                          fill: "none",
                          xmlns: "http://www.w3.org/2000/svg"
                        }
                      },
                      [
                        _c("path", {
                          attrs: {
                            d:
                              "M15.73 13.235l9.048-9.211a1.99 1.99 0 000-2.78 1.906 1.906 0 00-2.73 0L13 10.456 3.952 1.244a1.906 1.906 0 00-2.73 0 1.99 1.99 0 000 2.78l9.048 9.211-9.048 9.212a1.99 1.99 0 000 2.78c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582L13 16.015l9.048 9.212c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582a1.99 1.99 0 000-2.78l-9.022-9.212z",
                            fill: "#009051"
                          }
                        })
                      ]
                    )
                  ]
                ),
                _vm._v(" "),
                _c("div", { staticClass: "modal-body" }, [
                  _c("h5", { staticClass: "filter__title" }, [
                    _vm._v(
                      "\n            are you sure you’d like to delete this folder?\n          "
                    )
                  ]),
                  _vm._v(" "),
                  _c("p", [
                    _vm._v(
                      "\n            any study sets in this folder will be moved into the uncategorized\n            library.\n          "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "button__container" }, [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button", "data-dismiss": "modal" },
                        on: {
                          click: function($event) {
                            return _vm.removeFolder(_vm.index)
                          }
                        }
                      },
                      [_vm._v("\n              yes, delete\n            ")]
                    )
                  ])
                ])
              ])
            ]
          )
        ]
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          staticClass: "modal fade",
          attrs: {
            id: "renamefolder",
            tabindex: "-1",
            role: "dialog",
            "aria-hidden": "true"
          }
        },
        [
          _c(
            "div",
            {
              staticClass: "modal-dialog modal-dialog-centered filter__modal",
              attrs: { role: "document" }
            },
            [
              _c("div", { staticClass: "modal-content" }, [
                _c(
                  "button",
                  {
                    staticClass: "close",
                    attrs: { type: "button", "data-dismiss": "modal" }
                  },
                  [
                    _c(
                      "svg",
                      {
                        attrs: {
                          width: "26",
                          height: "26",
                          fill: "none",
                          xmlns: "http://www.w3.org/2000/svg"
                        }
                      },
                      [
                        _c("path", {
                          attrs: {
                            d:
                              "M15.73 13.235l9.048-9.211a1.99 1.99 0 000-2.78 1.906 1.906 0 00-2.73 0L13 10.456 3.952 1.244a1.906 1.906 0 00-2.73 0 1.99 1.99 0 000 2.78l9.048 9.211-9.048 9.212a1.99 1.99 0 000 2.78c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582L13 16.015l9.048 9.212c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582a1.99 1.99 0 000-2.78l-9.022-9.212z",
                            fill: "#009051"
                          }
                        })
                      ]
                    )
                  ]
                ),
                _vm._v(" "),
                _c("div", { staticClass: "modal-body" }, [
                  _c("h5", { staticClass: "filter__title" }, [
                    _vm._v("rename folder")
                  ]),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model",
                        value: _vm.newFolder,
                        expression: "newFolder"
                      }
                    ],
                    staticClass: "login__input form-input",
                    attrs: { type: "text" },
                    domProps: { value: _vm.newFolder },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.newFolder = $event.target.value
                      }
                    }
                  }),
                  _vm._v(" "),
                  _vm._m(1)
                ])
              ])
            ]
          )
        ]
      ),
      _vm._v(" "),
      _c(
        "draggable",
        { staticClass: "lib__row", attrs: { group: "my-group" } },
        [
          _c("div", { staticClass: "lib__container lib__container-history" }, [
            _c("div", { staticClass: "lib__block" }, [
              _c("div", { staticClass: "lib__icon" }, [
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "64",
                      height: "91",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M6.95 53.715c.019.018.032.04.051.056a27.13 27.13 0 005.475 4.894l-2.702 4.652a31.958 31.958 0 01-2.701-1.949A1.8 1.8 0 004.15 62.94a1.789 1.789 0 00.652 1.207 35.564 35.564 0 003.172 2.27l-1.794 3.09a1.787 1.787 0 00.654 2.448A1.8 1.8 0 009.29 71.3l1.8-3.098a36.101 36.101 0 0014.614 3.915v4.053L15.41 78.736a5.384 5.384 0 00-2.942 1.905 5.355 5.355 0 00-1.14 3.308v.785a5.372 5.372 0 001.58 3.799 5.405 5.405 0 003.81 1.575h21.563a5.405 5.405 0 003.81-1.575 5.372 5.372 0 001.58-3.799v-.785a5.355 5.355 0 00-1.14-3.309 5.383 5.383 0 00-2.942-1.904L29.297 76.17v-4.067a35.967 35.967 0 0020.776-7.888 35.783 35.783 0 0012.134-18.571 35.689 35.689 0 00-1.16-22.133 35.815 35.815 0 00-14.01-17.21L48.82 3.23A1.788 1.788 0 0047.502.558a1.802 1.802 0 00-1.791.878l-1.786 3.076a36.644 36.644 0 00-3.185-1.46 1.801 1.801 0 00-2.334 1.005 1.788 1.788 0 001.01 2.326c.931.368 1.828.786 2.708 1.23l-2.72 4.684A26.816 26.816 0 0027.5 9.498h-.002a27.011 27.011 0 00-18.362 7.237A26.85 26.85 0 00.642 34.504l-.002.007v.006c-.041.614-.093 1.227-.093 1.851A26.686 26.686 0 006.95 53.715zm38.542-32.18a6.945 6.945 0 01-1.82 2.294c-2.01 0-2.883 1.74-3.404 2.781a8.39 8.39 0 01-.437.802c-1.448-.007-2.304-.137-3.536-2.593a6.871 6.871 0 00-3.5-3.488 3.368 3.368 0 01-1.89-1.886 18.637 18.637 0 01-1.506-6.268 23.38 23.38 0 018.895 2.555 23.314 23.314 0 017.198 5.803zm-19.7-8.368a22.635 22.635 0 001.897 7.88 6.871 6.871 0 003.5 3.489 3.368 3.368 0 011.891 1.886c2.118 4.223 4.519 4.572 6.998 4.572 2.01 0 2.883-1.74 3.404-2.781.133-.279.28-.55.444-.812a5.774 5.774 0 003.783-2.658 23.195 23.195 0 012.715 16.088A23.245 23.245 0 0141.87 54.74a23.376 23.376 0 01-15.615 4.882 23.361 23.361 0 01-14.99-6.545c.46-.34.895-.714 1.301-1.116.897-.874 1.336-1.261 2.357-1.261a8.758 8.758 0 004.397-1.085 5.215 5.215 0 012.79-.706c4.719 0 7.188-2.703 7.188-5.374 0-2.672-2.469-5.374-7.188-5.374-.998.02-1.995.092-2.986.215-3.043.322-6.184.649-8.321-1.482A14.136 14.136 0 004.398 33.1a23.273 23.273 0 017.177-13.721 23.402 23.402 0 0114.217-6.212zm-.089 30.367c0 .867-1.26 1.791-3.594 1.791a8.758 8.758 0 00-4.397 1.085 5.215 5.215 0 01-2.79.706 6.503 6.503 0 00-4.871 2.285c-.349.37-.743.695-1.175.965a23.085 23.085 0 01-4.715-13.597 10.895 10.895 0 014.1 2.657c3.353 3.341 7.91 2.859 11.24 2.512.954-.101 1.854-.196 2.608-.196 2.334 0 3.594.924 3.594 1.792zm14.375 40.415v.785c0 .475-.19.93-.527 1.267a1.8 1.8 0 01-1.27.525H16.72a1.8 1.8 0 01-1.27-.525 1.79 1.79 0 01-.527-1.267v-.785a1.787 1.787 0 011.36-1.739L27.5 79.416l11.216 2.794a1.797 1.797 0 011.362 1.739zm5.157-74.544a32.227 32.227 0 0113.772 19.517 32.14 32.14 0 01-3.47 23.611A32.308 32.308 0 0136.724 67.29 32.413 32.413 0 0112.89 65.1l2.707-4.66a26.974 26.974 0 0017.533 2.213 26.913 26.913 0 0015.126-9.112 26.768 26.768 0 006.19-16.503 26.762 26.762 0 00-5.419-16.771c-.01-.019-.027-.033-.038-.052a27.11 27.11 0 00-6.465-6.143l2.71-4.667z",
                        fill: "#fff"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M20.313 30.994a5.687 5.687 0 003.734-1.65 5.653 5.653 0 001.656-3.724c0-6.612-1.41-8.956-5.39-8.956-5.391 0-5.391 3.806-5.391 7.165 0 5.921 2.932 7.165 5.39 7.165zm1.796-5.374a2.095 2.095 0 01-1.797 1.792c-.758 0-1.796 0-1.796-3.583s0-3.583 1.797-3.583c.963 0 1.796 0 1.796 5.374zm9.792 22.052c-.912 1.626-2.292 4.08-.28 6.085a4.01 4.01 0 002.942 1.22 13.278 13.278 0 006.508-2.786l-.993-1.492-1-1.489c-1.028.684-4.152 2.775-4.894 2.096a6.609 6.609 0 01.853-1.882 8.61 8.61 0 001.448-4.1 2.472 2.472 0 011.384-2.389c.151-.064.313-.1.477-.105a.638.638 0 01.462.179c.633.631 2.316 2.31 2.169 3.81a3.625 3.625 0 01-1.895 2.39l.996 1.49.997 1.49a6.948 6.948 0 002.322-2.106 6.921 6.921 0 001.156-2.91c.316-3.188-2.24-5.737-3.204-6.697a4.382 4.382 0 00-4.856-.85 6.069 6.069 0 00-2.67 2.304 6.042 6.042 0 00-.932 3.395 6.457 6.457 0 01-.99 2.347z",
                        fill: "#fff"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "lib__desc" }, [
                _c("div", { staticClass: "lib__title" }, [
                  _vm._v(
                    "\n                  World History: Cultures, States and Societies to 1500\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__name" }, [
                  _vm._v(
                    "\n                  Chapter 1 - Ancient Mesopotamia\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__tag" }, [
                  _c("div", { staticClass: "lib__topic" }, [
                    _vm._v(
                      "\n                      History\n                  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "lib__date" }, [
                    _vm._v(
                      "\n                      8 / 13 / 21\n                  "
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "lib__prg" }, [
              _vm._v(
                "\n            Snippet of the summary orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sed... \n          "
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "overlay" }, [
              _c("button", { staticClass: "modal-svg" }, [
                _c(
                  "svg",
                  {
                    staticClass: "lib__delete",
                    attrs: {
                      width: "28",
                      height: "36",
                      viewBox: "0 0 28 36",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M23.068 32.2915C23.0504 32.7163 22.6763 33.0779 22.2528 33.0779H6.61858C6.19528 33.0779 5.82092 32.7153 5.80344 32.2915L4.90751 10.572C4.87942 9.8912 4.31028 9.3623 3.63629 9.39067C2.9623 9.41904 2.43869 9.99393 2.46677 10.6747L3.3627 32.3942C3.43471 34.1399 4.88591 35.5454 6.61858 35.5454H22.2528C23.9845 35.5454 25.4366 34.1422 25.5087 32.3942L26.4046 10.6747C26.4327 9.99393 25.9091 9.41904 25.2351 9.39067C24.5611 9.3623 23.992 9.8912 23.9639 10.572L23.068 32.2915ZM13.4586 29.3766C13.4586 29.9217 13.896 30.3636 14.4357 30.3636C14.9754 30.3636 15.4128 29.9217 15.4128 29.3766V12.5974C15.4128 12.0523 14.9754 11.6104 14.4357 11.6104C13.896 11.6104 13.4586 12.0523 13.4586 12.5974V29.3766ZM8.57327 29.4056C8.58914 29.9505 9.03929 30.3792 9.57872 30.3632C10.1181 30.3471 10.5426 29.8924 10.5267 29.3476L10.0381 12.5684C10.0223 12.0235 9.57212 11.5948 9.03269 11.6108C8.49326 11.6268 8.06883 12.0815 8.0847 12.6264L8.57327 29.4056ZM18.3447 29.3476C18.3288 29.8924 18.7532 30.3471 19.2927 30.3632C19.8321 30.3792 20.2823 29.9505 20.2981 29.4056L20.7867 12.6264C20.8026 12.0815 20.3781 11.6268 19.8387 11.6108C19.2993 11.5948 18.8491 12.0235 18.8333 12.5684L18.3447 29.3476ZM20.4521 5.1948L19.9872 3.55127C19.5785 2.10636 18.126 1 16.6384 1H12.233C10.7456 1 9.29275 2.10675 8.88416 3.55127L8.41928 5.1948H2.22143C1.54685 5.1948 1 5.74718 1 6.42856C1 7.10995 1.54685 7.66233 2.22143 7.66233H26.65C27.3245 7.66233 27.8714 7.10995 27.8714 6.42856C27.8714 5.74718 27.3245 5.1948 26.65 5.1948H20.4521ZM16.6384 3.46753H12.233C11.8362 3.46753 11.342 3.84403 11.233 4.22915L10.9599 5.1948H17.9115L17.6384 4.22915C17.5293 3.84371 17.0355 3.46753 16.6384 3.46753Z",
                        fill: "#009051",
                        stroke: "#009051",
                        "stroke-width": "0.2"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("a", { staticClass: "lib__link", attrs: { href: "#" } }, [
                _vm._v("open study set")
              ])
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "lib__container lib__container-geology" }, [
            _c("div", { staticClass: "lib__block" }, [
              _c("div", { staticClass: "lib__icon" }, [
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "82",
                      height: "82",
                      viewBox: "0 0 82 82",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M41.3247 0.32129C33.9834 0.32678 26.7806 2.31048 20.4807 6.06186C14.1809 9.81324 9.01899 15.1923 5.54299 21.6282L5.53207 21.6495C1.3336 29.4453 -0.180212 38.3965 1.2227 47.1308C2.62562 55.865 6.86783 63.9003 13.299 70.0048C19.7302 76.1093 27.9953 79.9461 36.8274 80.9269C45.6595 81.9078 54.5711 79.9785 62.1959 75.435C69.8208 70.8915 75.7381 63.9845 79.0407 55.7728C82.3434 47.5611 82.849 38.4979 80.4802 29.9728C78.1114 21.4476 72.9988 13.9309 65.9263 8.57508C58.8538 3.21923 50.2116 0.319801 41.3247 0.32129ZM3.94973 40.7556C3.94782 36.0294 4.85598 31.3467 6.62506 26.9608C7.7413 28.9243 9.20286 30.6723 10.9401 32.1214C12.6508 33.708 13.6997 34.7402 13.6997 35.9034C13.6997 39.4809 16.3102 41.0722 18.2177 42.2339C19.4507 42.9858 20.1997 43.4793 20.1997 43.9903C20.1997 46.4013 17.4084 48.8424 12.0747 48.8424C9.71274 48.8947 7.37953 49.3701 5.18692 50.2459C4.36483 47.1488 3.94898 43.9589 3.94973 40.7556ZM12.0747 52.0772C19.8903 52.0772 23.4497 47.8853 23.4497 43.9903C23.4497 41.6306 21.4899 40.4357 19.9141 39.4754C18.0764 38.3548 16.9497 37.5832 16.9497 35.9034C16.9497 33.2744 15.0216 31.4849 13.157 29.7554C11.1111 27.8575 9.019 25.8828 8.72463 22.5935C11.8365 17.065 16.3147 12.4186 21.7352 9.09428C27.1557 5.76998 33.3391 3.87782 39.6997 3.597V34.1091C39.245 36.2024 37.4906 41.4011 34.3106 42.4559C27.6884 44.6529 26.6997 49.4268 26.6997 52.0772C26.7698 55.5031 28.0949 58.7856 30.4259 61.3075C31.5182 63.1272 32.373 65.078 32.9697 67.1128C33.5514 68.847 34.2279 70.5483 34.9962 72.209C36.0938 74.2713 37.7156 76.0111 39.6997 77.2548V77.9142C32.292 77.5841 25.1495 75.0724 19.1777 70.6975C13.2059 66.3225 8.67362 60.2812 6.15544 53.3396C8.03432 52.5619 10.0407 52.134 12.0747 52.0772ZM42.9497 36.1806C43.9002 36.5152 44.7231 37.1348 45.3052 37.9541C45.8872 38.7734 46.1997 39.7521 46.1997 40.7556C46.1997 41.759 45.8872 42.7377 45.3052 43.557C44.7231 44.3764 43.9002 44.9959 42.9497 45.3305V36.1806ZM39.6997 73.1464C38.9708 72.4576 38.3636 71.6516 37.9033 70.7622C37.1955 69.2171 36.5704 67.6357 36.0308 66.0246C34.7406 62.4305 33.8741 60.1656 32.7236 59.0205C30.9918 57.1123 30.0073 54.6479 29.9497 52.0772C29.9497 48.9159 31.7636 46.7109 35.3389 45.5247C37.1161 44.8667 38.6413 43.6704 39.6997 42.1044V73.1464ZM42.9497 77.9141V69.7863C48.383 69.4898 53.6251 67.6894 58.0859 64.5879C62.5467 61.4864 66.049 57.207 68.1983 52.2315C70.3476 47.2561 71.0587 41.7822 70.2514 36.4262C69.444 31.0703 67.1504 26.0451 63.6288 21.9164C63.3498 21.5893 62.9516 21.3858 62.5218 21.3509C62.0921 21.316 61.666 21.4524 61.3373 21.7301C61.0085 22.0079 60.8042 22.4042 60.7691 22.8319C60.734 23.2597 60.871 23.6838 61.1501 24.0109C64.2705 27.6716 66.3064 32.124 67.0302 36.8703C67.7541 41.6166 67.1373 46.4697 65.2488 50.8871C63.3603 55.3045 60.2746 59.1121 56.3366 61.8841C52.3986 64.6561 47.7636 66.2833 42.9497 66.5837V58.4686C46.2514 58.1794 49.4049 56.9726 52.0507 54.9857C52.2219 54.8584 52.3662 54.6987 52.4753 54.5158C52.5844 54.3329 52.6562 54.1303 52.6865 53.9198C52.7168 53.7092 52.7051 53.4947 52.652 53.2887C52.5989 53.0826 52.5055 52.889 52.3771 52.719C52.2487 52.5489 52.0879 52.4057 51.9038 52.2976C51.7197 52.1895 51.516 52.1186 51.3044 52.089C51.0928 52.0594 50.8773 52.0716 50.6704 52.125C50.4636 52.1784 50.2693 52.2719 50.0988 52.4002C48.0154 53.9662 45.5451 54.9417 42.9497 55.2234V48.6789C44.7847 48.3062 46.4339 47.3139 47.6183 45.8701C48.8028 44.4263 49.4497 42.6195 49.4497 40.7556C49.4497 38.8916 48.8028 37.0848 47.6183 35.641C46.4339 34.1972 44.7847 33.205 42.9497 32.8322V26.2885C45.3637 26.5576 47.6723 27.4208 49.6673 28.8002C51.6622 30.1795 53.2806 32.0316 54.3765 34.1893C55.4723 36.3469 56.0111 38.7422 55.9442 41.159C55.8772 43.5757 55.2067 45.9378 53.9931 48.0321C53.7771 48.4033 53.7182 48.8446 53.8292 49.259C53.9402 49.6734 54.2121 50.0269 54.5849 50.2418C54.9578 50.4567 55.4012 50.5154 55.8176 50.4049C56.234 50.2944 56.5892 50.0239 56.8051 49.6527C58.305 47.0674 59.1269 44.1479 59.1951 41.1633C59.2633 38.1786 58.5756 35.2249 57.1953 32.5744C55.8151 29.9239 53.7867 27.6618 51.2971 25.9967C48.8075 24.3316 45.9369 23.317 42.9497 23.0464V14.9274C47.2564 15.1909 51.4287 16.5208 55.088 18.7963C55.4536 19.0227 55.8944 19.0956 56.3138 18.9989C56.7333 18.9022 57.097 18.6438 57.3253 18.2805C57.5535 17.9171 57.6276 17.4785 57.5313 17.0608C57.4349 16.6432 57.176 16.2806 56.8114 16.0527C52.6343 13.4599 47.8655 11.9621 42.9497 11.6993V3.597C52.5713 4.01226 61.6603 8.10866 68.3209 15.0318C74.9817 21.9549 78.6998 31.1702 78.6998 40.7556C78.6998 50.3409 74.9817 59.5562 68.3209 66.4793C61.6603 73.4025 52.5713 77.4989 42.9497 77.9141Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M30.6512 27.1948C30.6681 26.6742 30.8225 26.1673 31.0987 25.725C31.5709 25.3327 32.098 25.0111 32.6634 24.7702C33.7422 24.4253 34.6864 23.7546 35.3649 22.8513C36.0434 21.948 36.4226 20.8569 36.4498 19.7294C36.4498 15.8202 34.3154 11.6426 28.3248 11.6426C22.4056 11.6426 20.1998 18.5867 20.1998 22.9642C20.1998 26.9831 22.4326 31.051 26.6998 31.051C27.2186 31.0752 27.7369 30.9926 28.2222 30.8083C28.7074 30.6241 29.1493 30.3422 29.5202 29.9803C29.891 29.6183 30.1829 29.1842 30.3775 28.7049C30.5721 28.2256 30.6653 27.7115 30.6512 27.1948ZM28.3248 14.8773C28.9846 14.7957 29.6544 14.865 30.2832 15.08C30.912 15.295 31.4833 15.65 31.9534 16.1179C32.4235 16.5858 32.7802 17.1544 32.9962 17.7802C33.2122 18.4061 33.2818 19.0727 33.1998 19.7294C33.1998 20.7726 32.7968 21.087 31.2098 21.8767C30.3268 22.2631 29.5131 22.7905 28.801 23.4381C27.9949 24.3484 27.5159 25.4997 27.4394 26.7107C27.4036 27.0629 27.3291 27.4101 27.2172 27.746C27.0522 27.8078 26.8754 27.8318 26.6998 27.8163C24.1291 27.8163 23.4498 24.6424 23.4498 22.9642C23.4498 20.4307 24.6781 14.8773 28.3248 14.8773Z",
                        fill: "white"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "lib__desc" }, [
                _c("div", { staticClass: "lib__title" }, [
                  _vm._v(
                    "\n                  Essentials of Geology\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__name" }, [
                  _vm._v(
                    "\n                  Chapter 10 - Sedimentary Rocks\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__tag" }, [
                  _c("div", { staticClass: "lib__topic" }, [
                    _vm._v(
                      "\n                      Geology\n                  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "lib__date" }, [
                    _vm._v(
                      "\n                      8 / 13 / 21\n                  "
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "lib__prg" }, [
              _vm._v(
                "\n            Snippet of the summary orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sed... \n          "
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "overlay" }, [
              _c("button", { staticClass: "modal-svg" }, [
                _c(
                  "svg",
                  {
                    staticClass: "lib__delete",
                    attrs: {
                      width: "28",
                      height: "36",
                      viewBox: "0 0 28 36",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M23.068 32.2915C23.0504 32.7163 22.6763 33.0779 22.2528 33.0779H6.61858C6.19528 33.0779 5.82092 32.7153 5.80344 32.2915L4.90751 10.572C4.87942 9.8912 4.31028 9.3623 3.63629 9.39067C2.9623 9.41904 2.43869 9.99393 2.46677 10.6747L3.3627 32.3942C3.43471 34.1399 4.88591 35.5454 6.61858 35.5454H22.2528C23.9845 35.5454 25.4366 34.1422 25.5087 32.3942L26.4046 10.6747C26.4327 9.99393 25.9091 9.41904 25.2351 9.39067C24.5611 9.3623 23.992 9.8912 23.9639 10.572L23.068 32.2915ZM13.4586 29.3766C13.4586 29.9217 13.896 30.3636 14.4357 30.3636C14.9754 30.3636 15.4128 29.9217 15.4128 29.3766V12.5974C15.4128 12.0523 14.9754 11.6104 14.4357 11.6104C13.896 11.6104 13.4586 12.0523 13.4586 12.5974V29.3766ZM8.57327 29.4056C8.58914 29.9505 9.03929 30.3792 9.57872 30.3632C10.1181 30.3471 10.5426 29.8924 10.5267 29.3476L10.0381 12.5684C10.0223 12.0235 9.57212 11.5948 9.03269 11.6108C8.49326 11.6268 8.06883 12.0815 8.0847 12.6264L8.57327 29.4056ZM18.3447 29.3476C18.3288 29.8924 18.7532 30.3471 19.2927 30.3632C19.8321 30.3792 20.2823 29.9505 20.2981 29.4056L20.7867 12.6264C20.8026 12.0815 20.3781 11.6268 19.8387 11.6108C19.2993 11.5948 18.8491 12.0235 18.8333 12.5684L18.3447 29.3476ZM20.4521 5.1948L19.9872 3.55127C19.5785 2.10636 18.126 1 16.6384 1H12.233C10.7456 1 9.29275 2.10675 8.88416 3.55127L8.41928 5.1948H2.22143C1.54685 5.1948 1 5.74718 1 6.42856C1 7.10995 1.54685 7.66233 2.22143 7.66233H26.65C27.3245 7.66233 27.8714 7.10995 27.8714 6.42856C27.8714 5.74718 27.3245 5.1948 26.65 5.1948H20.4521ZM16.6384 3.46753H12.233C11.8362 3.46753 11.342 3.84403 11.233 4.22915L10.9599 5.1948H17.9115L17.6384 4.22915C17.5293 3.84371 17.0355 3.46753 16.6384 3.46753Z",
                        fill: "#009051",
                        stroke: "#009051",
                        "stroke-width": "0.2"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("a", { staticClass: "lib__link", attrs: { href: "#" } }, [
                _vm._v("open study set")
              ])
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "lib__container lib__container-science" }, [
            _c("div", { staticClass: "lib__block" }, [
              _c("div", { staticClass: "lib__icon" }, [
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "66",
                      height: "73",
                      viewBox: "0 0 66 73",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M25.7753 40.8198V65.0181C25.7753 66.9057 26.5243 68.7159 27.8576 70.0507C29.1909 71.3854 30.9992 72.1352 32.8847 72.1352C34.7702 72.1352 36.5785 71.3854 37.9118 70.0507C39.245 68.7159 39.9941 66.9057 39.9941 65.0181V9.24215C40.9425 8.90835 41.7422 8.24917 42.2514 7.38146C42.7607 6.51376 42.9466 5.49356 42.7763 4.50172C42.6059 3.50988 42.0903 2.61045 41.3207 1.96287C40.5512 1.31529 39.5775 0.961381 38.5722 0.963881H27.1972C26.1919 0.961359 25.2182 1.31525 24.4486 1.96282C23.6791 2.6104 23.1634 3.50982 22.9931 4.50166C22.8227 5.49351 23.0086 6.5137 23.5179 7.38141C24.0272 8.24911 24.8269 8.90828 25.7753 9.24206V40.8198ZM27.1972 3.81073H38.5722C38.9493 3.81073 39.311 3.9607 39.5776 4.22765C39.8443 4.49459 39.9941 4.85664 39.9941 5.23416C39.9941 5.61168 39.8443 5.97373 39.5776 6.24068C39.311 6.50762 38.9493 6.65759 38.5722 6.65759H27.1972C26.8201 6.65759 26.4584 6.50762 26.1918 6.24068C25.9251 5.97373 25.7753 5.61168 25.7753 5.23416C25.7753 4.85664 25.9251 4.49459 26.1918 4.22765C26.4584 3.9607 26.8201 3.81073 27.1972 3.81073ZM37.1503 9.50444V21.0157C35.7218 21.179 34.378 21.7783 33.3013 22.7323C32.8699 23.137 32.3521 23.4379 31.7872 23.6123C31.2222 23.7867 30.6251 23.8299 30.0409 23.7387C29.5157 23.6557 29.0236 23.4288 28.6191 23.0832V9.50444H37.1503ZM32.8847 69.2884C31.7538 69.2871 30.6695 68.8368 29.8698 68.0363C29.0701 67.2357 28.6203 66.1503 28.6191 65.0181V53.4868C30.2246 53.1587 31.6677 52.2855 32.7041 51.0148C33.7405 49.7441 34.3066 48.154 34.3066 46.5135C34.3066 44.8731 33.7405 43.283 32.7041 42.0123C31.6677 40.7416 30.2246 39.8684 28.6191 39.5403V26.3149C29.0735 26.4878 29.5548 26.5794 30.0409 26.5856C31.0006 26.6843 31.9701 26.5707 32.881 26.2526C33.7919 25.9346 34.6217 25.4199 35.3118 24.7451C35.839 24.3079 36.4741 24.0209 37.1503 23.9144V26.7294C35.5448 27.0575 34.1017 27.9308 33.0653 29.2015C32.0289 30.4721 31.4628 32.0622 31.4628 33.7027C31.4628 35.3432 32.0289 36.9333 33.0653 38.2039C34.1017 39.4746 35.5448 40.3479 37.1503 40.676V50.9277C35.5448 51.2558 34.1017 52.129 33.0653 53.3997C32.0289 54.6704 31.4628 56.2605 31.4628 57.901C31.4628 59.5414 32.0289 61.1315 33.0653 62.4022C34.1017 63.6729 35.5448 64.5461 37.1503 64.8742V65.0181C37.1491 66.1503 36.6993 67.2357 35.8996 68.0363C35.0999 68.8368 34.0156 69.2871 32.8847 69.2884ZM28.6191 50.5399V42.4872C29.4507 42.7816 30.1708 43.3269 30.6801 44.048C31.1893 44.7691 31.4628 45.6304 31.4628 46.5135C31.4628 47.3966 31.1893 48.258 30.6801 48.9791C30.1708 49.7002 29.4507 50.2454 28.6191 50.5399ZM37.1503 29.6764V37.729C36.3186 37.4346 35.5986 36.8893 35.0893 36.1683C34.58 35.4472 34.3066 34.5858 34.3066 33.7027C34.3066 32.8196 34.58 31.9582 35.0893 31.2371C35.5986 30.5161 36.3186 29.9708 37.1503 29.6764ZM34.3066 57.901C34.3076 57.0181 34.5814 56.1572 35.0906 55.4363C35.5997 54.7154 36.3192 54.1699 37.1503 53.8746V61.9273C36.3192 61.632 35.5997 61.0865 35.0906 60.3656C34.5814 59.6447 34.3076 58.7838 34.3066 57.901Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M3.02532 9.24206V65.0181C3.02532 66.9057 3.77434 68.7159 5.1076 70.0507C6.44087 71.3854 8.24917 72.1352 10.1347 72.1352C12.0202 72.1352 13.8285 71.3854 15.1618 70.0507C16.495 68.7159 17.2441 66.9057 17.2441 65.0181V9.24215C18.1925 8.90835 18.9922 8.24917 19.5014 7.38146C20.0107 6.51376 20.1966 5.49356 20.0263 4.50172C19.8559 3.50988 19.3403 2.61045 18.5707 1.96287C17.8012 1.31529 16.8275 0.961381 15.8222 0.963881H4.44719C3.44189 0.961359 2.46817 1.31525 1.69863 1.96282C0.929084 2.6104 0.41343 3.50982 0.243069 4.50166C0.0727082 5.49351 0.258645 6.5137 0.767921 7.38141C1.2772 8.24911 2.07691 8.90828 3.02532 9.24206ZM4.44719 3.81073H15.8222C16.1993 3.81073 16.561 3.9607 16.8276 4.22765C17.0943 4.49459 17.2441 4.85664 17.2441 5.23416C17.2441 5.61168 17.0943 5.97373 16.8276 6.24068C16.561 6.50762 16.1993 6.65759 15.8222 6.65759H4.44719C4.07009 6.65759 3.70843 6.50762 3.44177 6.24068C3.17512 5.97373 3.02532 5.61168 3.02532 5.23416C3.02532 4.85664 3.17512 4.49459 3.44177 4.22765C3.70843 3.9607 4.07009 3.81073 4.44719 3.81073ZM10.1347 69.2884C9.00376 69.2871 7.91949 68.8368 7.1198 68.0363C6.32011 67.2357 5.8703 66.1503 5.86907 65.0181V36.7252C6.54531 36.8318 7.18039 37.1187 7.70755 37.556C8.39764 38.2308 9.22751 38.7454 10.1384 39.0635C11.0492 39.3815 12.0188 39.4952 12.9784 39.3964C13.4646 39.3902 13.9458 39.2986 14.4003 39.1258V65.0181C14.3991 66.1503 13.9493 67.2357 13.1496 68.0363C12.3499 68.8368 11.2656 69.2871 10.1347 69.2884ZM14.4003 35.8935C13.9959 36.2394 13.5038 36.4664 12.9784 36.5496C12.3943 36.6408 11.7971 36.5975 11.2322 36.4232C10.6673 36.2488 10.1495 35.9478 9.71808 35.5432C8.64141 34.5892 7.29762 33.9898 5.86907 33.8265V9.50444H14.4003V35.8935Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M45.6815 5.23416C45.6842 6.11438 45.959 6.97217 46.4682 7.68979C46.9774 8.4074 47.6959 8.94964 48.5253 9.24206V65.0181C48.5253 66.9056 49.2743 68.7159 50.6076 70.0506C51.9408 71.3854 53.7491 72.1352 55.6346 72.1352C57.5202 72.1352 59.3285 71.3854 60.6617 70.0506C61.995 68.7159 62.744 66.9056 62.744 65.0181V9.24214C63.6924 8.90834 64.4921 8.24917 65.0014 7.38146C65.5106 6.51375 65.6966 5.49356 65.5262 4.50172C65.3559 3.50988 64.8402 2.61045 64.0707 1.96287C63.3012 1.31529 62.3274 0.961381 61.3221 0.96388H49.9471C48.8162 0.965116 47.7319 1.41542 46.9323 2.21598C46.1326 3.01655 45.6828 4.10199 45.6815 5.23416ZM62.744 5.23416C62.7436 5.61156 62.5937 5.9734 62.3271 6.24026C62.0606 6.50712 61.6991 6.65721 61.3221 6.65759H49.9471C49.57 6.65759 49.2084 6.50762 48.9417 6.24067C48.6751 5.97373 48.5253 5.61168 48.5253 5.23416C48.5253 4.85664 48.6751 4.49459 48.9417 4.22765C49.2084 3.9607 49.57 3.81073 49.9471 3.81073H61.3221C61.6991 3.81111 62.0606 3.9612 62.3271 4.22806C62.5937 4.49492 62.7436 4.85676 62.744 5.23416ZM54.628 53.2109C54.8942 53.4779 55.2554 53.6283 55.6323 53.6293C56.0091 53.6302 56.371 53.4815 56.6386 53.2157C57.5826 52.304 58.6889 51.5775 59.9003 51.0739V65.0181C59.9003 66.1506 59.4508 67.2368 58.6509 68.0376C57.8509 68.8384 56.766 69.2883 55.6346 69.2883C54.5033 69.2883 53.4184 68.8384 52.6184 68.0376C51.8184 67.2368 51.369 66.1506 51.369 65.0181V62.0571C53.0722 61.8449 54.7285 61.3518 56.2706 60.5977C56.607 60.4283 56.8626 60.1322 56.9812 59.7744C57.0999 59.4167 57.0719 59.0264 56.9035 58.6892C56.7351 58.352 56.44 58.0955 56.0829 57.9759C55.7258 57.8562 55.3359 57.8833 54.9987 58.0511C53.8532 58.6101 52.6292 58.9911 51.369 59.1807V41.1337C52.6021 41.5823 53.717 42.3058 54.6294 43.2496C54.8968 43.5125 55.2571 43.6591 55.632 43.6574C56.0068 43.6557 56.3658 43.5059 56.6308 43.2405C56.8959 42.9752 57.0455 42.6158 57.0472 42.2406C57.0489 41.8653 56.9025 41.5046 56.6399 41.2369C55.2018 39.7462 53.3762 38.6876 51.369 38.1805V32.4549C52.0453 32.5615 52.6803 32.8484 53.2075 33.2857C53.8976 33.9605 54.7275 34.4751 55.6383 34.7932C56.5492 35.1112 57.5188 35.2249 58.4784 35.1261C58.9645 35.1199 59.4458 35.0283 59.9003 34.8555V48.1178C57.9139 48.6893 56.1019 49.7491 54.6294 51.2009C54.3634 51.4675 54.2139 51.8288 54.2137 52.2056C54.2134 52.5823 54.3624 52.9439 54.628 53.2109ZM59.9003 31.6232C59.4959 31.9691 59.0037 32.1962 58.4784 32.2793C57.8943 32.3705 57.2971 32.3272 56.7322 32.1529C56.1672 31.9785 55.6494 31.6776 55.218 31.2729C54.1414 30.3189 52.7976 29.7196 51.369 29.5562V9.50444H59.9003V31.6232Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M8.71277 47.9369C8.89951 47.9369 9.08442 47.9001 9.25695 47.8286C9.42949 47.7571 9.58625 47.6523 9.71829 47.5201C9.85034 47.3879 9.95507 47.231 10.0265 47.0582C10.0979 46.8855 10.1347 46.7004 10.1346 46.5135V43.6666C10.1346 43.2891 9.98484 42.927 9.71819 42.6601C9.45153 42.3931 9.08987 42.2432 8.71277 42.2432C8.33566 42.2432 7.974 42.3931 7.70735 42.6601C7.4407 42.927 7.29089 43.2891 7.29089 43.6666V46.5135C7.29085 46.7004 7.32759 46.8855 7.39903 47.0582C7.47047 47.231 7.5752 47.3879 7.70724 47.5201C7.83929 47.6523 7.99605 47.7571 8.16858 47.8286C8.34111 47.9001 8.52603 47.9369 8.71277 47.9369Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M11.5565 49.3604C11.3698 49.3603 11.1849 49.3971 11.0123 49.4686C10.8398 49.5401 10.683 49.645 10.551 49.7772C10.4189 49.9093 10.3142 50.0663 10.2428 50.239C10.1713 50.4117 10.1346 50.5968 10.1346 50.7838V53.6306C10.1346 54.0081 10.2844 54.3702 10.5511 54.6371C10.8178 54.9041 11.1794 55.0541 11.5565 55.0541C11.9336 55.0541 12.2953 54.9041 12.5619 54.6371C12.8286 54.3702 12.9784 54.0081 12.9784 53.6306V50.7838C12.9784 50.5968 12.9417 50.4117 12.8703 50.239C12.7988 50.0663 12.6941 49.9093 12.562 49.7772C12.43 49.645 12.2732 49.5401 12.1007 49.4686C11.9282 49.3971 11.7433 49.3603 11.5565 49.3604Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M8.71277 56.4775C8.52603 56.4775 8.34111 56.5143 8.16858 56.5858C7.99605 56.6573 7.83929 56.7622 7.70724 56.8943C7.5752 57.0265 7.47047 57.1835 7.39903 57.3562C7.32759 57.5289 7.29085 57.714 7.29089 57.901V60.7478C7.29089 61.1253 7.4407 61.4874 7.70735 61.7543C7.974 62.0213 8.33566 62.1712 8.71277 62.1712C9.08987 62.1712 9.45153 62.0213 9.71819 61.7543C9.98484 61.4874 10.1346 61.1253 10.1346 60.7478V57.901C10.1347 57.714 10.0979 57.5289 10.0265 57.3562C9.95507 57.1835 9.85034 57.0265 9.71829 56.8943C9.58625 56.7622 9.42949 56.6573 9.25695 56.5858C9.08442 56.5143 8.89951 56.4775 8.71277 56.4775Z",
                        fill: "white"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "lib__desc" }, [
                _c("div", { staticClass: "lib__title" }, [
                  _vm._v(
                    "\n                  Book Title Lorem Ipsum Dolor Sit & Accounting for Longer Titles\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__name" }, [
                  _vm._v(
                    "\n                  Chapter X - Chapter Title Lorem Ipsum\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__tag" }, [
                  _c("div", { staticClass: "lib__topic" }, [
                    _vm._v(
                      "\n                      Science\n                  "
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "lib__date" }, [
                    _vm._v(
                      "\n                      5 / 4 / 21\n                  "
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "lib__prg" }, [
              _vm._v(
                "\n            Snippet of the summary orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sed... \n          "
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "overlay" }, [
              _c("button", { staticClass: "modal-svg" }, [
                _c(
                  "svg",
                  {
                    staticClass: "lib__delete",
                    attrs: {
                      width: "28",
                      height: "36",
                      viewBox: "0 0 28 36",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M23.068 32.2915C23.0504 32.7163 22.6763 33.0779 22.2528 33.0779H6.61858C6.19528 33.0779 5.82092 32.7153 5.80344 32.2915L4.90751 10.572C4.87942 9.8912 4.31028 9.3623 3.63629 9.39067C2.9623 9.41904 2.43869 9.99393 2.46677 10.6747L3.3627 32.3942C3.43471 34.1399 4.88591 35.5454 6.61858 35.5454H22.2528C23.9845 35.5454 25.4366 34.1422 25.5087 32.3942L26.4046 10.6747C26.4327 9.99393 25.9091 9.41904 25.2351 9.39067C24.5611 9.3623 23.992 9.8912 23.9639 10.572L23.068 32.2915ZM13.4586 29.3766C13.4586 29.9217 13.896 30.3636 14.4357 30.3636C14.9754 30.3636 15.4128 29.9217 15.4128 29.3766V12.5974C15.4128 12.0523 14.9754 11.6104 14.4357 11.6104C13.896 11.6104 13.4586 12.0523 13.4586 12.5974V29.3766ZM8.57327 29.4056C8.58914 29.9505 9.03929 30.3792 9.57872 30.3632C10.1181 30.3471 10.5426 29.8924 10.5267 29.3476L10.0381 12.5684C10.0223 12.0235 9.57212 11.5948 9.03269 11.6108C8.49326 11.6268 8.06883 12.0815 8.0847 12.6264L8.57327 29.4056ZM18.3447 29.3476C18.3288 29.8924 18.7532 30.3471 19.2927 30.3632C19.8321 30.3792 20.2823 29.9505 20.2981 29.4056L20.7867 12.6264C20.8026 12.0815 20.3781 11.6268 19.8387 11.6108C19.2993 11.5948 18.8491 12.0235 18.8333 12.5684L18.3447 29.3476ZM20.4521 5.1948L19.9872 3.55127C19.5785 2.10636 18.126 1 16.6384 1H12.233C10.7456 1 9.29275 2.10675 8.88416 3.55127L8.41928 5.1948H2.22143C1.54685 5.1948 1 5.74718 1 6.42856C1 7.10995 1.54685 7.66233 2.22143 7.66233H26.65C27.3245 7.66233 27.8714 7.10995 27.8714 6.42856C27.8714 5.74718 27.3245 5.1948 26.65 5.1948H20.4521ZM16.6384 3.46753H12.233C11.8362 3.46753 11.342 3.84403 11.233 4.22915L10.9599 5.1948H17.9115L17.6384 4.22915C17.5293 3.84371 17.0355 3.46753 16.6384 3.46753Z",
                        fill: "#009051",
                        stroke: "#009051",
                        "stroke-width": "0.2"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("a", { staticClass: "lib__link", attrs: { href: "#" } }, [
                _vm._v("open study set")
              ])
            ])
          ]),
          _vm._v(" "),
          _c("div", { staticClass: "lib__container lib__container-art" }, [
            _c("div", { staticClass: "lib__block" }, [
              _c("div", { staticClass: "lib__icon" }, [
                _c(
                  "svg",
                  {
                    attrs: {
                      width: "77",
                      height: "78",
                      viewBox: "0 0 77 78",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        d:
                          "M32.0402 77.3422C43.9036 77.3422 52.1899 73.275 52.1899 67.4518C52.1899 64.6243 49.5221 62.6349 46.9439 60.7112C45.0387 59.2904 42.8792 57.6803 42.8598 56.3335C42.8486 55.443 43.7979 54.4626 44.6661 53.7506C44.9322 53.8627 45.2251 53.8951 45.5092 53.8437C45.7933 53.7924 46.0564 53.6596 46.2665 53.4615C46.3838 53.5198 46.4975 53.5849 46.6072 53.6564C54.6594 61.7369 70.7108 77.3422 74.5723 77.3422C74.8432 77.347 75.1124 77.2977 75.364 77.1971C75.6157 77.0965 75.8447 76.9467 76.0378 76.7564C76.9841 75.7996 78.5892 74.144 63.4522 57.7821C65.6193 55.3042 67.4225 50.7392 67.4225 42.3773C67.4225 15.1294 55.1883 0.726562 32.0402 0.726562C8.73064 0.726562 0.0435791 25.2488 0.0435791 40.7059C0.0435791 72.5828 20.0901 77.3422 32.0402 77.3422ZM32.0402 3.79119C53.4864 3.79119 64.3598 16.7732 64.3598 42.3773C64.3598 48.6187 63.2975 53.1251 61.359 55.5392C58.9326 52.9614 56.1282 50.0529 52.9029 46.7797L52.9391 46.7431C53.2229 46.4561 53.3821 46.0687 53.3821 45.6649C53.3821 45.2612 53.2229 44.8737 52.9391 44.5868L49.6387 41.2521C49.3452 40.9722 48.9553 40.816 48.5499 40.816C48.1445 40.816 47.7547 40.9722 47.4612 41.2521L47.4496 41.2639L43.0056 36.7728L43.0392 36.7389C43.323 36.4519 43.4822 36.0645 43.4822 35.6607C43.4822 35.257 43.323 34.8695 43.0392 34.5826L39.7387 31.2478C39.4913 31.0159 39.1752 30.8708 38.8381 30.8346C38.5011 30.7983 38.1614 30.8729 37.8704 31.0469C37.4147 29.4335 36.5416 27.9689 35.3391 26.8013C33.7801 25.1338 31.8525 23.8547 29.7108 23.0664C27.5691 22.2782 25.2727 22.0027 23.0055 22.262C23.0059 22.2338 23.0136 22.2072 23.0136 22.1789C23.0292 20.7609 22.5584 19.3804 21.6798 18.2678C20.8011 17.1551 19.5677 16.3777 18.1854 16.0651C16.8031 15.7526 15.3555 15.9239 14.0842 16.5504C12.8129 17.1768 11.7947 18.2207 11.1995 19.5077C10.6043 20.7947 10.4682 22.247 10.8138 23.6223C11.1595 24.9976 11.966 26.2127 13.0987 27.0648C14.2315 27.9169 15.622 28.3546 17.0383 28.3047C18.4545 28.2548 19.8108 27.7204 20.8809 26.7907C24.1631 28.7175 24.3585 29.9636 24.5794 31.3773C24.717 32.9841 25.4197 34.4899 26.5623 35.6271C27.7149 36.8429 29.1707 37.7291 30.7797 38.1942C30.5923 38.4816 30.5083 38.8243 30.5414 39.1659C30.5745 39.5075 30.7228 39.8276 30.9619 40.0736L34.2624 43.4083C34.4049 43.5522 34.5744 43.6665 34.7613 43.7444C34.9482 43.8224 35.1486 43.8625 35.3511 43.8625C35.5535 43.8625 35.754 43.8224 35.9409 43.7444C36.1277 43.6665 36.2973 43.5522 36.4398 43.4083L36.4504 43.3976L40.8943 47.8887L40.8618 47.9215C40.578 48.2085 40.4188 48.5959 40.4188 48.9997C40.4188 49.4034 40.578 49.7909 40.8618 50.0778L42.4145 51.6478C41.653 52.1902 41.0227 52.8965 40.57 53.7147C40.1173 54.533 39.8536 55.4425 39.7985 56.3762C39.8374 59.2343 42.5187 61.2342 45.1134 63.1683C46.9946 64.5719 49.1271 66.1626 49.1271 67.4518C49.1272 71.2152 41.4615 74.2776 32.0402 74.2776C18.8414 74.2776 3.10626 68.4529 3.10626 40.7059C3.10626 26.434 10.9619 3.79119 32.0402 3.79119ZM38.6052 41.2191L40.8499 38.9506L45.2944 43.442L43.0497 45.7106L38.6052 41.2191ZM39.7612 35.6944L35.3616 40.141L35.3603 40.1429L35.3511 40.1521L34.2056 38.9954L38.6501 34.504L39.7956 35.6607L39.7642 35.6924L39.7612 35.6944ZM28.7398 33.4708C28.0511 32.7895 27.6456 31.8726 27.6047 30.9045C27.4901 29.7597 27.1165 28.6561 26.5122 27.6774C25.908 26.6986 25.089 25.8704 24.1173 25.2555C25.802 25.1875 27.4816 25.483 29.0421 26.1217C30.6027 26.7605 32.0077 27.7276 33.1618 28.9576C33.8384 29.5529 34.3631 30.3014 34.6922 31.1407C35.0212 31.98 35.1451 32.8858 35.0535 33.7827L33.4758 35.3779C32.5914 35.4643 31.6991 35.3361 30.8746 35.0041C30.0502 34.6721 29.3179 34.1462 28.7398 33.4708ZM44.1375 48.9674L44.1384 48.9667L48.5499 44.5082L49.6954 45.6649L45.2495 50.1571L44.1054 48.9997L44.1375 48.9674ZM19.3424 23.1382C19.0754 23.2541 18.8469 23.4436 18.6835 23.6846C18.5202 23.9256 18.4286 24.2081 18.4197 24.4991C18.4213 24.5976 18.4326 24.6956 18.4533 24.7918C17.8665 25.1294 17.1863 25.2684 16.5142 25.188C15.842 25.1076 15.2138 24.8122 14.7229 24.3457C14.3328 23.9667 14.0498 23.4913 13.9027 22.9675C13.7555 22.4437 13.7495 21.8903 13.8851 21.3635C14.0207 20.8366 14.2932 20.355 14.675 19.9676C15.0567 19.5801 15.534 19.3007 16.0586 19.1575C16.5831 19.0143 17.1361 19.0126 17.6616 19.1524C18.187 19.2922 18.6661 19.5687 19.0503 19.9537C19.4345 20.3387 19.71 20.8185 19.849 21.3445C19.988 21.8705 19.9854 22.4239 19.8416 22.9486C19.5603 23.0461 19.387 23.1189 19.3424 23.1382ZM48.5072 51.2217L50.7486 48.9567C59.7301 58.0958 68.8522 68.1357 72.2125 72.9151C67.472 69.5072 57.5395 60.2881 48.5072 51.2216V51.2217Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M30.6704 71.2128C32.4417 71.2128 34.1582 70.5982 35.5275 69.4737C36.8968 68.3492 37.834 66.7844 38.1796 65.0459C38.5252 63.3074 38.2577 61.5028 37.4227 59.9396C36.5877 58.3763 35.2368 57.1511 33.6003 56.4728C31.9638 55.7945 30.1429 55.705 28.4479 56.2196C26.7528 56.7342 25.2885 57.821 24.3044 59.2948C23.3204 60.7687 22.8774 62.5384 23.0511 64.3024C23.2248 66.0664 24.0043 67.7156 25.2568 68.9689C25.9661 69.6826 26.8097 70.2484 27.739 70.6336C28.6682 71.0187 29.6646 71.2156 30.6704 71.2128ZM30.6704 58.9543C31.579 58.9542 32.4672 59.2238 33.2227 59.729C33.9782 60.2341 34.5671 60.9521 34.9147 61.7922C35.2624 62.6323 35.3534 63.5566 35.176 64.4484C34.9987 65.3402 34.5611 66.1593 33.9185 66.8021C33.0433 67.6378 31.8801 68.104 30.6704 68.104C29.4607 68.104 28.2975 67.6378 27.4222 66.8021C26.7797 66.1593 26.342 65.3402 26.1647 64.4484C25.9874 63.5566 26.0783 62.6323 26.426 61.7922C26.7737 60.9521 27.3625 60.2341 28.118 59.729C28.8735 59.2238 29.7617 58.9542 30.6704 58.9543Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M44.4524 20.6467C45.8699 20.6471 47.2437 20.1555 48.3396 19.2558C49.4356 18.3562 50.1859 17.104 50.4626 15.7128C50.7394 14.3217 50.5255 12.8775 49.8575 11.6264C49.1895 10.3753 48.1086 9.39469 46.799 8.85171C45.4895 8.30873 44.0323 8.23696 42.6758 8.64863C41.3193 9.06029 40.1474 9.92992 39.3598 11.1093C38.5722 12.2887 38.2177 13.7049 38.3566 15.1166C38.4955 16.5283 39.1193 17.848 40.1216 18.8511C40.689 19.4221 41.3639 19.8748 42.1073 20.1831C42.8507 20.4913 43.6478 20.6489 44.4524 20.6467ZM42.287 12.3507C42.5712 12.0653 42.9088 11.8387 43.2805 11.684C43.6523 11.5292 44.0509 11.4494 44.4535 11.449C44.8562 11.4486 45.2549 11.5277 45.627 11.6817C45.999 11.8357 46.3371 12.0616 46.6218 12.3465C46.9065 12.6314 47.1323 12.9697 47.2862 13.342C47.4401 13.7143 47.5191 14.1133 47.5188 14.5162C47.5184 14.9191 47.4386 15.318 47.2841 15.69C47.1295 16.062 46.9031 16.3999 46.6179 16.6843C46.0346 17.2418 45.259 17.5529 44.4524 17.5529C43.6458 17.5529 42.8703 17.2418 42.287 16.6843C42.0026 16.3998 41.7769 16.062 41.6229 15.6902C41.469 15.3184 41.3898 14.9199 41.3898 14.5175C41.3898 14.115 41.469 13.7165 41.6229 13.3448C41.7769 12.973 42.0026 12.6352 42.287 12.3507Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M47.515 26.7757C47.5146 28.1943 48.0057 29.569 48.9047 30.6658C49.8037 31.7625 51.0549 32.5134 52.4452 32.7905C53.8354 33.0675 55.2786 32.8536 56.5289 32.1851C57.7792 31.5167 58.7591 30.435 59.3018 29.1246C59.8444 27.8141 59.9162 26.3559 59.5049 24.9984C59.0936 23.641 58.2246 22.4682 57.046 21.68C55.8674 20.8919 54.4522 20.537 53.0415 20.676C51.6308 20.815 50.3119 21.4392 49.3095 22.4422C48.7388 23.0098 48.2863 23.6851 47.9782 24.429C47.6702 25.1729 47.5127 25.9705 47.515 26.7757ZM51.4749 24.609C51.7593 24.3244 52.0969 24.0987 52.4684 23.9447C52.8399 23.7906 53.2381 23.7114 53.6403 23.7114C54.0424 23.7113 54.4406 23.7906 54.8121 23.9446C55.1837 24.0986 55.5213 24.3243 55.8056 24.6088C56.09 24.8934 56.3156 25.2312 56.4695 25.603C56.6234 25.9748 56.7026 26.3732 56.7026 26.7757C56.7026 27.1781 56.6234 27.5766 56.4695 27.9483C56.3157 28.3201 56.0901 28.658 55.8058 28.9425C55.2225 29.5001 54.4469 29.8112 53.6403 29.8112C52.8337 29.8112 52.0582 29.5001 51.4749 28.9425C51.1905 28.658 50.9648 28.3203 50.8108 27.9485C50.6569 27.5767 50.5776 27.1782 50.5776 26.7757C50.5776 26.3733 50.6569 25.9748 50.8108 25.603C50.9648 25.2312 51.1905 24.8934 51.4749 24.609Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M29.1392 19.1145C30.5567 19.1148 31.9304 18.6233 33.0264 17.7236C34.1223 16.8239 34.8726 15.5718 35.1493 14.1806C35.4261 12.7894 35.2123 11.3452 34.5442 10.0941C33.8762 8.84304 32.7953 7.86246 31.4857 7.31948C30.1762 6.77651 28.719 6.70474 27.3625 7.1164C26.006 7.52807 24.8341 8.39769 24.0465 9.57709C23.2589 10.7565 22.9044 12.1727 23.0433 13.5844C23.1822 14.996 23.806 16.3158 24.8083 17.3188C25.3757 17.8899 26.0506 18.3426 26.794 18.6508C27.5374 18.9591 28.3345 19.1167 29.1392 19.1145ZM26.9738 10.8185C27.2582 10.5339 27.5957 10.3082 27.9673 10.1542C28.3388 10.0002 28.737 9.92088 29.1391 9.92087C29.5413 9.92086 29.9395 10.0001 30.311 10.1541C30.6825 10.3081 31.0201 10.5338 31.3045 10.8183C31.5889 11.1029 31.8144 11.4407 31.9683 11.8125C32.1222 12.1843 32.2015 12.5827 32.2015 12.9852C32.2015 13.3876 32.1223 13.7861 31.9684 14.1579C31.8145 14.5297 31.589 14.8675 31.3046 15.152C30.7214 15.7096 29.9458 16.0207 29.1392 16.0207C28.3326 16.0207 27.5571 15.7096 26.9738 15.152C26.6893 14.8676 26.4637 14.5298 26.3097 14.158C26.1558 13.7862 26.0765 13.3877 26.0765 12.9853C26.0765 12.5828 26.1558 12.1843 26.3097 11.8125C26.4637 11.4407 26.6893 11.103 26.9738 10.8185Z",
                        fill: "white"
                      }
                    }),
                    _vm._v(" "),
                    _c("path", {
                      attrs: {
                        d:
                          "M7.96351 41.8353C8.96536 42.8373 10.2834 43.4606 11.693 43.5991C13.1026 43.7377 14.5166 43.3829 15.6941 42.5952C16.8716 41.8075 17.7397 40.6356 18.1506 39.2791C18.5615 37.9227 18.4898 36.4657 17.9475 35.1563C17.4053 33.8469 16.4262 32.7661 15.177 32.0981C13.9277 31.4301 12.4857 31.2162 11.0966 31.4928C9.70741 31.7694 8.45707 32.5195 7.55856 33.6152C6.66006 34.7108 6.16897 36.0844 6.16897 37.5017C6.16687 38.3069 6.3244 39.1046 6.63243 39.8484C6.94047 40.5923 7.39289 41.2676 7.96351 41.8353ZM10.1289 35.335C10.4133 35.0504 10.7508 34.8247 11.1224 34.6707C11.4939 34.5166 11.8921 34.4374 12.2942 34.4374C12.6964 34.4373 13.0946 34.5166 13.4661 34.6706C13.8377 34.8246 14.1752 35.0503 14.4596 35.3348C14.744 35.6194 14.9695 35.9572 15.1235 36.329C15.2774 36.7008 15.3566 37.0992 15.3566 37.5016C15.3566 37.9041 15.2774 38.3026 15.1235 38.6743C14.9696 39.0461 14.7441 39.384 14.4597 39.6685C13.8765 40.2261 13.1009 40.5372 12.2943 40.5372C11.4877 40.5372 10.7122 40.2261 10.1289 39.6685C9.84446 39.384 9.61881 39.0463 9.46485 38.6745C9.31089 38.3027 9.23165 37.9042 9.23165 37.5017C9.23165 37.0993 9.31089 36.7008 9.46485 36.329C9.61881 35.9572 9.84446 35.6194 10.1289 35.335Z",
                        fill: "white"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "lib__desc" }, [
                _c("div", { staticClass: "lib__title" }, [
                  _vm._v(
                    "\n                  Book Title Lorem Ipsum Dolor Sit & Accounting for Longer Titles\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__name" }, [
                  _vm._v(
                    "\n                  Chapter X - Chapter Title Lorem Ipsum\n                "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "lib__tag" }, [
                  _c("div", { staticClass: "lib__topic" }, [
                    _vm._v("\n                      Art\n                  ")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "lib__date" }, [
                    _vm._v(
                      "\n                      4 / 22 / 21\n                  "
                    )
                  ])
                ])
              ])
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "lib__prg" }, [
              _vm._v(
                "\n            Snippet of the summary orem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna sed... \n          "
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "overlay" }, [
              _c("button", { staticClass: "modal-svg" }, [
                _c(
                  "svg",
                  {
                    staticClass: "lib__delete",
                    attrs: {
                      width: "28",
                      height: "36",
                      viewBox: "0 0 28 36",
                      fill: "none",
                      xmlns: "http://www.w3.org/2000/svg"
                    }
                  },
                  [
                    _c("path", {
                      attrs: {
                        "fill-rule": "evenodd",
                        "clip-rule": "evenodd",
                        d:
                          "M23.068 32.2915C23.0504 32.7163 22.6763 33.0779 22.2528 33.0779H6.61858C6.19528 33.0779 5.82092 32.7153 5.80344 32.2915L4.90751 10.572C4.87942 9.8912 4.31028 9.3623 3.63629 9.39067C2.9623 9.41904 2.43869 9.99393 2.46677 10.6747L3.3627 32.3942C3.43471 34.1399 4.88591 35.5454 6.61858 35.5454H22.2528C23.9845 35.5454 25.4366 34.1422 25.5087 32.3942L26.4046 10.6747C26.4327 9.99393 25.9091 9.41904 25.2351 9.39067C24.5611 9.3623 23.992 9.8912 23.9639 10.572L23.068 32.2915ZM13.4586 29.3766C13.4586 29.9217 13.896 30.3636 14.4357 30.3636C14.9754 30.3636 15.4128 29.9217 15.4128 29.3766V12.5974C15.4128 12.0523 14.9754 11.6104 14.4357 11.6104C13.896 11.6104 13.4586 12.0523 13.4586 12.5974V29.3766ZM8.57327 29.4056C8.58914 29.9505 9.03929 30.3792 9.57872 30.3632C10.1181 30.3471 10.5426 29.8924 10.5267 29.3476L10.0381 12.5684C10.0223 12.0235 9.57212 11.5948 9.03269 11.6108C8.49326 11.6268 8.06883 12.0815 8.0847 12.6264L8.57327 29.4056ZM18.3447 29.3476C18.3288 29.8924 18.7532 30.3471 19.2927 30.3632C19.8321 30.3792 20.2823 29.9505 20.2981 29.4056L20.7867 12.6264C20.8026 12.0815 20.3781 11.6268 19.8387 11.6108C19.2993 11.5948 18.8491 12.0235 18.8333 12.5684L18.3447 29.3476ZM20.4521 5.1948L19.9872 3.55127C19.5785 2.10636 18.126 1 16.6384 1H12.233C10.7456 1 9.29275 2.10675 8.88416 3.55127L8.41928 5.1948H2.22143C1.54685 5.1948 1 5.74718 1 6.42856C1 7.10995 1.54685 7.66233 2.22143 7.66233H26.65C27.3245 7.66233 27.8714 7.10995 27.8714 6.42856C27.8714 5.74718 27.3245 5.1948 26.65 5.1948H20.4521ZM16.6384 3.46753H12.233C11.8362 3.46753 11.342 3.84403 11.233 4.22915L10.9599 5.1948H17.9115L17.6384 4.22915C17.5293 3.84371 17.0355 3.46753 16.6384 3.46753Z",
                        fill: "#009051",
                        stroke: "#009051",
                        "stroke-width": "0.2"
                      }
                    })
                  ]
                )
              ]),
              _vm._v(" "),
              _c("a", { staticClass: "lib__link", attrs: { href: "#" } }, [
                _vm._v("open study set")
              ])
            ])
          ])
        ]
      )
    ],
    2
  )
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("ul", { staticClass: "folder__dropdown-menu" }, [
      _c("li", [
        _c(
          "button",
          {
            staticClass: "modal-svg",
            attrs: {
              type: "button",
              "data-toggle": "modal",
              "data-target": "#renamefolder"
            }
          },
          [_vm._v("\n                  rename folder\n                ")]
        )
      ]),
      _vm._v(" "),
      _c("li", [
        _c(
          "button",
          {
            staticClass: "modal-svg",
            attrs: {
              type: "button",
              "data-toggle": "modal",
              "data-target": "#removefolder"
            }
          },
          [_vm._v("\n                  delete folder\n                ")]
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "button__container" }, [
      _c(
        "button",
        {
          staticClass: "button",
          attrs: { type: "button", "data-dismiss": "modal" }
        },
        [_vm._v("\n              rename folder\n            ")]
      )
    ])
  }
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formindex.vue?vue&type=template&id=407bc472&":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formindex.vue?vue&type=template&id=407bc472& ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", [
    _c("form", { staticClass: "summarize__form-index summarize__form" }, [
      _vm.activeStep === 1
        ? _c("div", { staticClass: "summarize__row" }, [
            _c(
              "svg",
              {
                staticClass: "summarize__svg",
                attrs: {
                  width: "90",
                  height: "90",
                  fill: "none",
                  xmlns: "http://www.w3.org/2000/svg"
                }
              },
              [
                _c("path", {
                  attrs: {
                    d:
                      "M25.105 54.543a1.08 1.08 0 01-.449-1.81C45.355 32.529 66.901 30.746 67.81 30.68a1.082 1.082 0 01.157 2.155c-.215.015-21.697 1.82-41.802 21.445-.289.283-.697.37-1.06.263z",
                    fill: "#FFD600"
                  }
                }),
                _vm._v(" "),
                _c("path", {
                  attrs: {
                    d:
                      "M20.603 58.526a1.079 1.079 0 01-.732-1.342l3.472-11.806a1.08 1.08 0 112.074.61l-2.95 10.028 8.61-2.01a1.08 1.08 0 01.492 2.105l-10.415 2.431a1.082 1.082 0 01-.55-.016z",
                    fill: "#FFD600"
                  }
                })
              ]
            ),
            _vm._v(" "),
            _c("div", { staticClass: "summarize__file" }, [
              _c(
                "form",
                {
                  staticClass: "dropzone",
                  attrs: {
                    id: "upload-widget",
                    method: "post",
                    action: "/upload"
                  }
                },
                [
                  _c("input", {
                    attrs: { name: "file", type: "file", accept: "image/*" },
                    on: { change: _vm.previewImage }
                  }),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("small", [
                    _vm._v("\n                  or\n              ")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "button__container" }, [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n                    paste text\n                  "
                        )
                      ]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "summarize__bottom" }, [
                    _c(
                      "svg",
                      {
                        attrs: {
                          fill: "none",
                          xmlns: "http://www.w3.org/2000/svg"
                        }
                      },
                      [
                        _c("path", {
                          attrs: {
                            "fill-rule": "evenodd",
                            "clip-rule": "evenodd",
                            d:
                              "M12.9.904c-.508-.45-1.33-.448-1.833 0L2.963 8.115c-.979.861.489 2.152 1.468 1.29l6.161-5.417c.205-.18.37-.123.37.128v16.51c0 .504.465.912 1.038.912s1.038-.408 1.038-.912V4.116c0-.25.162-.311.37-.128l6.162 5.418c.978.86 2.446-.43 1.467-1.29L12.9.903zm-6.1 11.26H3.16c-1.437 0-2.6 1.023-2.6 2.285v15.509c0 1.262 1.164 2.285 2.603 2.285h17.674c1.438 0 2.603-1.022 2.603-2.285V14.449c0-1.26-1.166-2.284-2.6-2.284H17.2c-.574 0-1.04.408-1.04.912 0 .505.466.913 1.04.913h3.64c.285 0 .52.206.52.46v15.508c0 .255-.233.46-.523.46H3.163c-.29 0-.523-.206-.523-.46V14.449c0-.255.233-.459.52-.459H6.8c.574 0 1.04-.409 1.04-.913s-.466-.912-1.04-.912z",
                            fill: "#009051"
                          }
                        })
                      ]
                    ),
                    _vm._v(" "),
                    _c("p", { staticClass: "summarize__text-gray" }, [
                      _vm._v("select a file from your computer")
                    ])
                  ])
                ]
              )
            ]),
            _vm._v(" "),
            _vm._m(1)
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 2
        ? _c("div", { staticClass: "form-step" }, [
            _vm._m(2),
            _vm._v(" "),
            _c("div", { staticClass: "form-step__block" }, [
              _vm._m(3),
              _vm._v(" "),
              _c("div", { staticClass: "form-step__btns" }, [
                _c("div", { staticClass: "form-step__edit" }, [
                  _c("span", [_vm._v("ready to summarize?")]),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "form-step__btn",
                      attrs: {
                        type: "button",
                        "data-toggle": "modal",
                        "data-target": "#editText"
                      }
                    },
                    [
                      _vm._v("\n              edit text\n              "),
                      _c(
                        "svg",
                        {
                          attrs: {
                            width: "24",
                            height: "24",
                            viewBox: "0 0 24 24",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                          }
                        },
                        [
                          _c("path", {
                            attrs: {
                              d:
                                "M23.3662 3.23185L20.7638 0.638516C19.874 -0.241484 18.429 -0.241484 17.5459 0.638516L2.72104 15.4052C2.69428 15.4318 2.67421 15.4518 2.65414 15.4785C2.64745 15.4852 2.64745 15.4918 2.64076 15.4985C2.62738 15.5185 2.60731 15.5385 2.59393 15.5652C2.58724 15.5718 2.58724 15.5785 2.58055 15.5852C2.56717 15.6052 2.55379 15.6252 2.5471 15.6518C2.54041 15.6585 2.54041 15.6718 2.53372 15.6785C2.52703 15.6985 2.51365 15.7185 2.50696 15.7452C2.50696 15.7518 2.50027 15.7518 2.50027 15.7585L0.0183103 22.7052C-0.102108 23.0452 -0.0151396 23.4252 0.239078 23.6785C0.419706 23.8585 0.660543 23.9518 0.901381 23.9518C1.00842 23.9518 1.11546 23.9318 1.21581 23.8985L8.1934 21.4318C8.20009 21.4318 8.20009 21.4252 8.20678 21.4252C8.22685 21.4185 8.24692 21.4052 8.27368 21.3985C8.28037 21.3918 8.29375 21.3918 8.30044 21.3852C8.32051 21.3718 8.34058 21.3652 8.36734 21.3518C8.37403 21.3452 8.38072 21.3452 8.38741 21.3385C8.40748 21.3252 8.42755 21.3118 8.44762 21.2918C8.45431 21.2852 8.461 21.2852 8.46769 21.2785C8.49445 21.2585 8.52121 21.2385 8.54128 21.2118L20.8909 8.90518L23.3662 6.43852C24.2559 5.55185 24.2559 4.11852 23.3662 3.23185ZM2.44675 21.4852L3.77136 17.7785L6.16635 20.1652L2.44675 21.4852ZM7.87898 19.2252L4.70795 16.0718L15.733 5.09852L18.904 8.25852L7.87898 19.2252ZM22.0416 5.10518L20.2286 6.91852L17.0576 3.75852L18.8705 1.95852C19.0244 1.80518 19.2786 1.80518 19.4392 1.95852L22.0416 4.55185C22.1419 4.65185 22.162 4.77185 22.162 4.83185C22.162 4.89185 22.1486 5.00518 22.0416 5.10518Z",
                              fill: "#009051"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "button__container form-button__container" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              yes, summarize now\n            "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "button button-black",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.prev()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              no, go back and reupload\n            "
                        )
                      ]
                    )
                  ]
                )
              ])
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 3
        ? _c("div", { staticClass: "form-step form-img" }, [
            _vm.imageData.length > 0
              ? _c("div", { staticClass: "form-step__img" }, [
                  _c("img", {
                    staticClass: "preview",
                    attrs: { src: _vm.imageData }
                  })
                ])
              : _vm._e(),
            _vm._v(" "),
            _c("div", { staticClass: "form-step__block" }, [
              _vm._m(4),
              _vm._v(" "),
              _c("div", { staticClass: "form-step__btns" }, [
                _c("div", { staticClass: "form-step__edit" }, [
                  _c("span", [_vm._v("ready to summarize?")]),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "form-step__btn",
                      attrs: {
                        type: "button",
                        "data-toggle": "modal",
                        "data-target": "#editText"
                      }
                    },
                    [
                      _vm._v("\n              edit text\n              "),
                      _c(
                        "svg",
                        {
                          attrs: {
                            width: "24",
                            height: "24",
                            viewBox: "0 0 24 24",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                          }
                        },
                        [
                          _c("path", {
                            attrs: {
                              d:
                                "M23.3662 3.23185L20.7638 0.638516C19.874 -0.241484 18.429 -0.241484 17.5459 0.638516L2.72104 15.4052C2.69428 15.4318 2.67421 15.4518 2.65414 15.4785C2.64745 15.4852 2.64745 15.4918 2.64076 15.4985C2.62738 15.5185 2.60731 15.5385 2.59393 15.5652C2.58724 15.5718 2.58724 15.5785 2.58055 15.5852C2.56717 15.6052 2.55379 15.6252 2.5471 15.6518C2.54041 15.6585 2.54041 15.6718 2.53372 15.6785C2.52703 15.6985 2.51365 15.7185 2.50696 15.7452C2.50696 15.7518 2.50027 15.7518 2.50027 15.7585L0.0183103 22.7052C-0.102108 23.0452 -0.0151396 23.4252 0.239078 23.6785C0.419706 23.8585 0.660543 23.9518 0.901381 23.9518C1.00842 23.9518 1.11546 23.9318 1.21581 23.8985L8.1934 21.4318C8.20009 21.4318 8.20009 21.4252 8.20678 21.4252C8.22685 21.4185 8.24692 21.4052 8.27368 21.3985C8.28037 21.3918 8.29375 21.3918 8.30044 21.3852C8.32051 21.3718 8.34058 21.3652 8.36734 21.3518C8.37403 21.3452 8.38072 21.3452 8.38741 21.3385C8.40748 21.3252 8.42755 21.3118 8.44762 21.2918C8.45431 21.2852 8.461 21.2852 8.46769 21.2785C8.49445 21.2585 8.52121 21.2385 8.54128 21.2118L20.8909 8.90518L23.3662 6.43852C24.2559 5.55185 24.2559 4.11852 23.3662 3.23185ZM2.44675 21.4852L3.77136 17.7785L6.16635 20.1652L2.44675 21.4852ZM7.87898 19.2252L4.70795 16.0718L15.733 5.09852L18.904 8.25852L7.87898 19.2252ZM22.0416 5.10518L20.2286 6.91852L17.0576 3.75852L18.8705 1.95852C19.0244 1.80518 19.2786 1.80518 19.4392 1.95852L22.0416 4.55185C22.1419 4.65185 22.162 4.77185 22.162 4.83185C22.162 4.89185 22.1486 5.00518 22.0416 5.10518Z",
                              fill: "#009051"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "button__container form-button__container" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              yes, summarize now\n            "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "button button-black",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.prev()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              no, go back and reupload\n            "
                        )
                      ]
                    )
                  ]
                )
              ])
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 4
        ? _c("div", { staticClass: "step-log form-step" }, [
            _c("div", { staticClass: "step-log__title" }, [
              _vm._v("summary created!")
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "step-log__row" }, [
              _vm._m(5),
              _vm._v(" "),
              _c("div", { staticClass: "step-log__block" }, [
                _vm._m(6),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "button__container",
                    on: {
                      click: function($event) {
                        $event.preventDefault()
                        return _vm.next()
                      }
                    }
                  },
                  [
                    _c(
                      "a",
                      { staticClass: "button", attrs: { href: "singup.html" } },
                      [_vm._v(" get started! ")]
                    )
                  ]
                ),
                _vm._v(" "),
                _vm._m(7)
              ])
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 5
        ? _c("div", { staticClass: "form-step step-log" }, [
            _c("div", { staticClass: "step-log__title" }, [
              _vm._v(
                "\n        summary created now save it and start studying!\n      "
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "step__row" }, [
              _vm._m(8),
              _vm._v(" "),
              _c("div", { staticClass: "form-step__finish" }, [
                _c("h5", { staticClass: "form-step__finish-title" }, [
                  _vm._v(
                    "\n            ready to name and save summary?\n          "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-form__group" }, [
                  _c(
                    "label",
                    {
                      staticClass: "step-form__label",
                      attrs: { for: "title" }
                    },
                    [_vm._v("book title*")]
                  ),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model.trim",
                        value: _vm.info.title,
                        expression: "info.title",
                        modifiers: { trim: true }
                      }
                    ],
                    staticClass: "step__input form-input",
                    attrs: { type: "text", id: "title" },
                    domProps: { value: _vm.info.title },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.info, "title", $event.target.value.trim())
                      },
                      blur: function($event) {
                        return _vm.$forceUpdate()
                      }
                    }
                  })
                ]),
                _vm._v(" "),
                _vm._m(9),
                _vm._v(" "),
                _c("p", { staticClass: "step-form__label" }, [
                  _vm._v("chapter number and name*")
                ]),
                _vm._v(" "),
                _vm._m(10),
                _vm._v(" "),
                _vm._m(11),
                _vm._v(" "),
                _vm._m(12),
                _vm._v(" "),
                _vm._m(13),
                _vm._v(" "),
                _vm._m(14),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "button__container form-button__container" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button", disabled: !_vm.formReady },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [_vm._v("\n              yes, save now\n            ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "button button-black",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.prev()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              no, go back and reupload\n            "
                        )
                      ]
                    )
                  ]
                )
              ])
            ])
          ])
        : _vm._e()
    ]),
    _vm._v(" "),
    _c(
      "div",
      {
        staticClass: "modal fade modal__form-edit",
        attrs: {
          id: "editText",
          tabindex: "-1",
          role: "dialog",
          "aria-hidden": "true"
        }
      },
      [
        _c(
          "div",
          {
            staticClass: "modal-dialog modal-dialog-centered",
            attrs: { role: "document" }
          },
          [
            _c("div", { staticClass: "modal-content" }, [
              _c(
                "button",
                {
                  staticClass: "close",
                  attrs: { type: "button", "data-dismiss": "modal" }
                },
                [
                  _c(
                    "svg",
                    {
                      attrs: {
                        width: "26",
                        height: "26",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          d:
                            "M15.73 13.235l9.048-9.211a1.99 1.99 0 000-2.78 1.906 1.906 0 00-2.73 0L13 10.456 3.952 1.244a1.906 1.906 0 00-2.73 0 1.99 1.99 0 000 2.78l9.048 9.211-9.048 9.212a1.99 1.99 0 000 2.78c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582L13 16.015l9.048 9.212c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582a1.99 1.99 0 000-2.78l-9.022-9.212z",
                          fill: "#009051"
                        }
                      })
                    ]
                  )
                ]
              ),
              _vm._v(" "),
              _c("h5", { staticClass: "filter__title" }, [
                _vm._v("edit summary")
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "modal-body" }, [
                _c("textarea", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.inputValue,
                      expression: "inputValue"
                    }
                  ],
                  staticClass: "form-step__prg",
                  attrs: { name: "texts" },
                  domProps: { value: _vm.inputValue },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.inputValue = $event.target.value
                    }
                  }
                })
              ]),
              _vm._v(" "),
              _vm._m(15)
            ])
          ]
        )
      ]
    )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [
      _vm._v("\n                  drag your jpeg "),
      _c("br"),
      _vm._v("or png here\n              ")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "summarize__texts" }, [
      _c("h5", [
        _vm._v("\n              Give it a try, it’s free!\n            ")
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n              Our learning platform allows you to summarize your academic materials for less reading time!\n            "
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n              From the text you upload, our AI creates a Study Set complete with the Summary plus\n              Flashcards and a Quiz for you to study with. We do that by using an image a book, an academic\n              journal pdf or anything really, and our engines do the rest!\n            "
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n              Upload a file to see for yourself.\n            "
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "summarize__link" }, [
        _vm._v("\n              Feel free to skip the summary and "),
        _c("a", { attrs: { href: "singup.html" } }, [_vm._v("SIGN UP")]),
        _vm._v(" or "),
        _c("a", { attrs: { href: "#" } }, [_vm._v("LOG IN")]),
        _vm._v("\n              now.   :)\n            ")
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-step__block-text" }, [
      _c("div", { staticClass: "form-step__prg" }, [
        _vm._v(
          "\n          Historian Lauren Ristvet defines agriculture as the “‘domestication’\n          of plants… causing it to change genetically from its wild ancestor\n          in ways [that make] it more useful to human consum-ers.”12 She and\n          hundreds of other scholars from Hobbes to Marx have pointed to the\n          Neolithic Revolution, that is, the move from a hunter-gatherer world\n          to an agricultural one, as the root of what we today refer to as\n          civilization. Without agriculture we don’t have empires, written\n          language, factories, universities, or railroads. Despite its\n          importance, much remains unclear about why and where agriculture\n          began. Instead, scholars hold a handful of well-regarded theories\n          about the roots (pun intended) of agriculture.\n        "
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "form-step__title" }, [
        _vm._v(
          "\n            upload a file or paste in text to start our AI summarization\n            engines! It’s free.\n          "
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "form-step__prg" }, [
        _c("p", [
          _vm._v(
            "\n              Our learning platform allows you to summarize your academic\n              materials for less reading time!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "\n              From the text you upload, our AI creates a Study Set complete\n              with the Summary plus Flashcards and a Quiz for you to study\n              with. We do that by using an image a book, an academic journal\n              pdf or anything really, and our engines do the rest!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("Upload a file to see for yourself.")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "form-step__title" }, [
        _vm._v(
          "\n            upload a file or paste in text to start our AI summarization\n            engines! It’s free.\n          "
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "form-step__prg" }, [
        _c("p", [
          _vm._v(
            "\n              Our learning platform allows you to summarize your academic\n              materials for less reading time!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "\n              From the text you upload, our AI creates a Study Set complete\n              with the Summary plus Flashcards and a Quiz for you to study\n              with. We do that by using an image a book, an academic journal\n              pdf or anything really, and our engines do the rest!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("Upload a file to see for yourself.")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-log__prg" }, [
      _c("div", { staticClass: "step-log__prg-back" }),
      _vm._v(" "),
      _c("b", [_vm._v(" summary ")]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus\n            faucibus lectus phasellus etiam aliquet malesuada. Venenatis,\n            aenean tellus facilisi amet, id pretium phasellus nullam id.\n            Ornare sagittis, rutrum eu duis. Feugiat et lectus enim id. Proin\n            imperdiet adipiscing rhoncus consectetur non. Id risus aliquet\n            lacus ultrices imperdiet at ut amet laoreet. Pellentesque\n            vestibulum, convallis in blandit. Vulputate convallis netus id\n            arcu enim lectus vestibulum. Egestas massa pretium sit lacus massa\n            porta.\n          "
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus\n            faucibus lectus phasellus etiam aliquet malesuada. Venenatis,\n            aenean tellus facilisi amet, id pretium phasellus nullam id.\n            Ornare sagittis, rutrum eu duis. Feugiat et lectus enim id. Proin\n            imperdiet adipiscing rhoncus consectetur non. Id risus aliquet\n            lacus ultrices imperdiet at ut amet laoreet. Pellentesque\n            vestibulum, convallis in blandit. Vulputate convallis netus id\n            arcu enim lectus vestibulum. Egestas massa pretium sit lacus massa\n            porta\n          "
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("h3", { staticClass: "step-log__title" }, [
      _c("b", [_vm._v(" You’re almost there! ")]),
      _vm._v(
        "\n            Create an account for FREE and get access to our suite of\n            features!\n          "
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "summarize__link" }, [
      _vm._v("\n            Already have an account? "),
      _c("a", { attrs: { href: "login.html" } }, [_vm._v("LOG IN")]),
      _vm._v(" now.\n              :)\n          ")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-log__prg" }, [
      _c("b", [_vm._v(" your summary ")]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n            Agriculture is the process of domesticating plants - the Neolithic\n            Revolution, also called the Agricultural Revolution, was when\n            humans first started to grow their own food. This meant that\n            people didn’t have to hunt and gather their food anymore. Instead,\n            they could grow it themselves on farms. This was the beginning of\n            civilization. The Ice Age was a period of time when the Earth was\n            colder. People could not grow crops during the Ice Age, but they\n            could after the Ice Age ended. Ristvet says the warming trend of\n            the Holocene made it possible for people to grow crops, because it\n            made the land warmer and more stable. The warming also changed the\n            habitats of the animals people hunted for food. She says that when\n            the Ice Age ended, the animals that people hunted for food started\n            to die out. This made it harder for people to get food. It also\n            made sense for people to grow their own food. In the past, humans\n            used to live as hunter-gatherers. But then people in some parts of\n            the world started growing their own food on farms. They grew\n            wheat, rye, barley and millet in West Asia, and they grew potatoes\n            in the Andes. Then other people saw how good it was to grow their\n            own food, and they started farming too. This shows people were\n            ready to farm when the climate was right.\n          "
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__group" }, [
      _c(
        "label",
        { staticClass: "step-form__label", attrs: { for: "author" } },
        [_vm._v("author(s)*")]
      ),
      _vm._v(" "),
      _c("input", {
        staticClass: "step__input form-input",
        attrs: { type: "text", id: "author" }
      })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__groups" }, [
      _c("div", { staticClass: "step-form__group step-form__group-number" }, [
        _c("input", {
          staticClass: "step__input form-input",
          attrs: { type: "number", id: "numb" }
        }),
        _vm._v(" "),
        _c("small", { staticClass: "step-form__muted" }, [_vm._v("number")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "step-form__group" }, [
        _c("input", {
          staticClass: "step__input form-input",
          attrs: { type: "text", id: "name" }
        }),
        _vm._v(" "),
        _c("small", { staticClass: "step-form__muted" }, [_vm._v("name")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__group" }, [
      _c("label", { staticClass: "step-form__label" }, [_vm._v("curriculum*")]),
      _vm._v(" "),
      _c("div", { staticClass: "step__select" }, [
        _c("span", { staticClass: "myarrow" }),
        _vm._v(" "),
        _c("select", [
          _c("option", [_vm._v("Кофе")]),
          _vm._v(" "),
          _c("option", [_vm._v("Чай")]),
          _vm._v(" "),
          _c("option", [_vm._v("Вода")]),
          _vm._v(" "),
          _c("option", {
            attrs: { value: "", hidden: "", disabled: "", selected: "" }
          })
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__group" }, [
      _c("label", { staticClass: "step-form__label" }, [_vm._v("topic*")]),
      _vm._v(" "),
      _c("div", { staticClass: "step__select" }, [
        _c("span", { staticClass: "myarrow" }),
        _vm._v(" "),
        _c("select", [
          _c("option", [_vm._v("Кофе")]),
          _vm._v(" "),
          _c("option", [_vm._v("Чай")]),
          _vm._v(" "),
          _c("option", [_vm._v("Вода")]),
          _vm._v(" "),
          _c("option", {
            attrs: { value: "", hidden: "", disabled: "", selected: "" }
          })
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "rating__subtitle" }, [
      _vm._v("\n            how is our algorithm doing?*\n            "),
      _c("span", [_vm._v(" five star rating ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "rating-area" }, [
      _c("input", {
        attrs: { type: "radio", id: "star-5", name: "rating", value: "5" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-5", title: "Оценка «5»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-4", name: "rating", value: "4" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-4", title: "Оценка «4»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-3", name: "rating", value: "3" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-3", title: "Оценка «3»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-2", name: "rating", value: "2" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-2", title: "Оценка «2»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-1", name: "rating", value: "1" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-1", title: "Оценка «1»" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "button__container" }, [
      _c(
        "button",
        {
          staticClass: "button",
          attrs: { type: "button", "data-dismiss": "modal" }
        },
        [_vm._v("\n            save changes\n          ")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "button button-black",
          attrs: { type: "button", "data-dismiss": "modal" }
        },
        [_vm._v("\n            cancel\n          ")]
      )
    ])
  }
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formstep.vue?vue&type=template&id=daf51f48&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Formstep.vue?vue&type=template&id=daf51f48& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "summarize__form" }, [
    _c("div", { staticClass: "summarize-bar__step" }, [
      _c("div", { staticClass: "summarize-bar__step-list" }, [
        _c(
          "div",
          {
            staticClass: "summarize-bar__step-item",
            class: { active: _vm.activeStep >= 1 }
          },
          [
            _c("span"),
            _vm._v(" "),
            _c("b", [_vm._v("step 1")]),
            _vm._v(" "),
            _c("p", [_vm._v("upload")])
          ]
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "summarize-bar__step-item",
            class: { active: _vm.activeStep >= 3 }
          },
          [
            _c("span"),
            _vm._v(" "),
            _c("b", [_vm._v("step 2")]),
            _vm._v(" "),
            _c("p", [_vm._v("summarization")])
          ]
        ),
        _vm._v(" "),
        _c(
          "div",
          {
            staticClass: "summarize-bar__step-item",
            class: { active: _vm.activeStep >= 5 }
          },
          [
            _c("span"),
            _vm._v(" "),
            _c("b", [_vm._v("step 3")]),
            _vm._v(" "),
            _c("p", [_vm._v("save summary")])
          ]
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "summarize-bar__svg" }, [
        _c(
          "svg",
          {
            attrs: {
              viewBox: "0 0 608 477",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg"
            }
          },
          [
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M454.979 212.702C454.979 226.853 454.979 241.004 454.979 255.155C454.979 255.712 455.893 255.751 455.893 255.155C455.893 241.004 455.893 226.853 455.893 212.702C455.893 212.106 454.979 212.106 454.979 212.702Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M455.694 213.458C479.743 213.179 503.752 212.861 527.801 212.583C528.357 212.583 528.397 211.669 527.801 211.669C503.752 211.947 479.743 212.265 455.694 212.543C455.137 212.543 455.137 213.458 455.694 213.458Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M455.575 255.672C461.497 255.672 467.42 255.672 473.303 255.672C473.86 255.672 473.899 254.758 473.303 254.758C467.38 254.758 461.458 254.758 455.575 254.758C455.018 254.798 455.018 255.672 455.575 255.672Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M473.343 236.473C473.979 242.873 474.456 249.272 474.655 255.712C474.814 261.277 474.854 266.762 475.41 272.288C475.728 275.547 475.887 278.807 475.887 282.066C475.887 283.895 476.126 285.763 476.523 287.552C477 289.499 477.636 292.123 479.345 293.395C480.896 294.587 483.002 294.548 484.831 293.991C485.387 293.832 485.149 292.958 484.592 293.117C481.571 294.031 479.345 292.918 478.232 290.056C477.358 287.79 476.841 285.246 476.762 282.782C476.722 280.635 476.801 278.489 476.682 276.342C476.444 273.202 476.046 270.101 475.808 266.961C475.49 262.469 475.649 257.938 475.49 253.406C475.251 247.722 474.814 242.078 474.257 236.393C474.178 235.877 473.303 235.877 473.343 236.473Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M474.138 237.825C474.337 236.036 474.893 234.605 476.801 234.009C478.113 233.611 479.504 233.77 480.856 233.889C481.412 233.929 481.412 233.054 480.856 232.975C478.988 232.776 476.921 232.617 475.251 233.691C473.78 234.645 473.422 236.115 473.263 237.745C473.184 238.421 474.059 238.421 474.138 237.825Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M487.891 233.253C485.824 232.379 482.287 231.107 480.577 233.372C479.504 234.803 479.703 237.188 479.663 238.898C479.544 244.224 479.941 249.551 480.339 254.837C481.174 265.689 482.644 276.461 483.36 287.313C483.439 288.864 483.241 290.652 483.598 292.163C484.513 295.621 488.647 294.389 490.992 293.395C491.509 293.196 491.27 292.322 490.753 292.521C489.481 293.037 487.136 294.15 485.745 293.435C484.314 292.68 484.354 291.328 484.354 289.977C484.354 288.705 484.274 287.433 484.155 286.161C483.837 282.027 483.4 277.893 483.002 273.758C482.008 263.702 480.856 253.645 480.577 243.548C480.538 241.442 480.498 239.375 480.617 237.268C480.697 236.075 480.657 234.684 481.531 233.77C483.082 232.18 485.904 233.372 487.653 234.088C488.17 234.326 488.408 233.492 487.891 233.253Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M492.86 292.838C490.515 293.315 490.833 288.227 490.674 287.075C490.436 285.405 490.157 283.736 489.879 282.106C489.362 279.005 489.362 275.905 489.203 272.765C489.044 268.949 488.528 265.133 488.448 261.317C488.329 256.984 488.528 252.691 488.13 248.398C487.892 245.337 487.693 242.237 487.534 239.136C487.375 236.234 488.448 231.107 492.463 232.816C492.98 233.054 493.457 232.259 492.9 232.061C488.726 230.272 486.818 234.287 486.62 237.904C486.461 240.726 486.938 243.707 487.097 246.569C487.216 248.517 487.454 250.465 487.454 252.413C487.494 257.103 487.375 261.833 487.772 266.524C488.09 270.578 488.13 274.673 488.488 278.687C488.806 282.384 489.8 286.001 489.998 289.738C490.118 291.606 490.555 294.23 493.059 293.753C493.655 293.554 493.417 292.719 492.86 292.838Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M492.622 232.895C495.126 231.862 496.199 234.684 496.318 236.632C496.358 237.228 496.438 238.182 495.842 238.579C495.524 238.778 494.887 238.619 494.53 238.778C492.9 239.414 493.377 241.282 493.337 242.753C493.218 249.073 493.178 255.394 493.178 261.714C493.218 268.034 493.298 274.354 493.457 280.675C493.496 282.265 493.019 284.689 494.371 285.922C495.484 286.915 496.597 287.432 496.716 289.141C496.835 291.367 494.967 292.759 492.9 292.719C492.343 292.719 492.343 293.593 492.9 293.633C495.007 293.673 497.074 292.401 497.551 290.254C497.749 289.34 497.591 288.386 497.193 287.551C496.716 286.518 496.001 286.279 495.245 285.524C493.894 284.173 494.331 280.953 494.291 279.204C494.251 277.097 494.212 274.99 494.172 272.884C494.092 268.948 494.053 264.973 494.053 261.038C494.053 257.103 494.053 253.128 494.092 249.193C494.132 247.086 494.132 244.979 494.172 242.872C494.172 242.197 494.013 241.123 494.212 240.487C494.609 239.335 495.206 239.851 496.001 239.533C497.75 238.858 497.312 236.314 496.915 234.843C496.358 232.855 494.45 231.265 492.343 232.14C491.866 232.259 492.105 233.134 492.622 232.895Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M527.721 212.543C527.721 224.826 527.721 237.109 527.721 249.392C527.721 249.948 528.635 249.988 528.635 249.392C528.635 237.109 528.635 224.826 528.635 212.543C528.635 211.987 527.721 211.987 527.721 212.543Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M493.655 255.91C505.103 255.91 516.591 255.91 528.039 255.91C528.596 255.91 528.635 254.996 528.039 254.996C516.591 254.996 505.103 254.996 493.655 254.996C493.059 255.036 493.059 255.91 493.655 255.91Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M527.721 248.914C527.721 251.061 527.721 253.168 527.721 255.314C527.721 255.871 528.635 255.91 528.635 255.314C528.635 253.168 528.635 251.061 528.635 248.914C528.635 248.318 527.721 248.318 527.721 248.914Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M500.532 215.843C500.532 218.824 500.532 221.765 500.532 224.747C500.532 225.303 501.446 225.343 501.446 224.747C501.446 221.765 501.446 218.824 501.446 215.843C501.407 215.246 500.532 215.246 500.532 215.843Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M501.128 225.621C507.607 225.621 514.087 225.621 520.566 225.621C521.122 225.621 521.162 224.707 520.566 224.707C514.087 224.707 507.607 224.707 501.128 224.707C500.532 224.746 500.532 225.621 501.128 225.621Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M500.81 216.28C507.449 216.28 514.087 216.28 520.725 216.28C521.281 216.28 521.321 215.366 520.725 215.366C514.087 215.366 507.449 215.366 500.81 215.366C500.214 215.366 500.214 216.28 500.81 216.28Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M520.725 215.962C520.725 218.864 520.725 221.805 520.725 224.707C520.725 225.263 521.639 225.303 521.639 224.707C521.639 221.805 521.639 218.864 521.639 215.962C521.639 215.405 520.725 215.405 520.725 215.962Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M502.877 219.062C504.785 219.062 506.693 219.062 508.601 219.062C509.158 219.062 509.198 218.148 508.601 218.148C506.693 218.148 504.785 218.148 502.877 218.148C502.281 218.188 502.281 219.062 502.877 219.062Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M512.735 218.784C514.286 218.784 515.796 218.784 517.346 218.784C517.903 218.784 517.943 217.87 517.346 217.87C515.796 217.87 514.286 217.87 512.735 217.87C512.179 217.87 512.179 218.784 512.735 218.784Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M508.562 248.835C506.971 248.517 507.21 246.331 508.084 245.417C509.039 244.423 510.629 244.502 511.622 245.417C512.576 246.331 512.497 247.841 511.583 248.756C510.629 249.749 508.681 249.71 508.084 248.279C507.846 247.762 507.011 248 507.21 248.517C507.965 250.266 510.191 250.862 511.742 249.789C513.371 248.636 513.689 246.172 512.219 244.781C510.788 243.389 508.363 243.469 507.17 245.099C506.097 246.569 506.216 249.272 508.323 249.71C508.88 249.829 509.118 248.954 508.562 248.835Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M518.141 248.914C517.307 248.04 516.313 246.688 517.068 245.456C517.744 244.303 519.612 244.542 520.566 245.178C521.639 245.893 521.957 247.364 521.083 248.358C520.168 249.471 518.579 249.272 517.664 248.278C517.267 247.841 516.631 248.477 517.028 248.914C518.181 250.186 520.288 250.425 521.56 249.153C522.832 247.881 522.752 245.814 521.401 244.661C520.168 243.628 517.823 243.31 516.631 244.542C515.12 246.092 516.273 248.239 517.505 249.511C517.903 249.988 518.539 249.352 518.141 248.914Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M458.317 216.439C458.317 226.257 458.317 236.115 458.317 245.933C458.317 246.49 459.232 246.53 459.232 245.933C459.232 236.115 459.232 226.257 459.232 216.439C459.232 215.882 458.317 215.882 458.317 216.439Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M458.794 216.876C466.387 216.876 473.979 216.876 481.571 216.876C482.128 216.876 482.168 215.962 481.571 215.962C473.979 215.962 466.387 215.962 458.794 215.962C458.198 216.002 458.198 216.876 458.794 216.876Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M462.69 219.937C462.65 219.818 462.73 219.619 462.849 219.539C463.008 219.42 463.207 219.5 463.326 219.659C463.565 220.016 463.048 220.215 462.769 220.016C462.292 219.698 461.855 220.454 462.332 220.772C462.809 221.09 463.485 221.01 463.922 220.652C464.399 220.215 464.399 219.539 464.042 219.023C463.644 218.546 462.968 218.387 462.451 218.744C461.935 219.102 461.736 219.778 462.014 220.334C462.094 220.573 462.451 220.613 462.61 220.493C462.769 220.414 462.809 220.175 462.69 219.937Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M419.402 177.842C419.402 179.789 419.402 181.737 419.402 183.685C419.402 184.241 420.316 184.281 420.316 183.685C420.316 181.737 420.316 179.789 420.316 177.842C420.277 177.285 419.402 177.285 419.402 177.842Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M420.157 178.001C452.593 178.001 485.029 178.001 517.465 178.001C518.022 178.001 518.062 177.086 517.465 177.086C485.029 177.086 452.593 177.086 420.157 177.086C419.601 177.086 419.601 178.001 420.157 178.001Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M420.794 184.44C452.832 184.44 484.831 184.44 516.869 184.44C517.426 184.44 517.465 183.526 516.869 183.526C484.831 183.526 452.832 183.526 420.794 183.526C420.197 183.526 420.197 184.44 420.794 184.44Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M517.028 178.16C517.028 179.988 517.028 181.856 517.028 183.685C517.028 184.241 517.943 184.281 517.943 183.685C517.943 181.856 517.943 179.988 517.943 178.16C517.943 177.603 517.028 177.603 517.028 178.16Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M420.873 141.033C420.873 142.742 420.873 144.491 420.873 146.201C420.873 146.757 421.787 146.797 421.787 146.201C421.787 144.491 421.787 142.742 421.787 141.033C421.748 140.477 420.873 140.477 420.873 141.033Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M421.827 141.749C453.388 141.749 484.99 141.749 516.551 141.749C517.108 141.749 517.148 140.834 516.551 140.834C484.99 140.834 453.388 140.834 421.827 140.834C421.27 140.834 421.27 141.749 421.827 141.749Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M421.588 147.433C452.911 147.433 484.235 147.433 515.518 147.433C516.074 147.433 516.114 146.519 515.518 146.519C484.195 146.519 452.872 146.519 421.588 146.519C420.992 146.519 420.992 147.433 421.588 147.433Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M516.114 141.55C516.114 143.259 516.114 145.008 516.114 146.717C516.114 147.274 517.028 147.313 517.028 146.717C517.028 145.008 517.028 143.259 517.028 141.55C517.028 140.993 516.114 140.953 516.114 141.55Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M431.884 140.635C431.884 139.006 431.884 137.336 431.924 135.706C431.765 135.865 431.606 136.024 431.486 136.144C451.202 134.752 471.037 134.951 490.714 136.78C490.555 136.621 490.396 136.462 490.276 136.342C490.475 137.972 490.714 139.602 490.912 141.232C490.992 141.788 491.866 141.788 491.827 141.232C491.628 139.602 491.389 137.972 491.191 136.342C491.151 136.104 491.032 135.905 490.753 135.905C471.077 134.077 451.242 133.878 431.526 135.269C431.288 135.269 431.089 135.468 431.089 135.706C431.089 137.336 431.089 139.006 431.049 140.635C431.009 141.232 431.884 141.232 431.884 140.635Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M449.93 134.673C450.209 133.918 450.05 133.321 450.169 132.606C450.527 130.777 452.077 130.658 453.667 130.579C456.012 130.499 458.357 130.42 460.703 130.34C465.671 130.181 470.6 130.022 475.569 129.863C480.339 129.704 485.149 129.466 489.919 129.426C492.383 129.386 494.888 129.466 497.352 129.863C499.22 130.181 499.697 131.294 499.896 133.043C500.055 134.156 500.135 135.269 500.214 136.422C500.373 136.263 500.532 136.104 500.651 135.985C497.153 136.024 493.695 135.826 490.237 135.468C489.68 135.388 489.68 136.303 490.237 136.382C493.695 136.74 497.153 136.939 500.651 136.899C500.89 136.899 501.128 136.7 501.089 136.462C500.969 134.713 501.128 131.771 500.135 130.221C499.181 128.79 496.716 128.909 495.206 128.75C488.965 128.194 482.565 128.79 476.324 128.989C470.044 129.187 463.803 129.426 457.523 129.625C455.972 129.664 454.382 129.744 452.832 129.784C452.037 129.823 451.083 129.704 450.328 130.062C448.658 130.897 449.533 133.083 449.016 134.474C448.897 134.951 449.771 135.19 449.93 134.673Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M473.9 129.982C473.542 130.102 473.502 130.3 473.78 130.539C473.82 130.618 473.9 130.738 473.939 130.817C474.138 131.215 474.297 131.652 474.377 132.089C474.575 132.924 474.615 133.759 474.496 134.633C474.416 135.19 475.291 135.428 475.37 134.872C475.609 133.242 475.41 131.652 474.655 130.221C474.456 129.823 474.178 129.267 473.661 129.307C473.264 129.307 473.025 129.625 473.025 129.982C473.025 130.539 473.939 130.539 473.9 129.982Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M481.81 129.148C483.002 131.135 483.201 133.401 482.366 135.587C482.167 136.144 483.042 136.343 483.241 135.826C484.155 133.441 483.916 130.897 482.605 128.711C482.287 128.194 481.531 128.671 481.81 129.148Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M471.117 129.267C471.475 128.591 470.6 126.246 470.481 125.411C470.282 124.139 470.163 122.867 470.123 121.595C470.083 120.721 469.924 120.681 470.719 120.204C471.117 120.005 471.753 119.965 472.19 119.886C473.621 119.608 475.092 119.369 476.563 119.29C478.232 119.171 482.724 118.455 483.598 120.323C484.036 121.277 483.877 123.066 483.837 124.099C483.797 125.53 483.678 126.961 483.439 128.392C483.36 128.949 484.234 129.187 484.314 128.631C484.632 126.643 484.791 124.656 484.711 122.629C484.672 121.516 484.751 119.886 483.837 119.051C482.883 118.177 481.134 118.336 479.941 118.296C477.755 118.256 475.569 118.415 473.422 118.773C472.349 118.932 469.885 118.932 469.288 120.005C468.652 121.078 469.368 123.742 469.487 124.855C469.606 125.968 469.606 128.83 470.521 129.505C471.037 129.903 471.554 129.744 471.793 129.148C471.872 128.989 471.872 128.75 471.713 128.591C471.196 128.114 470.64 128.154 470.322 128.79C470.083 129.307 470.839 129.784 471.117 129.267Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M472.19 118.932C471.833 117.461 470.799 116.269 470.243 114.838C470.004 114.241 469.805 113.685 469.646 113.049C469.607 112.85 469.567 112.612 469.527 112.413C469.09 111.538 469.368 110.942 470.282 110.664C470.64 111.061 471.197 110.545 470.998 110.107C469.845 107.881 469.249 105.457 469.408 102.913C469.487 101.442 469.408 101.482 470.759 100.846C472.031 100.21 472.508 100.408 473.502 101.442C474.337 102.277 474.854 103.509 475.251 104.582C476.841 108.955 477.477 113.764 477.596 118.375C477.596 118.932 478.511 118.972 478.511 118.375C478.391 114.599 477.875 110.863 476.96 107.166C476.285 104.582 475.45 101.283 472.985 99.8122C471.197 98.7787 469.289 99.3352 468.772 101.362C467.977 104.383 468.891 107.842 470.282 110.545C470.521 110.346 470.759 110.187 470.998 109.988C469.567 108.438 468.494 110.584 468.613 111.896C468.851 114.281 470.203 118.057 472.349 119.409C472.469 119.488 472.667 119.488 472.787 119.409C472.826 119.369 472.906 119.329 472.946 119.29C473.105 119.17 473.184 119.011 473.144 118.773C473.144 118.733 473.105 118.654 473.105 118.614C472.906 118.137 472.071 118.375 472.19 118.932Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M477.238 109.432C476.921 108.199 477.159 107.007 477.437 105.775C477.715 104.622 479.107 101.561 480.697 103.549C481.015 103.946 481.531 103.509 481.452 103.111C482.962 102.754 483.718 103.072 483.638 104.105C483.678 104.344 483.678 104.622 483.678 104.9C483.678 105.496 483.638 106.093 483.598 106.689C483.479 108.16 483.32 109.591 483.082 111.022C482.684 113.486 482.048 115.911 481.293 118.296C481.134 118.852 481.969 119.091 482.167 118.534C483.002 115.911 483.678 113.248 484.075 110.505C484.393 108.358 484.91 105.814 484.513 103.628C484.314 102.475 483.479 101.124 482.088 101.243C480.975 101.323 480.418 102.316 480.577 103.35C480.816 103.191 481.094 103.072 481.333 102.913C480.339 101.601 478.471 101.959 477.517 103.151C476.245 104.741 475.927 107.762 476.364 109.63C476.483 110.227 477.358 109.988 477.238 109.432Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M444.922 135.587C445.518 136.064 445.598 137.297 445.717 138.012C445.876 138.926 445.955 139.841 445.955 140.795C445.955 141.351 446.87 141.391 446.87 140.795C446.87 139.642 446.75 138.489 446.512 137.376C446.353 136.581 446.194 135.508 445.558 134.951C445.12 134.594 444.484 135.23 444.922 135.587Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M455.456 135.031C456.251 136.899 456.489 138.886 456.131 140.874C456.012 141.43 456.886 141.669 457.006 141.112C457.403 138.966 457.165 136.819 456.33 134.792C456.131 134.275 455.257 134.514 455.456 135.031Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M190.323 80.9311C190.323 111.896 190.323 142.901 190.323 173.867C190.323 182.612 190.323 191.357 190.323 200.062C190.323 200.618 191.237 200.658 191.237 200.062C191.237 169.097 191.237 138.092 191.237 107.126C191.237 98.3813 191.237 89.6363 191.237 80.9311C191.237 80.3348 190.323 80.3348 190.323 80.9311Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M191.357 81.09C220.931 81.09 250.505 81.09 280.118 81.09C288.585 81.09 297.012 81.09 305.479 81.09C306.035 81.09 306.075 80.1758 305.479 80.1758C275.905 80.1758 246.331 80.1758 216.717 80.1758C208.25 80.1758 199.823 80.1758 191.357 80.1758C190.8 80.2155 190.8 81.09 191.357 81.09Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M305.002 81.2094C305.121 112.373 305.161 143.537 305.081 174.701C305.041 183.486 305.041 192.231 305.002 201.016C305.002 201.572 305.876 201.572 305.916 201.016C306.035 169.892 306.075 138.767 305.995 107.643C305.956 98.8186 305.956 90.0339 305.916 81.2094C305.916 80.6131 305.002 80.6131 305.002 81.2094Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M191.078 201.095C220.851 201.095 250.663 201.095 280.436 201.095C288.863 201.095 297.29 201.095 305.757 201.095C306.314 201.095 306.353 200.181 305.757 200.181C275.984 200.181 246.172 200.181 216.399 200.181C207.972 200.181 199.545 200.181 191.078 200.181C190.482 200.181 190.482 201.095 191.078 201.095Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M193.264 85.3832C193.264 113.606 193.264 141.788 193.264 170.011C193.264 178.08 193.264 186.149 193.264 194.258C193.264 194.815 194.179 194.855 194.179 194.258C194.179 166.036 194.179 137.853 194.179 109.631C194.179 101.561 194.179 93.4922 194.179 85.3832C194.139 84.787 193.264 84.787 193.264 85.3832Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M194.258 86.0983C221.845 86.0983 249.431 86.0983 277.057 86.0983C284.848 86.0983 292.639 86.0983 300.43 86.0983C300.987 86.0983 301.027 85.1841 300.43 85.1841C272.844 85.1841 245.257 85.1841 217.631 85.1841C209.84 85.1841 202.049 85.1841 194.258 85.1841C193.662 85.1841 193.662 86.0983 194.258 86.0983Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M193.98 195.49C220.573 195.49 247.126 195.49 273.719 195.49C281.271 195.49 288.784 195.49 296.336 195.49C296.893 195.49 296.933 194.576 296.336 194.576C269.744 194.576 243.191 194.576 216.598 194.576C209.045 194.576 201.533 194.576 193.98 194.576C193.384 194.576 193.384 195.49 193.98 195.49Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M299.953 86.4565C299.953 114.48 299.953 142.464 299.953 170.488C299.953 178.398 299.953 186.348 299.953 194.258C299.953 194.815 300.868 194.855 300.868 194.258C300.868 166.235 300.868 138.251 300.868 110.227C300.868 102.317 300.868 94.3667 300.868 86.4565C300.828 85.8602 299.953 85.8602 299.953 86.4565Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M261.515 86.3769C245.138 106.888 228.761 127.359 212.424 147.87C212.066 148.307 212.702 148.943 213.06 148.506C229.437 127.995 245.814 107.524 262.151 87.0129C262.509 86.5359 261.873 85.8999 261.515 86.3769Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M280.675 87.5298C259.567 112.811 238.5 138.092 217.393 163.373C211.391 170.568 205.348 177.802 199.346 184.997C198.988 185.434 199.624 186.07 199.982 185.633C221.089 160.352 242.157 135.071 263.264 109.79C269.266 102.595 275.309 95.3605 281.311 88.1658C281.669 87.7285 281.032 87.0925 280.675 87.5298Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M298.443 126.127C288.704 139.165 279.085 152.282 269.584 165.519C269.266 165.996 270.022 166.433 270.34 165.956C279.8 152.72 289.42 139.602 299.198 126.564C299.556 126.127 298.761 125.69 298.443 126.127Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M74.4517 411.095C89.0002 405.291 105.059 406.285 119.965 410.061C135.388 413.957 150.136 420.237 165.042 425.643C195.014 436.495 225.661 446.313 257.461 450.05C275.309 452.156 293.395 452.276 311.203 449.652C311.958 449.533 311.64 448.38 310.885 448.5C278.409 453.309 245.377 448.698 213.895 440.232C198.472 436.058 183.287 430.97 168.222 425.564C153.276 420.197 138.489 413.917 123.145 409.703C107.206 405.291 89.7952 403.701 74.094 409.982C73.4182 410.22 73.7362 411.373 74.4517 411.095Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M289.817 425.206C320.663 431.367 351.151 439.079 382.117 444.763C411.85 450.248 442.179 453.786 472.468 452.156C489.203 451.242 505.819 448.738 521.957 444.167C522.712 443.968 522.395 442.815 521.639 443.014C492.741 451.202 462.451 452.673 432.599 450.407C401.872 448.102 371.623 441.821 341.572 435.183C324.439 431.407 307.347 427.472 290.175 424.053C289.42 423.894 289.062 425.047 289.817 425.206Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M456.727 319.113C475.887 312.156 494.967 322.929 513.093 328.136C531.855 333.542 551.531 332.35 570.532 328.653C581.741 326.467 592.752 323.485 603.723 320.464C604.478 320.266 604.16 319.113 603.405 319.312C584.047 324.638 564.371 330.004 544.217 330.601C534.081 330.919 523.905 329.925 514.127 327.182C504.865 324.598 496 320.703 486.699 318.159C476.841 315.496 466.188 314.422 456.409 317.96C455.694 318.199 455.972 319.351 456.727 319.113Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M439.317 294.548C441.82 294.548 443.848 292.554 443.848 290.096C443.848 287.637 441.82 285.644 439.317 285.644C436.814 285.644 434.786 287.637 434.786 290.096C434.786 292.554 436.814 294.548 439.317 294.548Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M451.003 287.154C451.904 287.154 452.633 286.442 452.633 285.564C452.633 284.686 451.904 283.974 451.003 283.974C450.103 283.974 449.374 284.686 449.374 285.564C449.374 286.442 450.103 287.154 451.003 287.154Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M149.738 94.2873C152.263 94.2873 154.309 92.2941 154.309 89.8353C154.309 87.3765 152.263 85.3833 149.738 85.3833C147.214 85.3833 145.167 87.3765 145.167 89.8353C145.167 92.2941 147.214 94.2873 149.738 94.2873Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M154.15 89.3183C156.587 89.3183 158.563 87.3785 158.563 84.9856C158.563 82.5927 156.587 80.6528 154.15 80.6528C151.714 80.6528 149.738 82.5927 149.738 84.9856C149.738 87.3785 151.714 89.3183 154.15 89.3183Z",
                fill: "#EC615B"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M391.378 70.3578C394.342 70.3578 396.745 68.0086 396.745 65.1108C396.745 62.2129 394.342 59.8638 391.378 59.8638C388.415 59.8638 386.012 62.2129 386.012 65.1108C386.012 68.0086 388.415 70.3578 391.378 70.3578Z",
                fill: "#5222D0"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M403.621 86.4565C405.092 86.4565 406.285 85.2819 406.285 83.833C406.285 82.3841 405.092 81.2095 403.621 81.2095C402.151 81.2095 400.958 82.3841 400.958 83.833C400.958 85.2819 402.151 86.4565 403.621 86.4565Z",
                fill: "#EC615B"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M145.167 245.416C144.968 243.071 146.558 240.885 148.824 240.249C151.09 239.613 152.958 240.925 154.707 242.197C157.052 243.946 159.954 245.933 162.816 243.906C163.849 243.151 164.565 242.038 164.724 240.766C164.923 239.374 164.326 237.705 165.241 236.473C166.234 235.161 168.619 235.996 169.732 236.552C172.237 237.745 175.735 239.732 177.802 236.711C178.239 236.075 177.205 235.479 176.768 236.115C174.979 238.699 171.521 235.996 169.573 235.201C168.182 234.644 166.513 234.366 165.121 235.161C163.69 235.956 163.492 237.387 163.531 238.897C163.571 240.487 163.571 241.918 162.14 242.952C160.868 243.866 159.397 243.747 158.046 243.071C155.184 241.64 153.037 238.579 149.5 238.937C146.28 239.255 143.696 242.236 143.974 245.456C144.014 246.172 145.207 246.172 145.167 245.416Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M160.709 253.366C161.544 249.709 165.439 248.477 168.778 248.795C171.203 249.034 173.827 250.504 176.291 249.948C178.477 249.471 178.239 247.841 178.477 246.092C179.034 241.64 184.559 241.6 187.898 241.72C188.653 241.759 188.653 240.567 187.898 240.527C184.957 240.408 181.657 240.368 179.272 242.395C178.358 243.19 177.603 244.224 177.364 245.416C177.245 246.013 177.444 246.688 177.285 247.245C176.728 249.113 175.258 249.034 173.747 248.716C170.607 248.04 167.586 247.006 164.406 248.08C162.021 248.875 160.113 250.624 159.556 253.128C159.397 253.804 160.55 254.122 160.709 253.366Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M286.995 312.316C285.564 311.919 284.729 310.488 284.848 309.017C285.007 307.188 286.717 306.274 288.426 306.592C292.798 307.387 291.646 312.952 287.869 313.707C287.114 313.866 287.432 315.019 288.187 314.86C290.612 314.383 292.6 312.197 292.52 309.653C292.48 307.308 290.453 305.598 288.227 305.36C286.041 305.121 284.014 306.433 283.696 308.699C283.418 310.766 284.61 312.912 286.677 313.429C287.432 313.668 287.75 312.515 286.995 312.316Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M411.611 116.666C409.942 116.547 408.709 115.037 408.789 113.367C408.868 111.817 410.061 110.426 411.412 109.75C412.764 109.034 414.871 108.756 416.103 109.909C417.097 110.903 416.977 112.652 415.666 113.288C414.99 113.606 415.586 114.639 416.262 114.321C417.931 113.526 418.408 111.38 417.494 109.79C416.302 107.723 413.4 107.603 411.412 108.438C409.345 109.313 407.596 111.3 407.636 113.606C407.676 115.871 409.425 117.7 411.651 117.859C412.406 117.938 412.406 116.746 411.611 116.666Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M147.035 158.523C146.518 157.41 146.916 156.814 148.228 156.774C148.983 155.939 149.619 155.939 150.096 156.734C150.493 157.012 150.891 157.489 151.249 157.847C151.765 158.364 152.56 159.556 153.276 159.676C154.27 159.874 155.025 158.881 155.144 158.006C155.263 157.41 155.104 156.893 154.866 156.337C154.747 156.019 154.508 155.74 154.389 155.422C153.753 153.753 154.468 152.362 156.257 152.521C157.171 152.6 158.125 153.912 158.841 154.468C159.358 154.866 159.914 155.184 160.55 155.383C160.789 155.462 161.107 155.343 161.226 155.104C161.743 154.19 161.504 153.475 161.107 152.521C160.709 151.487 160.55 151.606 161.345 150.533C162.1 149.46 162.538 149.38 163.73 149.738C164.644 150.016 165.4 150.613 166.155 151.169C166.791 151.606 167.387 150.573 166.751 150.136C165.002 148.864 162.657 147.472 160.59 148.943C160.033 149.341 159.596 149.937 159.477 150.613C159.238 151.885 160.789 153.395 160.192 154.468C160.431 154.389 160.63 154.27 160.868 154.19C158.841 153.514 157.688 150.851 155.303 151.249C153.395 151.567 152.441 153.475 153.037 155.224C153.236 155.78 154.906 158.006 153.196 158.086C152.998 158.086 151.646 156.575 151.487 156.416C150.652 155.581 149.698 154.27 148.387 154.27C145.962 154.27 145.564 156.973 145.882 158.801C146.002 159.596 147.154 159.278 147.035 158.523Z",
                fill: "#5222D0"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M377.784 203.679C378.38 202.924 379.016 202.447 379.93 202.129C379.692 202.009 379.453 201.85 379.215 201.731C379.573 203.162 378.778 204.911 380.169 205.945C380.805 206.422 381.64 206.462 382.196 205.865C382.633 205.388 382.594 204.832 382.753 204.235C383.19 202.566 385.615 200.221 387.006 202.964C387.523 203.997 387.761 205.388 389.232 205.468C390.067 205.508 390.663 204.911 390.822 204.116C390.941 203.401 390.583 202.685 390.544 201.97C390.504 201.334 390.743 200.38 391.22 199.942C392.849 198.472 393.644 200.221 394.082 201.373C394.4 202.248 394.4 203.003 395.513 203.202C396.427 203.361 396.983 202.924 397.103 202.049C397.182 201.294 395.99 201.294 395.91 202.049C395.393 201.612 395.155 201.135 395.195 200.499C395.155 200.26 395.115 200.022 395.036 199.783C394.877 199.386 394.678 199.068 394.32 198.79C393.684 198.233 392.77 198.074 391.935 198.193C390.902 198.352 390.107 199.108 389.709 200.022C389.51 200.459 389.391 200.896 389.351 201.373C389.351 201.493 389.59 203.043 389.55 203.083C388.437 204.275 388 202.009 387.801 201.652C387.562 201.254 387.324 200.896 386.887 200.698C386.052 200.221 384.939 200.419 384.104 200.737C383.11 201.135 382.315 201.93 381.878 202.884C381.64 203.401 381.56 205.309 380.487 203.48C380.328 203.202 380.487 201.771 380.368 201.294C380.288 201.016 379.93 200.777 379.652 200.896C378.539 201.294 377.704 201.811 376.989 202.765C376.472 203.441 377.307 204.275 377.784 203.679Z",
                fill: "#EC615B"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M291.169 54.9348C293.236 52.033 296.058 58.3135 297.29 59.2675C298.721 60.3805 300.192 60.301 301.623 59.3073C302.974 58.3533 303.809 57.3595 305.638 58.075C307.029 58.6315 307.983 59.983 309.016 60.9768C310.487 62.368 312.196 63.3618 314.224 62.7258C314.939 62.4873 314.621 61.3345 313.906 61.573C310.606 62.6463 308.698 58.0353 306.035 56.9223C303.531 55.8888 302.617 57.598 300.589 58.552C297.211 60.142 296.336 54.8155 294.07 53.5435C292.679 52.7883 291.01 52.987 290.095 54.2988C289.698 54.9348 290.731 55.531 291.169 54.9348Z",
                fill: "#EC615B"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M308.46 53.2651C310.05 51.3968 311.561 55.3718 312.395 56.2066C312.992 56.7631 313.826 57.2401 314.661 57.1606C316.132 57.0016 316.609 55.4911 318.278 55.4513C320.147 55.4116 321.657 56.8824 322.929 58.0749C323.486 58.5916 324.32 57.7569 323.764 57.2401C322.571 56.0873 321.26 54.8948 319.63 54.4178C318.954 54.2191 318.199 54.1794 317.523 54.2986C316.768 54.4179 316.33 54.8948 315.655 55.1333C314.82 55.2128 314.025 55.2526 313.19 55.3321C312.992 55.0538 312.793 54.8153 312.594 54.5371C312.236 54.0203 311.998 53.4638 311.64 52.9471C311.322 52.5098 310.924 52.1521 310.447 51.9136C309.454 51.4366 308.341 51.5161 307.585 52.3906C307.108 52.9868 307.943 53.8613 308.46 53.2651Z",
                fill: "#EC615B"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M43.7648 356.756C43.7648 360.016 43.7648 363.315 43.7648 366.574C199.823 391.1 355.882 415.586 511.98 440.112C520.009 412.088 528.079 384.064 536.108 356.001C535.75 352.741 535.432 349.442 535.075 346.183C371.305 349.72 207.535 353.258 43.7648 356.756Z",
                fill: "black"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M44.0431 356.994C199.863 381.401 355.683 405.768 511.463 430.174C519.533 401.991 527.602 373.848 535.671 345.666C530.981 345.149 524.7 344.513 517.545 343.758C430.89 334.575 362.202 327.937 248.477 317.006C193.185 311.719 142.822 306.909 136.74 306.313C105.854 323.207 74.9686 340.101 44.0431 356.994Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M512.139 430.214C355.961 405.887 199.784 381.56 43.566 357.233C74.6505 340.18 105.695 323.127 136.78 306.075C269.664 319.311 402.548 332.548 535.433 345.785C527.681 373.928 519.89 402.071 512.139 430.214Z",
                stroke: "#161616",
                "stroke-width": "3",
                "stroke-miterlimit": "10"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M42.9698 356.716C42.9698 359.857 42.9698 362.997 42.9698 366.137C42.9698 366.892 44.1623 366.892 44.1623 366.137C44.1623 362.997 44.1623 359.857 44.1623 356.716C44.1623 355.961 42.9698 355.961 42.9698 356.716Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M511.026 430.731C511.026 433.712 511.026 436.694 511.026 439.675C511.026 440.43 512.219 440.43 512.219 439.675C512.219 436.694 512.219 433.712 512.219 430.731C512.219 429.936 511.026 429.936 511.026 430.731Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d: "M43.566 366.137L511.622 439.634",
                stroke: "#161616",
                "stroke-width": "3",
                "stroke-miterlimit": "10"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M535.234 345.904C535.234 349.522 535.234 353.099 535.234 356.716C535.234 357.472 536.426 357.472 536.426 356.716C536.426 353.099 536.426 349.522 536.426 345.904C536.426 345.109 535.234 345.109 535.234 345.904Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M535.035 357.272C527.761 384.938 520.129 412.525 512.139 439.992C511.94 440.747 513.093 441.065 513.292 440.31C521.282 412.843 528.914 385.256 536.188 357.59C536.387 356.875 535.234 356.557 535.035 357.272Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M281.47 348.011C284.213 344.116 291.089 341.89 294.508 346.143C294.866 346.58 295.502 345.944 295.144 345.507C291.328 340.777 283.736 343.241 280.675 347.574C280.357 348.011 281.112 348.449 281.47 348.011Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M295.104 346.024C302.975 343.559 310.845 341.135 318.716 338.67C319.272 338.511 319.034 337.637 318.477 337.796C310.607 340.26 302.736 342.685 294.866 345.149C294.349 345.348 294.548 346.183 295.104 346.024Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M281.231 348.409C282.742 347.415 284.61 347.057 286.359 347.614C287.512 347.972 288.386 348.568 288.863 349.681C289.539 351.311 288.267 352.424 286.995 353.298C286.518 353.616 286.955 354.411 287.432 354.053C289.658 352.543 291.209 349.999 288.744 347.852C286.518 345.944 283.139 346.064 280.794 347.574C280.277 347.932 280.754 348.727 281.231 348.409Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M287.075 354.292C290.851 354.133 296.058 353.378 296.376 348.647C296.416 348.091 295.502 348.091 295.462 348.647C295.184 352.821 290.255 353.258 287.075 353.417C286.518 353.417 286.518 354.292 287.075 354.292Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M296.456 349.243C304.406 346.699 312.395 344.195 320.385 341.77C320.942 341.611 320.703 340.737 320.147 340.896C312.157 343.32 304.167 345.825 296.217 348.369C295.661 348.528 295.899 349.402 296.456 349.243Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M318.358 338.71C319.272 339.187 319.868 340.021 320.067 341.015C320.186 341.572 321.021 341.333 320.942 340.777C320.743 339.544 319.948 338.511 318.835 337.915C318.318 337.676 317.841 338.431 318.358 338.71Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M281.549 348.647C283.974 347.296 286.955 347.653 288.943 349.601C289.34 349.999 289.976 349.363 289.579 348.965C287.313 346.779 283.855 346.342 281.112 347.892C280.595 348.17 281.033 348.925 281.549 348.647Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M276.779 373.173C276.899 371.384 282.702 372.696 283.656 372.776C285.445 372.974 287.273 373.213 289.062 373.412C292.918 373.849 296.813 374.326 300.669 374.763C301.226 374.843 301.226 373.928 300.669 373.849C295.382 373.253 290.096 372.617 284.769 372.02C282.583 371.782 279.92 371.027 277.733 371.305C276.62 371.464 275.905 372.06 275.825 373.173C275.825 373.73 276.74 373.73 276.779 373.173Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M276.223 374.008C284.093 374.882 291.964 375.638 299.834 376.313C300.033 376.313 300.232 376.154 300.272 375.995C300.51 374.922 301.146 374.167 302.18 373.809C302.06 373.531 301.941 373.252 301.822 372.974C300.073 373.809 297.131 377.228 300.351 378.142C302.855 378.857 305.757 378.897 308.341 379.255C310.607 379.573 313.151 380.288 315.416 380.209C316.808 380.169 317.245 378.698 317.682 377.546C318.04 376.552 318 375.876 317.006 375.32C315.019 374.246 312.157 373.928 309.971 373.57C307.506 373.133 305.002 372.934 302.458 372.855C301.901 372.855 301.901 373.729 302.458 373.769C305.519 373.849 308.54 374.167 311.521 374.803C312.674 375.041 314.462 375.2 315.456 375.797C316.132 375.797 316.45 376.154 316.41 376.87C316.728 377.387 316.728 377.864 316.37 378.301C315.814 379.295 314.9 379.175 313.866 379.136C311.123 379.016 308.301 378.38 305.598 378.023C304.207 377.824 302.378 377.943 301.067 377.426C298.682 376.472 301.027 374.405 302.299 373.809C302.736 373.61 302.418 372.815 301.941 372.974C301.385 373.173 300.868 373.372 300.431 373.809C300.033 374.167 299.874 375.001 299.516 375.28C298.92 375.717 296.615 375.161 295.899 375.121C294.587 375.002 293.276 374.882 291.964 374.763C286.717 374.286 281.47 373.729 276.223 373.173C275.627 373.054 275.666 373.928 276.223 374.008Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M258.892 362.719C258.892 362.679 258.892 362.599 258.932 362.56C258.971 362.44 259.011 362.361 259.13 362.321C259.289 362.202 259.528 362.162 259.687 362.083C260.005 362.003 260.879 361.804 260.84 362.361C260.8 362.758 260.243 362.838 259.925 362.838C259.528 362.838 259.17 362.719 258.852 362.48C258.415 362.122 257.779 362.758 258.216 363.116C259.011 363.752 260.084 363.991 260.999 363.514C261.913 363.037 261.992 361.884 261.078 361.327C260.243 360.85 258.733 361.208 258.137 361.963C257.54 362.679 258.097 363.712 259.011 363.593C259.687 363.514 259.448 362.639 258.892 362.719Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M259.766 338.074C261.158 338.63 262.668 338.63 264.059 338.074C264.775 337.756 266.246 336.802 265.292 335.927C264.139 334.894 257.938 336.166 259.806 338.034C260.204 338.432 260.84 337.795 260.442 337.398C260.124 337.08 262.589 336.523 262.787 336.523C263.264 336.484 264.815 336.285 264.059 337.12C263.702 337.517 262.549 337.637 262.032 337.637C261.317 337.676 260.681 337.517 260.045 337.239C259.488 337 259.25 337.875 259.766 338.074Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M258.216 337.279C258.494 336.682 258.971 336.245 259.607 335.967C259.766 335.887 259.965 335.728 259.925 335.53C259.886 335.331 259.846 335.172 259.727 334.973C259.647 334.894 259.568 334.814 259.488 334.774C259.448 334.735 259.409 334.735 259.369 334.695C259.289 334.615 259.289 334.615 259.369 334.655C259.766 334.099 260.8 334.536 261.038 334.973C261.317 335.45 262.112 335.013 261.794 334.536C261.277 333.701 260.204 333.343 259.289 333.701C258.892 333.86 258.415 334.178 258.375 334.655C258.375 334.854 258.455 335.053 258.574 335.172C258.653 335.251 259.011 335.49 259.011 335.53C259.13 335.371 259.25 335.251 259.329 335.092C258.494 335.41 257.819 335.967 257.421 336.802C257.183 337.318 257.938 337.795 258.216 337.279Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M257.739 337.159C256.666 337.08 255.712 338.352 256.388 339.346C256.984 340.18 258.296 340.021 258.812 339.226C258.574 339.226 258.296 339.226 258.057 339.226C258.574 340.18 259.289 341.174 260.522 341.015C261.078 340.936 261.078 340.061 260.522 340.101C259.607 340.18 259.21 339.425 258.812 338.749C258.653 338.431 258.216 338.471 258.057 338.749C257.421 339.664 256.467 337.954 257.739 338.034C258.296 338.074 258.296 337.199 257.739 337.159Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M260.402 340.817C260.641 341.214 260.204 341.612 260.681 342.009C261.197 342.407 262.39 342.327 262.907 341.93C263.225 341.691 263.225 341.492 263.423 341.174C263.861 340.419 263.94 340.777 264.695 340.618C265.292 340.499 265.61 340.141 265.61 339.545C265.451 339.704 265.292 339.863 265.172 339.982C265.649 339.942 266.007 340.737 266.564 340.737C267.041 340.737 267.637 340.26 267.915 339.863C268.233 339.465 268.392 338.948 268.154 338.432C268.034 338.233 267.557 338.034 267.518 337.915C267.319 337.438 267.875 336.643 268.074 336.206C268.472 335.172 268.71 333.145 266.921 333.503C266.603 333.542 266.405 333.821 266.126 333.9C265.451 334.139 265.013 333.98 264.377 333.94C263.384 333.86 262.509 334.099 261.595 334.496C261.078 334.735 261.515 335.49 262.032 335.252C263.026 334.814 263.9 334.775 264.934 334.894C265.212 334.934 265.49 335.053 265.769 334.973C266.087 334.934 266.603 334.417 266.842 334.417C268.034 334.457 266.683 336.921 266.603 337.279C266.444 337.835 266.564 337.716 266.603 338.233C266.603 338.471 267.001 338.511 267.041 338.63C267.319 340.618 265.888 338.948 265.133 339.028C264.894 339.068 264.695 339.227 264.695 339.465C264.695 339.743 263.463 339.624 263.264 339.704C262.907 339.823 262.867 339.982 262.589 340.26C262.35 340.538 261.754 341.771 261.277 341.174C261.197 341.095 261.277 340.578 261.158 340.379C260.879 339.863 260.084 340.34 260.402 340.817Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M358.346 393.565C357.392 393.485 355.961 393.167 355.286 392.372C353.298 389.987 356.12 389.033 357.631 388.914C359.141 388.795 360.811 388.914 362.321 389.033C363.315 389.113 364.349 389.232 365.064 390.027C366.336 391.418 365.303 392.929 363.872 393.485C362.202 394.161 359.857 394.002 358.227 393.406C357.671 393.207 357.472 394.042 357.989 394.28C360.374 395.194 364.905 395.314 366.336 392.65C367.648 390.186 365.064 388.477 362.918 388.238C360.374 387.92 355.166 387.125 353.855 390.146C352.702 392.809 356.24 394.32 358.307 394.519C358.943 394.519 358.943 393.604 358.346 393.565Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M358.863 391.259C358.625 391.061 360.016 390.822 360.135 390.782C360.533 390.743 361.447 390.703 361.407 391.22C361.328 392.015 359.102 391.617 358.585 391.458C358.028 391.299 357.79 392.174 358.346 392.333C359.42 392.611 360.851 392.77 361.844 392.213C362.6 391.776 362.719 390.862 362.043 390.305C361.208 389.63 359.738 389.749 358.784 390.107C358.108 390.385 357.512 391.259 358.227 391.856C358.664 392.253 359.3 391.617 358.863 391.259Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M359.539 391.975C359.936 391.657 360.453 391.617 360.89 391.776C360.771 391.577 360.692 391.418 360.572 391.219C360.533 391.299 360.374 391.339 360.294 391.339C360.215 391.339 360.135 391.339 360.056 391.339C359.897 391.339 359.857 391.259 359.897 391.458C359.936 391.696 359.897 391.498 360.056 391.537C360.175 391.577 360.294 391.577 360.413 391.577C360.652 391.617 360.89 391.617 361.129 391.537C361.685 391.378 361.447 390.504 360.89 390.663C360.612 390.742 360.334 390.623 360.056 390.623C359.817 390.623 359.618 390.703 359.42 390.862C359.062 391.14 358.903 391.657 359.261 392.014C359.579 392.332 360.095 392.293 360.493 392.253C360.93 392.173 361.288 391.935 361.407 391.498C361.487 391.259 361.328 391.021 361.089 390.941C360.294 390.663 359.499 390.862 358.863 391.339C358.466 391.736 359.102 392.332 359.539 391.975Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M169.733 357.472C169.693 357.432 169.653 357.432 169.613 357.392C169.653 357.591 169.733 357.79 169.772 357.988C170.13 357.233 172.873 358.744 172.793 359.26C172.436 359.499 172.118 359.737 171.76 359.976C170.647 359.976 170.289 359.499 170.766 358.505C170.925 357.114 171.044 357.392 172.118 357.114C172.833 356.915 173.549 356.716 174.264 356.518C176.57 355.842 178.835 355.007 181.022 354.013C181.658 353.735 182.532 353.179 183.208 353.059C183.884 353.059 184.559 353.059 185.235 353.099C185.871 354.053 185.831 354.729 185.076 355.047C184.241 355.882 182.214 356.239 181.101 356.637C178.517 357.551 175.934 358.465 173.35 359.38C172.793 359.578 173.032 360.453 173.588 360.254C176.888 359.101 180.187 357.909 183.446 356.756C184.718 356.279 186.865 355.643 186.706 353.854C186.507 351.628 183.764 351.867 182.294 352.463C179.074 353.775 175.934 355.166 172.555 356.08C171.124 356.478 168.421 356.796 168.898 358.942C169.216 360.373 171.601 361.446 172.952 360.89C175.973 359.578 170.13 355.166 168.977 357.631C168.858 357.869 168.938 358.108 169.136 358.227C169.176 358.267 169.216 358.267 169.256 358.306C169.733 358.585 170.17 357.829 169.733 357.472Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M186.189 352.742C189.647 350.993 193.145 349.403 196.763 348.051C197.279 347.852 197.08 346.978 196.524 347.177C192.827 348.568 189.25 350.158 185.712 351.986C185.235 352.225 185.672 352.98 186.189 352.742Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M186.11 353.974C189.687 352.503 193.583 351.311 197.001 349.522C197.955 349.045 198.79 347.455 197.12 347.375C196.564 347.336 196.564 348.25 197.12 348.29C196.564 348.727 195.928 349.045 195.252 349.283C194.775 349.482 194.298 349.681 193.821 349.88C192.986 350.237 192.152 350.555 191.277 350.913C189.488 351.668 187.66 352.384 185.871 353.139C185.354 353.298 185.553 354.173 186.11 353.974Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M231.981 327.063C232.895 328.255 234.724 328.653 235.837 327.5C236.831 326.467 236.314 324.718 234.923 324.36C234.366 324.241 234.128 325.075 234.684 325.234C235.718 325.473 235.638 326.745 234.803 327.182C233.969 327.619 233.134 327.103 232.617 326.467C232.299 325.99 231.663 326.626 231.981 327.063Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M231.782 326.944C231.305 329.488 234.088 331.316 236.234 329.806C236.711 329.488 236.274 328.693 235.797 329.05C234.366 330.044 232.299 329.05 232.657 327.182C232.776 326.626 231.902 326.387 231.782 326.944Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M235.519 325.195C237.228 324.559 238.818 326.347 237.745 327.898C237.427 328.375 238.182 328.812 238.5 328.335C240.011 326.109 237.705 323.406 235.241 324.28C234.764 324.559 235.002 325.393 235.519 325.195Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M235.837 330.004C237.546 331.396 239.295 332.707 241.084 334.019C241.561 334.377 241.998 333.582 241.521 333.264C239.812 332.032 238.142 330.72 236.473 329.408C235.996 329.011 235.36 329.647 235.837 330.004Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M237.824 328.653C239.573 329.965 241.402 331.157 243.23 332.35C243.707 332.668 244.184 331.873 243.668 331.594C241.799 330.442 240.011 329.209 238.262 327.898C237.824 327.54 237.387 328.295 237.824 328.653Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M240.885 333.741C240.368 334.536 239.852 335.569 240.249 336.523C240.567 337.318 241.362 337.795 242.197 337.636C242.753 337.517 242.515 336.643 241.958 336.762C241.283 336.921 240.965 336.166 241.004 335.609C241.044 335.092 241.362 334.615 241.64 334.178C241.958 333.701 241.163 333.264 240.885 333.741Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M244.105 332.191C244.82 331.117 247.166 332.588 246.49 333.622C246.172 334.099 246.967 334.536 247.245 334.059C248.557 332.032 244.661 329.686 243.31 331.714C242.992 332.23 243.787 332.668 244.105 332.191Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M242.793 336.921C242.992 335.092 244.781 334.138 246.49 334.655C247.046 334.814 247.285 333.979 246.728 333.781C244.423 333.025 242.157 334.496 241.919 336.881C241.839 337.477 242.753 337.477 242.793 336.921Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M246.848 376.79C246.251 376.751 245.695 376.592 245.178 376.274C244.94 376.035 244.741 375.797 244.502 375.598C244.781 375.28 245.059 374.962 245.337 374.604C245.973 374.246 247.841 374.684 248.477 374.763C249.352 374.922 251.379 375.32 249.67 376.433C248.795 377.029 247.325 376.87 246.371 376.631C245.814 376.512 245.576 377.347 246.132 377.506C247.722 377.903 250.385 377.864 251.339 376.274C252.452 374.405 249.312 374.008 248.199 373.849C247.007 373.69 243.787 373.094 243.469 374.962C243.191 376.671 245.496 377.625 246.808 377.705C247.404 377.744 247.404 376.83 246.848 376.79Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M241.799 375.836C241.442 375.16 241.402 374.326 241.958 373.729C242.356 373.292 242.873 373.173 243.389 372.934C243.548 372.855 243.588 372.696 243.628 372.537C243.668 371.98 243.469 371.424 243.35 370.907C243.31 371.066 243.27 371.185 243.23 371.344C244.105 370.549 245.377 370.947 245.655 372.1C245.814 372.656 246.649 372.418 246.53 371.861C246.053 370.033 243.986 369.516 242.594 370.708C242.475 370.828 242.435 370.987 242.475 371.146C242.555 371.543 242.753 371.941 242.515 372.298C242.435 372.418 241.958 372.577 241.839 372.616C241.481 372.855 241.163 373.213 240.965 373.61C240.488 374.485 240.607 375.439 241.044 376.313C241.283 376.79 242.078 376.313 241.799 375.836Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M241.203 376.075C239.931 376.552 239.176 378.221 240.607 379.096C241.362 379.573 241.561 379.056 242.197 378.977C242.753 378.937 246.649 380.686 246.569 381.401C246.569 381.56 246.649 381.719 246.808 381.799C248.597 382.673 250.385 381.322 249.71 379.374C249.551 379.573 249.431 379.732 249.272 379.931C250.823 379.811 252.095 379.334 253.327 378.341C253.088 378.301 252.85 378.261 252.611 378.261C253.486 379.454 254.957 379.454 255.871 378.221C256.149 377.824 256.507 377.069 256.308 376.552C256.07 375.956 255.513 376.234 255.195 375.836C254.837 375.399 254.201 376.035 254.559 376.472C254.599 376.512 254.877 376.751 254.877 376.751C254.917 376.79 254.957 376.79 254.996 376.79C255.672 376.87 255.155 377.188 253.406 377.784C253.208 377.546 252.929 377.506 252.691 377.705C251.657 378.539 250.584 378.977 249.272 379.056C248.994 379.056 248.756 379.334 248.835 379.613C248.04 381.083 247.603 381.521 247.523 380.845C247.523 380.805 247.484 380.726 247.484 380.686C247.364 380.646 247.205 380.209 247.086 380.09C246.371 379.374 245.138 379.255 244.343 378.698C243.866 378.341 243.509 377.903 242.873 377.864C242.674 377.864 242.237 377.983 242.157 377.983C242.117 377.983 242.078 378.023 242.038 378.023C241.521 378.539 241.362 378.182 241.442 376.949C241.998 376.751 241.76 375.876 241.203 376.075Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M246.41 372.219C247.285 372.258 248.199 372.338 249.074 372.258C249.233 372.258 249.272 372.06 249.431 372.02C249.988 371.503 250.703 371.543 251.578 372.099C251.498 372.258 251.419 372.417 251.419 372.576C251.856 374.007 253.565 374.206 253.963 375.836C254.082 376.392 254.957 376.154 254.837 375.597C254.599 374.643 254.042 373.928 253.247 373.332C252.492 372.775 252.691 372.616 252.532 371.861C252.452 371.463 252.373 371.225 252.095 370.907C251.538 370.311 250.664 370.271 249.948 370.549C249.551 370.708 249.312 371.106 248.954 371.265C248.279 371.543 247.205 371.344 246.45 371.304C245.814 371.304 245.814 372.179 246.41 372.219Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M303.611 358.624C305.598 359.578 307.586 358.903 309.176 357.512C311.839 355.246 313.787 352.781 317.642 352.861C320.067 352.94 322.134 354.53 324.519 353.417C326.666 352.384 330.601 346.143 333.065 349.8C333.383 350.277 334.178 349.84 333.821 349.363C332.827 347.892 330.959 347.574 329.329 348.329C328.136 348.886 327.302 349.88 326.387 350.794C324.678 352.543 323.287 353.338 320.783 352.622C318.398 351.947 316.092 351.788 313.747 352.781C310.646 354.053 307.745 359.698 304.048 357.909C303.531 357.591 303.094 358.386 303.611 358.624Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M303.929 358.863C303.531 360.652 305.081 361.884 306.83 361.646C309.692 361.288 311.402 358.267 313.429 356.558C315.456 354.888 317.364 354.888 319.789 355.683C320.862 356.041 321.935 356.399 323.048 356.319C326.149 356.081 328.653 350.436 331.793 352.424C332.27 352.742 332.747 351.947 332.231 351.668C330.72 350.675 329.011 351.191 327.62 352.225C326.467 353.06 325.632 354.371 324.32 355.047C322.571 355.922 320.783 355.047 319.113 354.57C316.967 353.934 315.138 354.252 313.31 355.564C312.276 356.319 311.441 357.313 310.527 358.227C309.931 358.823 309.335 359.459 308.619 359.936C307.586 360.652 304.247 361.566 304.763 359.102C304.922 358.545 304.048 358.307 303.929 358.863Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M333.026 350.198C332.747 350.754 332.509 351.311 332.231 351.867C331.992 352.384 332.747 352.821 332.986 352.304C333.264 351.748 333.503 351.191 333.781 350.635C334.019 350.118 333.264 349.681 333.026 350.198Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M301.742 359.141C301.027 359.34 300.391 359.738 299.834 360.254C299.437 360.652 300.033 361.288 300.47 360.89C300.908 360.493 301.424 360.175 301.981 360.016C302.537 359.857 302.299 358.982 301.742 359.141Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M302.418 360.93C301.742 361.327 301.186 361.844 300.749 362.52C300.47 362.997 301.226 363.474 301.504 362.957C301.822 362.4 302.299 362.003 302.816 361.685C303.372 361.407 302.895 360.651 302.418 360.93Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M303.094 362.917C303.372 363.355 303.65 363.792 303.929 364.229C304.247 364.706 305.002 364.269 304.684 363.792C304.406 363.355 304.127 362.917 303.849 362.48C303.531 361.963 302.776 362.44 303.094 362.917Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M332.946 354.411C333.145 354.53 333.224 354.729 333.224 354.888C333.185 355.126 333.304 355.365 333.542 355.444C333.741 355.484 334.059 355.365 334.099 355.126C334.218 354.53 333.94 353.934 333.423 353.656C332.906 353.378 332.469 354.133 332.946 354.411Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M334.655 353.497C335.132 353.258 335.609 352.98 336.126 352.742C336.643 352.463 336.166 351.708 335.689 351.986C335.212 352.225 334.735 352.503 334.218 352.742C333.701 352.98 334.139 353.775 334.655 353.497Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M336.086 350.317C336.166 350.118 336.325 349.959 336.524 349.919C337.08 349.76 336.842 348.886 336.285 349.045C335.768 349.204 335.411 349.561 335.252 350.078C335.053 350.635 335.888 350.833 336.086 350.317Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M395.314 367.966C397.222 363.554 401.634 361.248 405.848 359.42C411.492 356.955 417.176 355.921 423.179 357.829C423.735 357.988 423.974 357.154 423.417 356.955C417.455 355.047 411.691 355.961 406.007 358.346C401.475 360.294 396.586 362.719 394.519 367.489C394.32 368.045 395.075 368.483 395.314 367.966Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M395.353 368.363C396.148 367.767 397.5 367.926 398.096 368.681C398.295 368.919 398.653 368.8 398.812 368.601C401.157 365.024 404.854 362.877 408.829 361.526C412.684 360.214 418.011 358.624 421.867 360.532C422.383 360.771 422.821 360.015 422.304 359.777C418.21 357.75 412.684 359.3 408.59 360.691C404.377 362.122 400.521 364.388 398.057 368.164C398.295 368.124 398.533 368.085 398.772 368.085C397.778 366.892 396.188 366.693 394.916 367.647C394.439 367.926 394.916 368.721 395.353 368.363Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M422.423 357.789C422.94 358.266 422.741 359.101 422.145 359.34C421.628 359.578 422.066 360.333 422.582 360.095C423.735 359.618 423.974 357.948 423.059 357.114C422.622 356.796 421.986 357.432 422.423 357.789Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M394.718 368.006C393.048 367.926 391.061 368.562 390.027 369.993C389.709 370.47 389.709 370.987 390.146 371.384C390.782 371.861 391.816 371.663 392.492 371.424C393.008 371.225 392.81 370.351 392.253 370.55C391.856 370.709 390.703 370.947 390.862 370.351C390.981 370.033 391.697 369.675 391.975 369.516C392.81 369.039 393.724 368.88 394.678 368.92C395.314 368.92 395.314 368.006 394.718 368.006Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M398.136 369.357C398.772 369.476 399.488 369.595 400.084 369.834C400.879 370.152 400.283 370.947 399.806 370.43C399.448 369.993 398.812 370.629 399.17 371.066C399.885 371.941 401.396 371.464 401.396 370.311C401.435 368.88 399.329 368.721 398.335 368.522C397.818 368.363 397.58 369.238 398.136 369.357Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M392.412 370.828C391.736 371.424 390.663 372.497 391.498 373.372C392.253 374.127 393.247 373.531 393.923 372.974C393.684 372.895 393.406 372.855 393.167 372.775C393.565 374.803 396.149 374.524 396.387 372.577C396.188 372.736 396.029 372.855 395.831 373.014C396.824 373.213 397.659 373.809 398.693 373.252C399.527 372.775 399.845 371.901 399.726 371.026C399.647 370.47 398.772 370.47 398.812 371.026C398.295 372.537 397.54 372.934 396.586 372.298C396.427 372.219 396.268 372.179 396.069 372.179C395.751 372.139 395.552 372.298 395.513 372.616C395.036 372.616 394.559 372.577 394.082 372.577C394.002 372.219 393.565 372.179 393.326 372.378C392.611 372.06 392.531 371.782 393.088 371.503C393.485 371.066 392.849 370.43 392.412 370.828Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M396.745 365.581C397.739 365.143 398.891 365.62 399.368 366.535C399.607 367.051 400.402 366.614 400.124 366.097C399.408 364.706 397.659 364.189 396.268 364.825C395.791 365.064 396.228 365.819 396.745 365.581Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M400.203 362.639C400.958 362.44 401.912 363.116 401.793 363.951C401.714 364.507 402.588 364.746 402.668 364.189C402.866 362.719 401.435 361.407 399.965 361.765C399.408 361.924 399.647 362.758 400.203 362.639Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M403.741 360.652C404.496 360.413 405.371 360.97 405.371 361.765C405.371 362.321 406.285 362.361 406.285 361.765C406.285 360.413 404.854 359.379 403.542 359.777C402.946 359.976 403.184 360.811 403.741 360.652Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M408.71 358.187C409.584 358.227 410.141 359.221 409.862 360.016C409.664 360.572 410.538 360.771 410.737 360.254C411.254 358.863 410.141 357.392 408.749 357.313C408.153 357.273 408.153 358.187 408.71 358.187Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M413.003 357.392C413.837 357.432 414.235 358.306 413.798 358.982C413.48 359.459 414.275 359.936 414.553 359.419C415.388 358.108 414.473 356.557 412.963 356.478C412.446 356.438 412.446 357.352 413.003 357.392Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M417.614 357.551C418.13 357.392 418.568 357.869 418.289 358.346C418.011 358.823 418.766 359.3 419.045 358.783C419.363 358.266 419.323 357.591 418.925 357.114C418.568 356.676 417.932 356.517 417.375 356.676C416.819 356.835 417.057 357.71 417.614 357.551Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M422.582 361.169C422.662 361.606 422.702 362.083 422.781 362.52C422.821 362.759 423.139 362.878 423.338 362.838C423.576 362.759 423.695 362.52 423.656 362.282C423.576 361.844 423.536 361.367 423.457 360.93C423.417 360.692 423.099 360.572 422.9 360.612C422.622 360.692 422.543 360.93 422.582 361.169Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M424.967 358.943C425.325 358.863 425.683 358.823 426.041 358.744C426.279 358.704 426.398 358.426 426.359 358.187C426.279 357.949 426.041 357.83 425.802 357.869C425.444 357.949 425.087 357.989 424.729 358.068C424.49 358.108 424.371 358.386 424.411 358.625C424.49 358.863 424.729 358.982 424.967 358.943Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M424.769 356.279C425.166 356.081 425.643 355.961 426.08 355.922C426.637 355.882 426.637 355.007 426.08 355.007C425.444 355.047 424.848 355.206 424.292 355.484C423.815 355.763 424.252 356.558 424.769 356.279Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M446.591 364.03C445.16 363.514 443.61 362.997 442.497 361.884C440.867 360.254 440.708 357.79 442.815 356.518C445.24 355.007 448.976 355.325 451.6 355.961C452.991 356.279 454.422 356.796 455.654 357.551C456.052 357.79 456.449 358.028 456.767 358.386C456.926 359.221 457.085 360.016 457.284 360.85C457.046 361.645 455.972 362.281 455.257 362.719C452.474 364.348 449.175 364.189 446.114 363.911C445.558 363.871 445.558 364.746 446.114 364.825C449.851 365.143 455.893 365.302 458.039 361.327C460.067 357.551 453.707 355.524 451.123 355.007C448.022 354.411 442.139 354.093 440.549 357.71C438.88 361.566 443.411 363.991 446.313 364.984C446.87 365.104 447.108 364.229 446.591 364.03Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M449.732 360.771C448.778 360.692 447.824 360.413 446.949 359.976C446.353 359.658 445.399 359.3 446.591 358.346C446.909 358.108 447.585 358.187 447.983 358.187C449.016 358.148 450.129 358.227 451.083 358.625C451.401 358.704 451.679 358.863 451.918 359.102C451.799 359.539 451.679 360.016 451.56 360.453C451.083 360.97 449.652 360.771 449.096 360.692C448.539 360.612 448.301 361.447 448.857 361.566C450.209 361.805 452.991 361.725 453.071 359.738C453.15 357.75 450.169 357.392 448.778 357.313C447.545 357.273 444.723 357.353 444.962 359.261C445.16 360.97 448.38 361.526 449.692 361.685C450.288 361.725 450.288 360.851 449.732 360.771Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M444.008 386.688C443.729 386.569 443.729 386.291 443.849 386.052C444.008 385.734 444.326 385.615 444.644 385.535C445.121 385.416 446.114 385.257 446.512 385.575C446.989 385.933 446.591 386.609 446.194 386.807C445.478 387.205 444.524 386.847 443.809 386.609C443.252 386.41 443.014 387.284 443.57 387.483C444.723 387.881 446.273 388.238 447.188 387.125C447.824 386.37 447.784 385.178 446.79 384.701C445.876 384.263 444.206 384.462 443.411 385.098C442.696 385.694 442.577 387.006 443.531 387.443C444.047 387.722 444.524 386.927 444.008 386.688Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M453.786 376.114C454.025 375.598 454.859 375.439 455.217 375.955C455.217 375.796 455.217 375.637 455.217 375.518C454.979 375.916 454.502 375.955 454.184 375.677C453.706 375.319 453.269 376.114 453.746 376.432C454.462 376.989 455.575 376.711 456.012 375.955C456.092 375.836 456.092 375.637 456.012 375.518C455.376 374.485 453.547 374.485 453.031 375.677C452.792 376.194 453.547 376.631 453.786 376.114Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M460.703 390.027C464.24 386.608 467.858 383.23 471.515 379.891C471.952 379.493 471.316 378.857 470.879 379.255C467.222 382.594 463.604 385.933 460.067 389.391C459.629 389.788 460.265 390.424 460.703 390.027Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M460.623 390.464C461.1 390.186 462.292 391.657 461.895 392.054C461.458 392.531 460.583 390.544 460.504 390.265C460.345 389.709 459.51 389.947 459.629 390.504C459.828 391.339 460.305 392.134 460.941 392.69C461.537 393.167 462.332 393.127 462.69 392.412C463.048 391.696 462.571 390.901 462.094 390.345C461.617 389.749 460.862 389.272 460.106 389.709C459.669 389.987 460.146 390.782 460.623 390.464Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M462.452 392.332C465.632 388.357 469.09 384.661 472.787 381.163C473.224 380.765 472.588 380.129 472.151 380.527C468.454 384.025 464.996 387.721 461.816 391.696C461.458 392.173 462.094 392.809 462.452 392.332Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M471.713 379.652C472.349 379.652 472.787 380.328 472.588 380.924C472.389 381.481 473.264 381.719 473.462 381.163C473.86 380.01 472.906 378.778 471.713 378.778C471.157 378.778 471.157 379.652 471.713 379.652Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M396.069 390.186C396.546 387.125 403.343 390.623 404.615 391.14C407.08 392.134 409.505 393.247 411.89 394.36C412.406 394.598 412.844 393.843 412.327 393.605C408.749 391.895 405.092 390.345 401.396 388.914C399.488 388.199 395.672 386.728 395.155 389.908C395.115 390.504 395.99 390.743 396.069 390.186Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M395.393 390.822C400.481 392.452 405.49 394.4 410.3 396.665C410.816 396.904 411.254 396.149 410.737 395.91C405.808 393.604 400.76 391.617 395.592 389.947C395.075 389.788 394.837 390.663 395.393 390.822Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M410.22 396.347C407.279 399.368 410.021 403.979 414.036 403.304C414.593 403.224 414.354 402.35 413.798 402.429C410.618 402.946 408.59 399.328 410.856 396.943C411.254 396.546 410.618 395.91 410.22 396.347Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M412.685 394.439C415.348 393.445 419.919 392.69 420.674 396.586C420.794 397.142 421.628 396.904 421.549 396.347C420.714 392.014 415.586 392.412 412.446 393.604C411.89 393.803 412.128 394.638 412.685 394.439Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M415.149 402.668C414.593 401.237 413.877 399.13 415.268 397.937C416.262 397.063 419.045 396.188 420.118 397.222C420.515 397.619 421.151 396.983 420.754 396.586C419.323 395.194 416.501 396.029 415.03 397.023C413.003 398.414 413.599 400.958 414.314 402.906C414.513 403.423 415.348 403.224 415.149 402.668Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M395.473 390.822C400.243 392.611 404.973 394.519 409.664 396.586C410.18 396.824 410.657 396.029 410.101 395.83C405.371 393.724 400.561 391.776 395.711 389.987C395.195 389.749 394.956 390.623 395.473 390.822Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M415.229 402.23C414.116 399.129 417.296 397.023 420.078 397.38C420.635 397.46 420.873 396.585 420.317 396.506C418.568 396.267 416.699 396.625 415.427 397.937C414.235 399.129 413.798 400.878 414.394 402.468C414.553 403.025 415.427 402.786 415.229 402.23Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M416.342 375.121C416.381 375.717 416.421 376.313 416.461 376.909C416.501 377.466 417.375 377.466 417.375 376.909C417.335 376.313 417.296 375.717 417.256 375.121C417.216 374.564 416.302 374.564 416.342 375.121Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M416.739 375.32C418.25 375.637 419.76 375.598 421.231 375.24C421.787 375.081 421.549 374.246 420.992 374.366C419.641 374.723 418.329 374.723 416.978 374.445C416.421 374.366 416.143 375.2 416.739 375.32Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M417.057 377.228C417.653 377.983 418.687 377.744 419.522 377.625C420.555 377.466 421.628 377.387 422.304 376.512C422.662 376.075 422.026 375.439 421.668 375.876C421.231 376.432 420.555 376.552 419.879 376.671C419.283 376.75 418.13 377.188 417.693 376.631C417.335 376.114 416.699 376.751 417.057 377.228Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M421.032 374.843C420.992 375.439 421.151 376.035 421.39 376.552C421.668 377.069 422.423 376.631 422.145 376.115C421.946 375.717 421.867 375.28 421.907 374.843C421.986 374.246 421.072 374.246 421.032 374.843Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.4",
                d:
                  "M417.216 374.525C417.176 374.485 417.176 374.445 417.137 374.405C417.137 374.564 417.137 374.723 417.137 374.843C417.335 374.405 418.607 374.405 418.965 374.405C419.601 374.405 420.197 374.564 420.754 374.803C421.271 375.041 421.748 374.286 421.191 374.048C420.118 373.571 419.005 373.372 417.852 373.61C417.296 373.73 415.865 374.087 416.381 374.962C416.779 375.439 417.534 375.002 417.216 374.525Z",
                fill: "#6D6C6C"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M72.4643 308.817C72.4245 312.554 72.4245 316.37 72.4643 320.146C72.504 328.454 72.663 336.642 72.9015 344.712C90.1133 345.507 97.4273 345.268 100.846 344.91C101.641 344.831 105.059 344.433 109.67 344.274C111.976 344.195 113.844 344.235 114.957 344.274C120.522 339.981 126.087 335.649 131.652 331.356C131.573 333.621 130.937 335.132 130.34 336.086C129.665 337.159 129.068 337.596 129.188 338.391C129.347 339.544 130.937 340.419 132.248 340.697C133.759 341.015 134.594 340.458 134.872 340.856C135.23 341.373 133.918 342.645 132.248 344.871C130.579 347.097 129.029 349.164 128.432 351.906C128.114 353.337 127.836 354.689 128.591 355.921C129.943 358.187 133.679 358.147 134.594 358.068C136.74 357.948 138.29 357.114 139.88 356.199C146.996 352.105 150.533 350.078 152.759 347.454C155.224 344.513 156.734 341.333 158.165 341.73C158.682 341.85 159.119 342.446 159.318 342.883C159.795 343.877 159.199 344.553 159.159 345.904C159.159 346.023 159.119 348.408 160.471 349.482C161.743 350.475 163.691 349.959 164.406 349.76C168.699 348.607 171.601 343.559 174.224 338.431C178.756 329.448 178.438 327.858 181.976 321.219C185.156 315.217 187.024 311.878 190.919 309.016C195.769 305.439 201.135 304.604 204.236 304.405C204.236 303.928 204.236 303.451 204.236 302.974C201.572 302.974 197.399 303.332 192.947 305.399C186.865 308.261 183.685 312.792 182.254 314.859C181.061 316.608 181.658 316.131 177.563 325.194C170.647 340.498 173.27 332.27 169.812 339.703C169.574 340.22 168.58 342.406 166.314 343.996C165.996 344.235 163.412 346.063 162.379 345.308C161.703 344.831 161.942 343.241 162.379 340.14C162.657 338.034 162.935 337.199 162.379 336.563C161.624 335.688 159.994 335.927 159.755 336.006C157.529 336.364 156.138 338.232 155.661 338.868C154.23 340.737 151.05 343.44 144.69 348.766C141.669 351.31 139.046 353.139 135.627 353.655C132.924 354.053 132.248 353.258 132.129 353.099C131.215 351.946 132.527 349.641 133.004 348.806C133.799 347.415 134.713 346.421 138.569 343.201C141.669 340.617 142.862 339.743 142.981 338.193C142.981 338.113 143.06 336.444 142.106 335.887C140.954 335.251 139.642 336.881 136.541 337.04C135.548 337.08 134.633 337.119 134.037 336.603C132.964 335.688 133.242 333.303 134.633 330.561C140.397 327.023 146.161 323.485 151.925 319.947C151.845 310.606 151.726 301.265 151.646 291.963C149.54 291.765 146.598 291.526 143.14 291.407C134.037 291.049 127.16 291.685 122.47 292.122C117.104 292.639 110.505 293.474 102.992 294.984C99.216 296.177 95.1615 297.648 90.9878 299.436C83.8328 302.338 77.6715 305.637 72.4643 308.817Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M114.599 305.359C114.599 318.199 114.599 331.038 114.599 343.877C114.599 344.632 115.792 344.632 115.792 343.877C115.792 331.038 115.792 318.199 115.792 305.359C115.792 304.604 114.599 304.604 114.599 305.359Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M72.9015 344.116C86.7345 345.825 100.687 346.063 114.599 344.871C115.354 344.791 115.354 343.599 114.599 343.678C100.727 344.871 86.7345 344.593 72.9015 342.923C72.1463 342.844 72.1463 344.036 72.9015 344.116Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M73.3785 344.314C73.3785 332.906 73.3785 321.538 73.3785 310.129C73.3785 309.374 72.186 309.374 72.186 310.129C72.186 321.538 72.186 332.906 72.186 344.314C72.186 345.109 73.3785 345.109 73.3785 344.314Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M73.1003 309.414C87.0128 307.744 101.005 306.631 114.997 306.075C115.752 306.035 115.752 304.843 114.997 304.882C101.005 305.399 87.0128 306.512 73.1003 308.221C72.345 308.301 72.345 309.493 73.1003 309.414Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M115.553 344.831C127.081 335.609 139.443 327.381 152.402 320.265C153.077 319.908 152.481 318.874 151.805 319.232C138.767 326.387 126.365 334.695 114.719 343.956C114.122 344.473 114.957 345.308 115.553 344.831Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M152.481 318.795C152.481 310.05 152.481 301.265 152.481 292.52C152.481 291.765 151.289 291.765 151.289 292.52C151.289 301.265 151.289 310.05 151.289 318.795C151.289 319.55 152.481 319.55 152.481 318.795Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M115.474 305.836C121.516 303.451 127.598 301.066 133.64 298.681C136.541 297.529 139.443 296.376 142.345 295.223C145.326 294.031 148.307 292.759 151.567 292.6C152.322 292.56 152.322 291.367 151.567 291.407C148.705 291.526 146.121 292.441 143.498 293.474C140.357 294.706 137.217 295.939 134.037 297.211C127.757 299.675 121.436 302.179 115.156 304.644C114.44 304.962 114.758 306.115 115.474 305.836Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M73.0605 309.334C82.521 303.61 92.538 298.96 102.992 295.422C103.708 295.183 103.39 294.031 102.674 294.269C92.1008 297.847 82.0043 302.537 72.4643 308.301C71.8283 308.738 72.4245 309.772 73.0605 309.334Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M102.714 295.303C118.614 293.395 135.15 290.095 151.169 292.56C151.924 292.679 152.242 291.526 151.487 291.407C135.349 288.943 118.773 292.202 102.714 294.11C101.959 294.19 101.959 295.382 102.714 295.303Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M72.4246 309.175C72.4246 320.425 72.4246 331.714 72.4246 342.963C72.4246 343.718 73.6171 343.718 73.6171 342.963C73.6171 331.714 73.6171 320.425 73.6171 309.175C73.6171 308.42 72.4246 308.42 72.4246 309.175Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M73.2196 345.109C79.2616 345.189 85.3036 345.388 91.3456 345.626C92.1008 345.666 92.1008 344.473 91.3456 344.434C85.3036 344.155 79.2616 343.996 73.2196 343.917C72.4643 343.877 72.4643 345.07 73.2196 345.109Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M73.458 320.624C80.0963 319.431 86.8538 318.835 93.6113 318.795C94.3665 318.795 94.3665 317.603 93.6113 317.603C86.7345 317.642 79.8975 318.278 73.14 319.471C72.3848 319.63 72.7028 320.783 73.458 320.624Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M94.0883 318.199C94.923 314.661 94.8833 310.765 95.2013 307.148C95.2808 306.393 94.0883 306.393 94.0088 307.148C93.6908 310.646 93.7305 314.462 92.9355 317.881C92.7765 318.636 93.9293 318.954 94.0883 318.199Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M85.1445 318.835C85.3035 320.186 85.383 321.577 85.3035 322.929C85.2638 323.843 84.8265 325.234 85.065 326.109C85.4625 327.5 87.291 327.262 88.4437 327.301C93.969 327.54 99.534 326.904 105.019 326.268C105.775 326.188 105.775 324.996 105.019 325.075C100.806 325.552 96.5527 326.029 92.2995 326.149C90.8685 326.188 86.7345 326.705 86.337 325.155C86.1382 324.36 86.5357 323.008 86.5357 322.174C86.5357 321.061 86.4562 319.948 86.337 318.835C86.2575 318.079 85.065 318.079 85.1445 318.835Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M94.6448 315.654C97.944 315.933 101.204 316.012 104.503 315.933C104.304 315.734 104.105 315.535 103.907 315.336C104.225 318.675 104.344 322.014 104.264 325.393C104.225 326.148 105.417 326.148 105.457 325.393C105.576 322.054 105.457 318.675 105.099 315.336C105.059 315.018 104.861 314.74 104.503 314.74C101.204 314.82 97.9043 314.74 94.6448 314.462C93.8498 314.382 93.8895 315.575 94.6448 315.654Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M79.8181 339.465C79.1423 339.186 79.0628 338.352 79.4603 337.795C79.8578 337.278 80.5733 337.08 81.2093 337.239C81.9248 337.437 82.2826 338.153 81.8851 338.829C81.4876 339.504 80.6528 339.544 79.9771 339.385C79.2218 339.186 78.9038 340.339 79.6591 340.538C81.0106 340.896 82.5211 340.458 83.0776 339.107C83.5943 337.795 82.8391 336.483 81.5273 336.126C80.2951 335.768 78.8243 336.364 78.2678 337.557C77.6716 338.789 78.3076 340.14 79.5001 340.657C80.1758 340.896 80.4938 339.743 79.8181 339.465Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M89.0003 339.068C87.8475 338.829 89.2785 335.927 90.789 337.12C91.3058 337.557 91.425 338.233 90.948 338.71C90.789 338.909 89.517 339.743 89.2388 339.505C88.6425 339.028 87.8078 339.863 88.404 340.34C89.4375 341.135 91.1865 340.26 91.9418 339.386C92.8958 338.273 92.4585 336.722 91.266 335.967C90.0338 335.212 88.4438 335.808 87.7283 337.04C87.132 338.114 87.2513 339.902 88.6823 340.181C89.4375 340.379 89.7555 339.227 89.0003 339.068Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M98.262 339.703C97.2682 338.868 98.262 337.159 99.4545 337.875C100.885 338.709 99.534 340.419 98.2222 339.902C97.5067 339.624 97.1887 340.776 97.9042 341.055C99.057 341.492 100.408 340.935 101.005 339.902C101.641 338.789 101.124 337.477 100.051 336.841C99.0172 336.245 97.7055 336.444 97.0297 337.438C96.3937 338.392 96.513 339.783 97.3875 340.538C98.0235 341.055 98.8582 340.22 98.262 339.703Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M121.436 308.977C121.834 313.15 121.953 317.324 121.874 321.538C121.874 322.293 123.066 322.293 123.066 321.538C123.185 317.324 123.026 313.15 122.629 308.977C122.589 308.221 121.397 308.221 121.436 308.977Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M122.827 309.454C126.365 307.546 129.863 305.638 133.401 303.69C136.939 301.742 140.476 299.476 144.332 298.244C144.094 298.045 143.815 297.847 143.577 297.688C143.895 301.345 144.253 305.002 144.571 308.659C144.65 309.414 145.843 309.414 145.763 308.659C145.445 305.002 145.087 301.345 144.769 297.688C144.73 297.33 144.412 296.972 144.014 297.131C140.278 298.324 136.899 300.47 133.48 302.338C129.744 304.366 126.007 306.433 122.231 308.46C121.555 308.778 122.152 309.811 122.827 309.454Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M123.185 321.697C130.698 317.523 138.131 313.23 145.525 308.857C146.201 308.46 145.604 307.426 144.929 307.824C137.535 312.236 130.102 316.489 122.589 320.663C121.913 321.021 122.51 322.054 123.185 321.697Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M118.972 333.463C118.654 333.065 118.773 332.429 119.21 332.151C119.687 331.873 120.403 332.151 120.641 332.628C120.88 333.145 120.602 333.86 120.085 334.138C119.727 334.337 118.932 334.297 118.932 333.741C118.932 332.986 117.74 332.986 117.74 333.741C117.7 335.013 119.171 335.689 120.244 335.331C121.516 334.933 122.271 333.383 121.715 332.151C121.198 330.998 119.608 330.442 118.495 331.117C117.422 331.793 117.263 333.343 118.097 334.258C118.654 334.894 119.489 334.019 118.972 333.463Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M128.989 326.586C129.267 326.029 129.665 325.115 130.221 324.757C131.493 323.962 133.242 324.32 133.878 325.711C134.753 327.619 133.997 329.686 133.401 331.555C132.924 333.105 131.851 336.245 133.679 337.358C135.269 338.352 138.052 337 139.642 336.603C139.96 336.523 140.437 336.325 140.755 336.364C140.914 336.325 141.033 336.325 141.192 336.285C141.51 336.802 141.788 337.279 142.106 337.795C142.146 338.551 141.113 339.465 140.636 340.021C139.801 340.975 138.887 341.85 137.972 342.724C136.303 344.275 134.633 345.825 133.282 347.653C132.288 349.005 130.778 351.35 131.374 353.099C132.725 356.915 139.841 352.463 141.669 351.31C145.763 348.727 149.222 345.268 152.799 342.049C154.787 340.26 156.933 338.153 159.318 336.881C159.914 336.563 159.994 336.523 160.789 336.444C161.107 336.404 161.385 336.364 161.703 336.325C161.942 337 162.18 337.716 162.419 338.392C162.419 338.988 161.942 339.823 161.783 340.379C161.425 341.611 161.067 343.082 161.107 344.394C161.186 346.024 162.379 346.739 163.929 346.222C165.956 345.586 167.666 343.519 168.938 341.929C172.356 337.716 174.542 332.588 176.808 327.699C179.511 321.776 181.856 315.416 186.388 310.646C190.959 305.836 197.438 303.332 204.037 303.451C204.792 303.451 204.792 302.259 204.037 302.259C198.79 302.179 193.583 303.65 189.25 306.671C184.679 309.851 181.697 314.462 179.273 319.391C176.649 324.797 174.463 330.362 171.641 335.649C170.249 338.193 168.699 340.657 166.632 342.764C166.195 343.201 165.718 343.639 165.241 344.036C164.923 344.314 164.565 344.632 164.207 344.831C163.492 345.229 162.617 345.03 162.339 344.076C161.942 342.764 163.094 340.26 163.492 338.988C164.048 337.199 163.73 335.291 161.544 335.053C159.517 334.814 157.649 336.563 156.138 337.716C151.885 341.015 148.188 344.99 143.935 348.289C141.828 349.919 139.523 351.39 137.018 352.423C136.382 352.702 135.548 353.099 134.832 353.179C133.997 353.298 134.594 353.417 133.401 352.821C132.328 352.264 132.368 352.384 132.646 351.35C133.083 349.84 134.077 348.448 135.11 347.296C136.74 345.388 138.728 343.758 140.516 341.969C141.709 340.737 143.657 338.948 143.418 336.961C143.18 334.774 140.914 335.092 139.364 335.49C138.489 335.728 137.615 335.967 136.74 336.166C136.382 336.245 135.985 336.404 135.587 336.404C134.594 336.404 133.958 335.132 133.997 334.178C134.037 332.35 135.11 330.601 135.349 328.812C135.667 326.705 135.11 324.36 133.043 323.366C130.658 322.213 128.989 324.042 127.955 325.99C127.598 326.665 128.631 327.301 128.989 326.586Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M203.957 303.57C197.041 305.677 189.767 308.619 185.235 314.581C182.731 317.88 181.459 321.855 179.948 325.632C178.358 329.607 176.649 333.582 174.503 337.318C172.356 341.094 169.772 344.751 166.513 347.693C164.406 349.601 160.153 351.111 159.715 346.898C159.556 345.268 160.034 343.44 159.477 341.85C158.324 338.511 155.264 343.917 154.429 344.831C151.607 348.011 148.347 350.754 144.77 353.019C140.636 355.603 134.435 358.942 129.665 356.12C127.717 354.967 128.353 353.139 129.108 351.39C129.625 350.197 130.221 349.005 130.897 347.892C132.209 345.666 133.759 343.599 135.508 341.73C135.786 341.452 135.707 341.015 135.389 340.776C133.997 339.822 130.261 341.214 130.022 338.829C129.903 337.835 130.698 336.523 131.056 335.649C131.533 334.456 132.169 333.224 132.368 331.992C132.566 330.72 132.169 329.249 130.778 328.812C130.301 328.653 129.863 328.732 129.386 328.851C128.909 328.971 128.631 329.408 128.234 328.931C128.075 328.732 128.671 326.943 128.75 326.705C128.909 325.95 127.757 325.632 127.598 326.387C127.359 327.42 126.286 329.925 127.876 330.402C129.188 330.799 131.096 328.215 131.175 331.952C131.215 333.105 130.062 334.893 129.625 336.006C129.068 337.358 128.273 339.266 129.307 340.578C130.738 342.366 133.123 340.657 134.753 341.77C134.713 341.452 134.673 341.134 134.633 340.816C131.612 344.076 129.029 347.892 127.439 352.065C126.008 355.802 129.068 357.829 132.527 358.187C136.859 358.624 141.113 356.517 144.73 354.331C148.625 351.986 152.163 349.005 155.184 345.626C155.86 344.871 156.456 343.797 157.211 343.161C157.728 342.724 157.37 342.406 158.006 342.764C158.523 343.082 158.364 343.559 158.364 344.115C158.364 345.745 158.086 347.574 158.96 349.084C161.027 352.542 165.241 350.316 167.427 348.329C174.065 342.168 177.881 333.621 181.141 325.353C183.208 320.106 185.116 315.138 189.647 311.52C193.821 308.181 198.949 306.273 204.037 304.723C204.991 304.485 204.712 303.332 203.957 303.57Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M229.517 293.395C229.318 293.872 229.04 294.706 229.079 295.74C229.159 297.29 229.874 298.403 230.192 298.84C232.697 299.993 234.883 300.55 236.473 300.828C238.182 301.146 241.441 301.702 245.297 300.828C247.642 300.311 247.086 299.953 250.584 298.999C253.565 298.165 254.996 298.165 256.189 296.813C256.984 295.939 257.262 294.985 257.54 293.991C257.858 292.878 258.295 291.487 257.699 289.976C257.58 289.658 257.023 288.187 255.751 287.79C255.076 287.591 254.917 287.909 253.446 288.108C251.299 288.426 250.544 287.949 249.868 288.625C249.232 289.221 249.352 290.215 249.352 290.294C249.471 291.367 250.345 291.526 250.783 292.639C251.14 293.593 251.021 294.706 250.624 295.382C250.027 296.416 248.636 296.694 245.257 296.893C239.971 297.171 237.347 297.33 234.883 296.495C233.69 296.058 231.663 295.183 229.517 293.395Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M229.318 293.991C235.797 298.244 244.105 299.755 251.061 295.7C251.737 295.302 251.14 294.269 250.465 294.666C243.826 298.522 236.035 297.012 229.914 292.957C229.278 292.52 228.682 293.553 229.318 293.991Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M229.477 299.118C236.83 302.656 245.456 302.497 252.651 298.721C253.327 298.363 252.731 297.33 252.055 297.687C245.218 301.265 237.029 301.424 230.073 298.085C229.397 297.727 228.761 298.761 229.477 299.118Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M251.339 295.462C251.776 294.468 251.697 293.633 251.26 292.64C250.981 292.043 250.584 291.527 250.306 290.93C250.186 290.612 249.829 289.619 250.147 289.34C250.902 288.665 251.458 289.976 251.617 290.374C251.935 291.05 252.969 290.453 252.651 289.778C252.094 288.585 250.504 287.035 249.312 288.506C247.523 290.652 251.26 292.759 250.345 294.866C249.988 295.541 251.021 296.177 251.339 295.462Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M254.281 293.792C254.32 293.394 254.36 292.878 254.638 292.56C254.917 292.242 255.235 292.321 255.394 292.719C255.672 293.434 254.877 294.11 254.44 294.547C253.883 295.064 254.718 295.939 255.274 295.382C256.268 294.428 257.341 292.838 256.03 291.606C255.513 291.129 254.758 291.049 254.161 291.407C253.406 291.844 253.207 292.679 253.088 293.474C253.009 294.229 254.161 294.547 254.281 293.792Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M252.214 289.102C252.015 288.346 253.128 288.625 253.446 288.863C253.883 289.221 254.122 289.817 254.321 290.334C254.639 291.049 255.632 290.413 255.354 289.738C254.877 288.664 254.161 287.432 252.85 287.353C251.737 287.313 250.783 288.267 251.061 289.38C251.26 290.175 252.413 289.857 252.214 289.102Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M254.797 288.267C255.155 288.545 254.837 288.346 254.917 288.386C254.877 288.386 254.996 288.346 255.036 288.386C255.274 288.505 255.433 288.625 255.592 288.823C255.871 289.221 255.95 289.698 255.91 290.175C255.831 290.93 257.023 290.93 257.103 290.175C257.222 288.982 256.546 287.392 255.235 287.194C254.002 286.995 253.207 288.505 254.241 289.3C254.797 289.777 255.394 288.744 254.797 288.267Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M256.984 289.937C257.381 289.778 257.023 292.083 256.984 292.322C256.904 292.918 257.103 293.514 257.023 294.11C256.785 296.297 253.486 297.171 251.737 298.046C251.061 298.403 251.657 299.397 252.333 299.079C254.519 298.006 258.335 297.012 258.176 293.991C258.097 292.719 258.812 290.652 258.216 289.46C257.898 288.824 257.341 288.545 256.666 288.784C255.95 289.062 256.268 290.215 256.984 289.937Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M235.28 296.058C234.326 297.29 233.969 299.516 235.082 300.788C235.598 301.345 236.433 300.51 235.916 299.954C235.28 299.238 235.598 297.569 236.115 296.933C236.592 296.297 235.757 295.462 235.28 296.058Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M240.567 297.409C239.653 298.443 239.494 299.874 240.17 301.066C240.567 301.742 241.601 301.146 241.203 300.47C240.806 299.755 240.845 298.88 241.402 298.244C241.919 297.688 241.084 296.813 240.567 297.409Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M246.172 296.972C245.854 298.125 246.052 299.317 246.768 300.271C247.245 300.868 248.278 300.271 247.801 299.675C247.245 298.96 247.086 298.165 247.324 297.29C247.523 296.575 246.37 296.257 246.172 296.972Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.12",
                d:
                  "M229.159 295.78C229.993 295.183 231.822 297.727 235.121 298.801C239.374 300.152 243.151 299.357 244.78 298.96C247.801 298.284 251.975 297.33 253.843 294.031C255.274 291.447 254.599 288.625 255.672 288.386C256.427 288.227 257.341 289.459 257.739 290.453C258.216 291.725 257.858 292.838 257.302 294.706C256.944 295.859 256.705 296.535 256.069 297.171C255.274 297.886 254.4 298.006 253.804 298.125C250.822 298.681 251.18 299.397 247.603 300.271C245.377 300.828 243.707 300.947 241.64 301.066C238.659 301.265 236.552 301.345 233.889 300.669C231.862 300.152 230.311 299.317 229.357 298.721C228.88 297.529 228.602 296.177 229.159 295.78Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M203.401 295.144C203.679 298.165 203.957 301.265 204.156 304.405C204.474 309.016 204.712 313.468 204.832 317.841C206.938 318.238 209.085 318.636 211.192 318.994C217.87 317.483 224.508 315.933 231.186 314.422C230.431 306.751 229.715 299.079 228.96 291.407C226.853 290.93 224.707 290.453 222.6 289.976C219.38 290.215 215.445 290.851 211.112 292.162C208.171 293.037 205.587 294.11 203.401 295.144Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M225.025 289.896C220.97 290.055 215.803 290.731 210.158 292.639C207.733 293.434 205.587 294.388 203.679 295.302C204.156 299.198 204.514 303.411 204.712 307.903C204.832 311.202 204.871 314.343 204.792 317.324C206.938 317.721 209.085 318.159 211.271 318.556C210.635 310.884 209.959 303.213 209.323 295.541C211.47 294.507 214.173 293.394 217.313 292.56C221.368 291.447 224.985 291.089 227.847 290.97C226.893 290.612 225.939 290.254 225.025 289.896Z",
                fill: "black"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M207.972 295.541C209.204 303.134 209.999 310.766 210.476 318.437C210.516 319.193 211.708 319.193 211.669 318.437C211.231 310.646 210.357 302.895 209.125 295.223C209.005 294.468 207.853 294.786 207.972 295.541Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M228.403 291.288C229.516 298.761 230.272 306.313 230.669 313.866C230.709 314.621 231.901 314.621 231.862 313.866C231.424 306.194 230.669 298.562 229.556 290.97C229.437 290.215 228.284 290.533 228.403 291.288Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M211.669 319.669C215.206 318.954 218.784 318.159 222.282 317.324C223.991 316.887 225.661 316.45 227.37 316.012C228.841 315.615 230.51 315.376 231.782 314.422C232.378 313.985 231.782 312.952 231.186 313.389C229.795 314.422 227.648 314.701 225.979 315.138C224.389 315.535 222.838 315.973 221.248 316.33C217.949 317.125 214.65 317.841 211.351 318.517C210.595 318.676 210.913 319.828 211.669 319.669Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M202.526 296.018C203.48 297.489 203.361 299.556 203.52 301.265C203.679 303.054 203.798 304.803 203.917 306.592C204.116 310.129 204.235 313.707 204.235 317.245C204.235 318 205.428 318 205.428 317.245C205.428 313.19 205.309 309.136 205.03 305.081C204.871 303.054 204.712 301.027 204.514 298.999C204.394 297.727 204.275 296.535 203.56 295.422C203.162 294.746 202.129 295.382 202.526 296.018Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M204.712 318.239C206.899 318.795 209.085 319.153 211.311 319.391C212.066 319.471 212.066 318.278 211.311 318.199C209.164 318 207.097 317.603 205.03 317.086C204.275 316.927 203.957 318.08 204.712 318.239Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M203.043 295.939C204.911 295.939 206.74 295.939 208.608 295.939C209.363 295.939 209.363 294.746 208.608 294.746C206.74 294.746 204.911 294.746 203.043 294.746C202.288 294.746 202.288 295.939 203.043 295.939Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M208.966 295.74C215.365 294.07 222.043 291.606 228.721 291.486C229.477 291.486 229.477 290.294 228.721 290.294C221.924 290.413 215.167 292.878 208.648 294.587C207.932 294.786 208.25 295.899 208.966 295.74Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M203.482 295.541C207.298 293.633 211.631 292.918 215.765 291.924C219.938 290.93 224.192 289.857 228.405 291.208C229.121 291.447 229.439 290.294 228.723 290.056C224.589 288.704 220.336 289.618 216.202 290.572C211.71 291.646 207.02 292.401 202.886 294.468C202.17 294.865 202.806 295.899 203.482 295.541Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M214.849 305.677C215.683 304.922 216.478 304.127 217.313 303.372C217.87 302.855 217.035 302.02 216.478 302.537C215.644 303.292 214.849 304.087 214.014 304.843C213.457 305.359 214.292 306.194 214.849 305.677Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M216.478 303.372C217.035 304.247 217.552 305.081 218.108 305.956C218.506 306.592 219.539 305.995 219.142 305.359C218.585 304.485 218.068 303.65 217.512 302.776C217.114 302.1 216.081 302.696 216.478 303.372Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M219.301 305.797C220.732 302.259 222.123 298.681 223.554 295.144C223.832 294.428 222.679 294.11 222.401 294.826C220.97 298.363 219.579 301.941 218.148 305.479C217.87 306.194 219.022 306.512 219.301 305.797Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M222.401 295.422C222.759 297.687 223.156 299.914 223.514 302.179C223.633 302.935 224.786 302.617 224.667 301.861C224.309 299.596 223.912 297.369 223.554 295.104C223.435 294.348 222.282 294.666 222.401 295.422Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M213.855 305.399C215.206 307.347 216.558 309.295 217.909 311.282C218.347 311.918 219.38 311.322 218.943 310.686C217.591 308.738 216.24 306.791 214.888 304.803C214.451 304.167 213.418 304.763 213.855 305.399Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M218.943 311.322C220.732 308.42 222.52 305.518 224.349 302.617C224.746 301.981 223.713 301.345 223.315 302.02C221.527 304.922 219.738 307.824 217.909 310.726C217.512 311.362 218.545 311.998 218.943 311.322Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.14",
                d:
                  "M218.267 292.44C217.711 293.196 216.995 294.309 216.319 295.7C216.319 295.7 214.888 298.721 214.57 301.503C214.133 305.478 218.188 311.52 225.303 316.052C220.771 316.966 216.24 317.88 211.708 318.795C209.363 318.516 207.058 318.198 204.712 317.92C204.275 310.328 203.878 302.736 203.44 295.183C208.369 294.269 213.298 293.355 218.267 292.44Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M214.332 252.174C211.47 256.348 208.489 261.118 205.666 266.444C201.612 274.037 198.631 281.231 196.405 287.631C198.114 288.029 199.823 288.426 201.493 288.784C205.15 288.426 208.807 288.068 212.464 287.711C212.662 289.34 212.861 290.93 213.06 292.56C213.736 292.64 214.65 292.719 215.683 292.56C216.359 292.481 216.916 292.322 217.393 292.163C217.234 290.453 217.035 288.784 216.876 287.075C222.56 285.564 228.205 284.093 233.889 282.583C231.822 277.932 229.715 273.122 227.688 268.233C225.343 262.668 223.156 257.183 221.05 251.816C218.784 251.896 216.558 252.015 214.332 252.174Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M212.305 287.711C212.384 288.585 212.464 289.42 212.543 290.294C212.623 290.93 212.543 291.765 212.782 292.401C213.139 293.395 214.252 292.997 215.008 292.918C215.922 292.799 217.353 292.958 217.552 291.805C217.671 291.089 217.512 290.175 217.472 289.46C217.432 288.625 217.393 287.79 217.353 286.995C217.313 286.24 216.121 286.24 216.16 286.995C216.2 287.949 216.24 288.943 216.28 289.897C216.28 290.294 216.439 290.97 216.359 291.328C216.319 291.527 216.319 291.566 216.439 291.527C216.16 291.566 215.922 291.606 215.644 291.646C215.286 291.686 214.849 291.845 214.491 291.805C214.213 291.964 214.014 291.884 213.855 291.606C213.815 291.328 213.815 291.05 213.775 290.732C213.696 289.738 213.577 288.744 213.497 287.711C213.418 286.955 212.225 286.955 212.305 287.711Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M212.901 288.188C214.133 287.79 215.405 287.552 216.677 287.472C217.432 287.433 217.432 286.24 216.677 286.28C215.286 286.359 213.895 286.638 212.583 287.035C211.867 287.234 212.185 288.387 212.901 288.188Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M213.338 289.818C214.411 290.056 215.485 289.937 216.478 289.46C217.194 289.142 216.558 288.108 215.882 288.426C215.167 288.744 214.411 288.824 213.656 288.665C212.901 288.506 212.583 289.659 213.338 289.818Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M202.168 289.261C212.901 288.108 223.474 286.081 233.849 283.14C234.604 282.941 234.286 281.788 233.531 281.987C223.276 284.889 212.782 286.916 202.168 288.069C201.413 288.148 201.413 289.341 202.168 289.261Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M220.295 251.141C216.2 256.467 213.338 262.589 210.357 268.551C207.177 274.911 204.037 281.271 201.215 287.79C200.897 288.506 201.93 289.102 202.248 288.386C205.07 281.867 208.211 275.468 211.391 269.147C214.372 263.185 217.234 257.024 221.328 251.737C221.805 251.141 220.772 250.544 220.295 251.141Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M220.493 251.776C224.746 261.952 228.96 272.128 233.213 282.304C233.491 283.02 234.644 282.702 234.366 281.986C230.113 271.81 225.899 261.634 221.646 251.458C221.368 250.783 220.215 251.101 220.493 251.776Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M214.252 270.101C214.332 270.062 214.372 270.221 214.372 270.221C214.332 270.221 214.531 270.062 214.531 270.062C214.57 270.062 214.65 270.062 214.69 270.062C214.69 270.062 214.69 270.062 214.69 270.101C214.69 270.141 214.69 270.141 214.69 270.101C214.61 270.141 214.809 269.982 214.809 270.022C214.809 270.062 214.729 269.982 214.729 270.022C214.729 270.062 214.769 270.181 214.769 270.26C214.809 270.181 214.928 270.3 214.729 270.221C214.451 270.101 214.729 270.181 214.69 270.141C214.968 270.38 214.372 270.101 214.69 270.181C214.69 270.181 214.61 270.181 214.61 270.141C214.57 270.022 214.531 270.022 214.65 269.863C214.69 269.823 214.729 269.783 214.769 269.783C214.729 269.744 214.69 269.704 214.65 269.744L214.69 269.982C214.69 270.141 214.69 270.26 214.57 270.419C214.491 270.539 214.451 270.3 214.531 270.499C214.451 270.3 214.888 269.704 214.968 270.101C215.008 270.38 214.729 270.539 214.491 270.419C214.213 270.26 214.372 269.942 214.61 269.823C215.286 269.505 214.69 268.472 214.014 268.79C212.821 269.346 212.941 271.095 214.173 271.532C215.326 271.97 216.518 270.857 216.16 269.664C215.962 269.028 215.365 268.631 214.69 268.75C214.093 268.869 213.616 269.426 213.457 269.982C213.298 270.658 213.537 271.334 214.252 271.532C214.809 271.691 215.445 271.413 215.723 270.936C216.041 270.419 216.041 269.704 215.763 269.187C215.445 268.511 214.69 268.392 214.093 268.79C213.577 269.147 213.298 269.783 213.497 270.419C213.696 271.016 214.372 271.413 215.008 271.294C216.28 271.016 216.24 268.988 214.849 269.028C214.292 269.028 213.775 269.426 213.696 269.982C213.616 270.539 214.014 271.055 214.531 271.175C215.127 271.334 215.763 271.016 215.922 270.419C216.121 269.664 215.524 268.988 214.809 268.909C214.093 268.829 213.338 269.386 213.259 270.141C213.179 270.896 213.895 271.532 214.61 271.334C215.326 271.095 215.008 269.942 214.252 270.101Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M223.474 268.352C223.713 268.312 223.554 268.432 223.673 268.471C223.713 268.511 223.753 268.432 223.832 268.511L223.872 268.551C223.872 268.591 223.832 268.63 223.832 268.63C223.832 268.591 223.872 268.63 223.872 268.63L223.832 268.591C223.872 268.67 223.832 268.71 223.792 268.789C223.753 268.829 223.832 268.789 223.792 268.789C223.951 268.75 223.713 268.829 223.872 268.789C223.832 268.789 223.872 268.829 223.872 268.789L223.832 268.71C223.713 268.63 223.991 268.67 223.792 268.71C223.832 268.71 223.753 268.71 223.753 268.71C223.792 268.67 223.832 268.71 223.872 268.71L223.832 268.67C223.872 268.67 223.872 268.71 223.872 268.71C223.832 268.63 223.872 268.71 223.832 268.591C223.832 268.511 223.872 268.511 223.832 268.591C223.832 268.551 223.872 268.511 223.832 268.551C223.792 268.591 223.912 268.551 223.872 268.551C223.792 268.511 223.912 268.551 223.951 268.591C223.991 268.63 224.071 268.63 224.031 268.75C223.991 268.829 223.951 268.829 223.872 268.829C223.792 268.789 223.832 268.63 223.792 268.789C223.832 268.471 223.713 268.153 223.395 268.074C223.117 267.994 222.719 268.153 222.679 268.471C222.52 269.386 223.355 270.26 224.309 269.982C225.144 269.743 225.541 268.67 225.025 267.994C224.587 267.358 223.594 267.199 223.037 267.756C222.481 268.312 222.56 269.306 223.236 269.743C223.991 270.181 224.985 269.624 225.064 268.75C225.104 267.955 224.349 267.438 223.594 267.637C222.719 267.835 222.481 268.909 223.156 269.505C223.872 270.141 224.945 269.704 225.144 268.829C225.343 267.716 224.031 266.921 223.117 267.557C222.679 267.835 222.441 268.392 222.64 268.869C222.838 269.425 223.355 269.664 223.912 269.584C224.23 269.545 224.389 269.147 224.309 268.869C224.11 268.432 223.792 268.312 223.474 268.352Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M217.631 275.587C218.983 275.308 220.294 275.11 221.646 274.99C222.401 274.951 222.401 273.758 221.646 273.798C220.175 273.917 218.744 274.116 217.313 274.434C216.558 274.593 216.876 275.746 217.631 275.587Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M217.194 275.507C218.029 276.66 218.943 277.733 219.937 278.687C220.294 279.005 220.771 278.846 220.93 278.409C221.368 277.137 221.765 275.865 222.083 274.593C222.282 273.838 221.129 273.52 220.93 274.275C220.612 275.587 220.215 276.859 219.778 278.091C220.096 278.012 220.454 277.932 220.772 277.813C219.818 276.899 218.983 275.905 218.188 274.871C217.79 274.275 216.757 274.871 217.194 275.507Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M218.386 275.984C218.784 276.143 219.062 276.461 219.102 276.899C219.181 277.654 220.334 277.654 220.294 276.899C220.255 276.342 220.374 275.825 220.612 275.309C220.255 275.269 219.897 275.229 219.539 275.15C219.658 275.507 219.778 275.825 219.778 276.183C219.817 276.938 221.01 276.938 220.97 276.183C220.97 275.706 220.891 275.269 220.692 274.832C220.533 274.394 219.857 274.196 219.619 274.673C219.261 275.348 219.062 276.104 219.102 276.859C219.499 276.859 219.897 276.859 220.294 276.859C220.215 276.024 219.738 275.269 218.983 274.911C218.704 274.792 218.347 274.832 218.148 275.11C218.029 275.388 218.108 275.825 218.386 275.984Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M213.14 252.293C208.489 259.21 204.394 266.524 200.976 274.156C199.386 277.694 197.955 281.271 196.683 284.928C196.365 285.842 195.411 287.353 196.325 288.188C196.643 288.506 197.239 288.506 197.637 288.625C198.869 288.903 200.101 289.102 201.334 289.301C202.089 289.42 202.407 288.267 201.652 288.148C200.658 287.989 199.664 287.83 198.71 287.631C198.233 287.552 197.716 287.432 197.239 287.313C197.319 286.836 197.438 286.399 197.637 285.962C198.154 284.372 198.75 282.821 199.386 281.271C200.698 277.892 202.168 274.553 203.719 271.254C206.779 264.894 210.278 258.812 214.213 252.929C214.571 252.254 213.537 251.657 213.14 252.293Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M213.935 252.929C215.922 252.452 217.949 252.174 220.016 252.134C220.771 252.134 220.771 250.942 220.016 250.942C217.87 250.982 215.723 251.26 213.617 251.777C212.901 251.975 213.179 253.128 213.935 252.929Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M197.955 284.531C199.465 284.809 201.016 285.087 202.526 285.365C203.281 285.524 203.599 284.372 202.844 284.213C201.334 283.934 199.783 283.656 198.273 283.378C197.518 283.259 197.2 284.411 197.955 284.531Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M199.863 279.522C201.532 279.641 203.162 279.999 204.752 280.595C205.468 280.834 205.786 279.681 205.07 279.443C203.401 278.846 201.652 278.489 199.863 278.33C199.108 278.29 199.108 279.482 199.863 279.522Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M201.85 273.957C203.52 274.236 205.189 274.593 206.859 274.991C207.614 275.189 207.932 274.037 207.177 273.838C205.507 273.401 203.878 273.083 202.168 272.805C201.413 272.685 201.095 273.838 201.85 273.957Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M204.593 268.71C206.223 268.67 207.853 268.869 209.403 269.306C210.158 269.505 210.476 268.352 209.721 268.154C208.051 267.677 206.342 267.478 204.593 267.518C203.838 267.557 203.838 268.75 204.593 268.71Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M207.853 264.218C209.363 264.298 210.874 264.576 212.305 265.093C213.02 265.331 213.338 264.179 212.623 263.94C211.073 263.384 209.482 263.105 207.853 263.026C207.058 262.986 207.058 264.179 207.853 264.218Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M209.443 260.442C211.152 260.402 212.821 260.641 214.451 261.118C215.206 261.356 215.485 260.204 214.769 259.965C213.02 259.448 211.271 259.21 209.443 259.21C208.688 259.25 208.688 260.442 209.443 260.442Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M211.907 256.626C213.497 256.547 215.087 256.666 216.637 256.944C217.393 257.103 217.711 255.95 216.955 255.791C215.286 255.473 213.616 255.354 211.907 255.434C211.112 255.473 211.112 256.666 211.907 256.626Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.1",
                d:
                  "M220.97 251.975C221.407 252.85 220.135 254.241 219.062 255.632C219.062 255.632 217.393 257.819 213.656 267.16C212.503 270.022 210.675 276.262 212.146 287.233C208.687 287.79 205.229 288.307 201.811 288.863C199.903 288.545 197.995 288.227 196.087 287.869C197.875 282.623 200.181 276.819 203.122 270.698C206.581 263.543 210.238 257.342 213.736 252.095C216.836 251.3 220.334 250.743 220.97 251.975Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.14",
                d:
                  "M214.252 252.611C216.081 252.452 217.949 252.293 219.778 252.174C219.102 253.128 218.148 254.559 217.035 256.268C214.173 260.72 211.907 264.854 211.033 266.563C207.376 273.917 206.7 283.656 206.541 288.227C203.202 288.068 199.863 287.909 196.524 287.79C198.074 283.179 200.022 278.17 202.526 272.884C206.263 264.894 210.397 258.136 214.252 252.611Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M220.93 317.603C220.096 320.107 219.301 322.691 218.545 325.354C215.683 335.371 213.696 344.99 212.344 353.934C211.748 355.246 211.152 356.557 210.556 357.949C210.357 358.426 210.158 358.903 209.959 359.38C211.47 359.539 212.702 359.539 213.537 359.539C217.79 359.499 219.778 358.704 223.832 359.022C224.707 359.101 225.422 359.181 225.859 359.26C225.104 358.545 224.15 357.79 223.037 357.074C220.573 355.484 218.188 354.689 216.399 354.252C216.916 351.787 217.671 348.289 218.704 344.076C220.414 336.961 221.964 331.515 223.276 326.904C224.031 324.201 225.104 320.584 226.416 316.331C224.627 316.768 222.799 317.165 220.93 317.603Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M220.255 317.205C217.313 329.568 214.372 341.89 211.47 354.252C211.311 355.008 212.424 355.326 212.623 354.57C215.564 342.208 218.506 329.886 221.407 317.523C221.606 316.768 220.453 316.45 220.255 317.205Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M225.939 316.211C222.242 328.454 218.824 340.737 215.644 353.099C215.445 353.855 216.598 354.173 216.796 353.417C219.976 341.055 223.435 328.772 227.092 316.529C227.33 315.814 226.177 315.496 225.939 316.211Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M212.026 355.683C213.895 356.121 215.882 355.286 216.757 353.577C217.114 352.901 216.081 352.305 215.723 352.98C215.087 354.213 213.696 354.888 212.344 354.531C211.629 354.372 211.311 355.524 212.026 355.683Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M211.351 354.848C210.754 355.842 209.244 357.949 209.443 359.181C209.641 360.373 211.112 360.055 211.947 360.055C216.677 360.016 221.407 359.499 226.138 360.055C226.694 360.135 226.853 359.38 226.575 359.022C224.071 356.279 219.976 355.007 216.677 353.457C216.001 353.139 215.365 354.173 216.081 354.491C219.221 355.961 223.355 357.193 225.74 359.857C225.899 359.499 226.018 359.181 226.177 358.823C222.958 358.426 219.698 358.545 216.478 358.664C214.968 358.744 213.457 358.744 211.987 358.823C211.549 358.784 211.112 358.823 210.715 358.942C210.874 358.585 210.993 358.187 211.152 357.83C211.51 356.995 211.947 356.2 212.424 355.445C212.742 354.769 211.708 354.173 211.351 354.848Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M213.06 350.953C214.411 351.708 216.081 351.668 217.353 350.794C217.989 350.357 217.393 349.323 216.757 349.76C215.803 350.396 214.65 350.476 213.656 349.919C212.98 349.562 212.384 350.595 213.06 350.953Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M214.014 346.7C215.286 347.495 216.955 347.495 218.148 346.581C218.744 346.143 218.148 345.11 217.552 345.547C216.677 346.223 215.564 346.263 214.61 345.666C213.974 345.229 213.378 346.263 214.014 346.7Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M215.286 340.419C216.28 341.174 217.472 341.413 218.665 341.214C219.42 341.095 219.102 339.942 218.347 340.061C217.472 340.18 216.598 339.902 215.882 339.386C215.286 338.909 214.69 339.942 215.286 340.419Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M219.34 324.638C220.652 325.354 222.123 325.513 223.514 325.036C224.23 324.797 223.912 323.645 223.196 323.883C222.083 324.241 220.97 324.161 219.937 323.605C219.261 323.247 218.665 324.281 219.34 324.638Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M216.717 332.946C217.949 334.218 219.857 334.496 221.407 333.662C222.083 333.304 221.487 332.27 220.811 332.628C219.738 333.224 218.426 332.986 217.552 332.111C217.035 331.555 216.2 332.389 216.717 332.946Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M220.573 319.869C221.924 320.425 223.395 320.465 224.786 319.948C225.502 319.67 225.184 318.517 224.468 318.795C223.276 319.233 222.083 319.193 220.891 318.716C220.175 318.438 219.857 319.59 220.573 319.869Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.14",
                d:
                  "M223.514 317.046C223.117 318.755 222.719 320.504 222.282 322.253C219.579 333.503 216.677 344.434 213.577 355.087C217.591 356.518 221.606 357.949 225.661 359.38C220.454 359.499 215.286 359.579 210.079 359.698C210.874 357.631 211.987 354.451 213.139 350.516C214.809 344.752 215.524 340.499 216.041 337.835C216.955 332.986 218.506 325.95 221.248 316.927C221.964 316.967 222.759 317.006 223.514 317.046Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.14",
                d:
                  "M220.771 319.67C220.453 320.942 220.175 322.214 219.857 323.486C217.393 333.781 215.047 343.997 212.821 354.173C214.451 349.721 216.041 344.712 217.393 339.187C219.142 332.072 220.175 325.473 220.771 319.67Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M204.553 296.456C204.434 296.535 204.474 296.655 204.394 296.774C204.156 297.211 203.202 297.132 203.003 297.132C202.208 297.092 201.334 297.648 199.545 298.761C195.729 301.146 192.589 305.121 192.589 305.121C190.243 308.023 188.932 309.693 188.375 312.356C187.66 315.774 188.733 318.716 189.409 320.147C189.13 320.823 188.773 321.816 188.494 323.049C187.978 325.195 188.216 325.632 188.375 325.831C188.892 326.547 190.124 326.785 190.76 326.388C191.356 326.03 191.237 325.275 191.674 325.155C192.31 324.996 192.867 326.348 193.503 326.268C193.861 326.229 194.258 325.672 194.536 323.804C195.013 324.559 196.047 324.718 196.683 324.241C197.319 323.804 197.478 322.89 197.041 322.254C197.955 322.373 198.75 321.816 198.988 321.141C199.227 320.266 198.551 319.193 197.398 319.034C198.114 318.517 198.432 317.722 198.193 317.126C197.836 316.291 196.484 316.331 196.126 316.331C195.013 316.371 194.218 317.007 193.98 317.205C193.264 316.212 193.105 315.337 193.066 314.86C192.986 313.787 193.344 312.952 194.099 311.283C194.616 310.17 195.053 309.375 195.133 309.295C196.246 307.427 197.716 304.962 200.459 302.617C201.652 301.623 203.52 300.272 206.143 299.159C206.223 298.841 206.382 297.728 205.706 296.973C205.428 296.694 204.792 296.297 204.553 296.456Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M204.514 295.978C198.988 297.33 194.576 301.106 191.237 305.558C187.938 309.891 185.434 315.734 188.773 320.783C189.21 321.419 190.243 320.822 189.806 320.186C186.467 315.138 189.647 309.414 192.946 305.32C196.047 301.504 199.982 298.324 204.832 297.171C205.587 296.932 205.269 295.78 204.514 295.978Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M205.547 298.562C201.493 300.788 197.995 303.809 195.331 307.546C193.543 310.011 190.323 315.099 193.861 317.484C194.497 317.921 195.093 316.887 194.457 316.45C191.078 314.184 196.524 307.665 198.233 305.797C200.499 303.293 203.162 301.226 206.143 299.596C206.819 299.238 206.223 298.205 205.547 298.562Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M188.971 320.783C188.137 322.373 186.865 325.473 188.773 326.785C190.283 327.818 192.39 326.467 191.714 324.638C191.436 323.923 190.283 324.241 190.561 324.956C190.879 325.831 189.846 326.308 189.25 325.672C188.852 325.235 188.971 324.44 189.051 323.923C189.21 323.048 189.528 322.174 189.965 321.379C190.363 320.703 189.329 320.107 188.971 320.783Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M194.934 317.722C195.49 317.205 196.325 316.688 197.12 317.006C197.359 317.125 197.677 317.364 197.716 317.642C197.756 318 197.359 318.397 197.001 318.238C196.325 317.92 195.689 318.914 196.405 319.272C197.915 319.987 199.505 318.318 198.67 316.847C197.637 315.058 195.371 315.734 194.099 316.887C193.543 317.404 194.377 318.238 194.934 317.722Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M190.959 324.4C191.038 326.109 192.628 327.5 194.338 326.785C195.848 326.149 196.047 324.002 194.576 323.207C193.901 322.85 193.304 323.883 193.98 324.241C194.696 324.638 194.457 325.553 193.742 325.751C192.867 325.95 192.231 325.195 192.191 324.4C192.112 323.645 190.919 323.645 190.959 324.4Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M193.94 323.684C194.338 324.28 194.815 324.837 195.57 325.036C196.246 325.234 197.08 325.075 197.557 324.519C197.995 324.042 198.193 323.326 197.995 322.69C197.875 322.372 197.677 322.134 197.478 321.935C197.279 321.736 196.921 321.577 196.842 321.259C196.643 320.504 195.49 320.822 195.689 321.577C195.808 321.935 196.007 322.213 196.285 322.492C196.524 322.73 196.882 322.889 196.882 323.287C196.882 323.724 196.444 323.923 196.047 323.883C195.53 323.843 195.252 323.446 194.974 323.048C194.536 322.452 193.503 323.048 193.94 323.684Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M196.007 321.578C196.365 323.207 198.71 323.168 199.306 321.737C200.062 319.908 198.233 318.596 196.603 318.477C195.848 318.437 195.848 319.63 196.603 319.67C197.359 319.709 198.313 320.107 198.273 321.021C198.233 321.617 197.319 321.975 197.16 321.299C197.001 320.504 195.848 320.822 196.007 321.578Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M190.085 321.22C190.8 319.59 191.993 318.398 193.742 317.921C194.497 317.722 194.179 316.569 193.424 316.768C191.396 317.325 189.886 318.716 189.051 320.624C188.773 321.3 189.806 321.936 190.085 321.22Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M188.375 315.099C189.329 314.065 190.8 313.668 192.151 314.224C192.867 314.542 193.463 313.509 192.748 313.191C190.959 312.395 188.852 312.753 187.54 314.264C187.024 314.82 187.858 315.655 188.375 315.099Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M191.158 307.665C192.191 307.268 193.503 307.745 193.861 308.858C194.099 309.573 195.252 309.255 195.014 308.54C194.457 306.87 192.509 305.916 190.84 306.512C190.124 306.791 190.442 307.943 191.158 307.665Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M194.854 302.975C195.888 303.054 196.723 303.968 196.723 305.002C196.723 305.757 197.915 305.757 197.915 305.002C197.955 303.293 196.564 301.901 194.854 301.782C194.099 301.742 194.099 302.935 194.854 302.975Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M199.386 299.596C200.3 299.755 200.896 300.669 200.578 301.583C200.34 302.299 201.493 302.617 201.731 301.901C202.248 300.43 201.214 298.721 199.704 298.443C198.949 298.284 198.631 299.437 199.386 299.596Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M204.633 297.33C205.229 297.489 205.627 298.204 205.348 298.761C205.03 299.437 206.064 300.073 206.382 299.357C206.978 298.085 206.302 296.535 204.951 296.177C204.235 295.978 203.917 297.131 204.633 297.33Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.14",
                d:
                  "M204.434 296.575C204.553 296.813 201.016 298.045 197.279 301.663C196.405 302.537 193.741 305.2 191.953 309.414C190.681 312.435 190.72 314.144 190.84 315.019C190.999 316.489 191.555 317.602 191.953 318.358C191.595 319.312 191.396 320.146 191.237 320.782C190.919 322.253 190.681 323.207 190.8 324.439C190.879 325.711 191.237 326.228 190.919 326.507C190.522 326.904 189.289 326.546 188.693 325.791C187.978 324.916 188.296 323.644 188.494 322.73C188.693 321.816 189.091 321.14 189.329 320.703C188.892 319.908 188.375 318.636 188.097 317.046C187.54 313.826 188.455 311.242 188.892 310.129C189.727 307.903 190.879 306.472 192.35 304.723C194.457 302.179 196.484 300.629 197.041 300.232C200.618 297.529 204.315 296.336 204.434 296.575Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.13",
                d:
                  "M202.844 296.734C203.083 297.052 201.135 298.562 197.915 302.657C195.411 305.876 193.582 308.182 192.191 311.441C190.124 316.37 190.243 320.504 189.409 320.504C188.852 320.504 188.455 318.716 188.296 318.04C188.097 317.126 187.54 314.144 189.13 310.05C189.369 309.414 190.522 306.512 193.741 303.094C197.677 298.92 202.486 296.297 202.844 296.734Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M207.495 318.994C208.21 319.908 209.403 321.379 210.913 323.247C223.991 339.425 227.648 343.4 229.675 345.547C231.345 347.296 233.968 350.039 237.427 353.258C239.255 354.252 241.084 355.246 242.872 356.279C244.86 352.901 247.126 347.852 247.523 341.572C247.603 340.181 247.603 338.909 247.523 337.676C246.132 338.909 244.343 340.777 242.753 343.48C241.402 345.746 240.686 347.892 240.249 349.482C239.017 348.25 237.745 346.938 236.512 345.587C234.684 343.639 232.975 341.691 231.385 339.783C228.205 336.166 225.025 332.469 221.845 328.613C219.261 325.553 216.757 322.492 214.332 319.471C213.457 319.232 212.384 318.994 211.152 318.914C209.721 318.755 208.489 318.835 207.495 318.994Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M206.541 318.716C216.081 330.879 226.257 342.486 237.029 353.576C237.546 354.133 238.42 353.298 237.864 352.742C227.092 341.691 216.916 330.044 207.376 317.881C206.938 317.285 206.064 318.119 206.541 318.716Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M213.696 319.749C221.924 330.124 230.55 340.3 239.891 349.681C240.448 350.237 241.282 349.402 240.726 348.846C231.385 339.425 222.759 329.289 214.531 318.914C214.094 318.318 213.219 319.153 213.696 319.749Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M241.283 349.005C242.594 344.633 244.9 340.737 248.12 337.478C247.802 337.279 247.444 337.08 247.126 336.882C245.814 343.083 244.383 349.204 242.793 355.365C242.594 356.121 243.747 356.439 243.946 355.683C245.496 349.562 246.967 343.401 248.279 337.2C248.398 336.643 247.722 336.166 247.285 336.603C243.946 340.022 241.521 344.076 240.17 348.648C239.931 349.443 241.084 349.761 241.283 349.005Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M236.95 353.775C238.063 354.491 239.216 355.127 240.408 355.723C241.402 356.24 242.237 356.637 243.35 356.478C244.105 356.359 243.787 355.206 243.032 355.325C242.038 355.484 240.766 354.57 239.891 354.133C239.096 353.696 238.341 353.258 237.546 352.781C236.91 352.304 236.314 353.338 236.95 353.775Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M247.404 337.478C247.285 343.718 245.774 349.76 242.952 355.325C242.594 356.001 243.628 356.597 243.985 355.922C246.887 350.158 248.477 343.917 248.596 337.478C248.636 336.683 247.444 336.683 247.404 337.478Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M239.692 348.886C238.182 349.76 237.228 351.231 237.069 352.98C236.989 353.735 238.182 353.735 238.261 352.98C238.381 351.668 239.136 350.555 240.289 349.919C240.964 349.522 240.368 348.488 239.692 348.886Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M214.491 327.023C215.246 325.831 216.478 325.155 217.87 325.115C218.625 325.115 218.625 323.923 217.87 323.923C216.041 323.963 214.412 324.877 213.458 326.387C213.02 327.063 214.054 327.659 214.491 327.023Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M218.824 331.634C219.579 330.601 220.771 330.124 222.043 330.203C222.799 330.243 222.799 329.051 222.043 329.011C220.334 328.892 218.784 329.687 217.79 331.038C217.353 331.674 218.386 332.27 218.824 331.634Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M223.196 337.517C223.991 336.364 225.184 335.689 226.535 335.49C227.291 335.371 226.973 334.218 226.217 334.337C224.548 334.576 223.117 335.53 222.163 336.921C221.726 337.557 222.759 338.153 223.196 337.517Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M228.801 343.798C229.437 342.446 230.55 341.492 232.021 341.135C232.776 340.976 232.458 339.823 231.703 339.982C229.954 340.379 228.483 341.572 227.767 343.202C227.449 343.877 228.483 344.474 228.801 343.798Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.16",
                d:
                  "M209.88 318.517C211.351 320.147 212.782 321.737 214.252 323.367C222.441 332.43 230.59 341.572 238.738 350.715C239.931 349.92 241.163 349.085 242.356 348.29C243.866 344.991 245.377 341.731 246.927 338.432C247.205 338.71 247.603 339.108 247.841 339.744C248.676 341.731 247.404 343.997 246.927 344.951C245.814 347.058 244.582 350.357 243.667 355.763C242.038 355.286 240.448 354.769 238.818 354.292C236.87 352.503 234.922 350.635 232.975 348.727C222.918 338.79 214.451 328.693 207.296 318.875C208.171 318.716 209.045 318.636 209.88 318.517Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.15",
                d:
                  "M208.052 318.636C208.29 318.437 212.146 322.81 215.207 326.188C220.692 332.23 222.839 335.212 227.291 340.22C229.715 342.923 233.372 346.898 238.262 351.47C237.944 352.026 237.626 352.583 237.347 353.139C234.525 350.357 230.59 346.342 226.098 341.333C216.161 330.243 207.694 318.914 208.052 318.636Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M215.604 198.233C214.69 198.194 213.219 198.273 211.549 198.79C210.953 198.989 207.455 200.102 207.495 201.652C207.495 202.328 208.21 202.805 209.045 203.361C210.675 204.474 212.265 204.792 214.65 205.269C216.796 205.706 218.545 206.024 219.698 206.223C220.811 207.416 222.64 209.045 225.303 210.198C226.098 210.556 229.715 212.066 234.406 211.51C235.638 211.391 236.632 211.152 237.307 210.953C236.393 213.219 235.32 216.24 234.406 219.897C233.69 222.759 232.458 227.887 232.458 234.525C232.458 244.343 235.201 251.816 236.512 255.076C237.864 258.335 239.454 262.151 242.912 266.285C245.178 268.988 250.147 274.991 258.415 276.938C259.488 277.177 262.111 277.733 267.16 277.336C270.976 277.018 279.601 275.905 291.407 269.545C297.409 266.325 305.558 261.913 312.952 253.009C318.795 245.973 327.54 232.061 323.048 226.575C322.174 225.502 321.021 225.065 319.948 224.667C315.814 223.117 310.726 224.23 301.543 229.795C296.535 232.816 295.939 233.73 281.748 244.065C278.528 246.41 273.877 249.71 267.199 250.902C263.026 251.657 261.078 251.021 260.203 250.703C255.553 248.915 253.724 243.946 252.452 240.448C249.988 233.77 250.703 227.847 251.101 225.065C251.657 220.772 252.889 217.433 254.599 212.901C256.705 207.217 257.302 207.416 258.494 203.401C259.726 199.307 261.038 194.537 259.289 189.528C258.693 187.859 257.659 184.957 254.837 183.844C252.77 183.009 250.703 183.526 249.789 183.844C249.034 181.061 248.398 178.001 247.841 174.701C247.006 169.613 246.728 164.923 246.688 160.829C245.734 160.232 244.184 159.477 242.236 159.119C239.692 158.642 237.586 159 235.439 159.517C229.715 160.829 225.939 161.703 221.089 164.287C218.824 165.519 215.763 167.387 212.543 170.17C212.742 174.781 213.139 179.67 213.696 184.798C214.213 189.449 214.849 193.98 215.604 198.233Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M252.055 191.316C250.186 191.873 248.159 190.68 247.682 188.772C247.126 186.507 249.272 184.44 251.339 184.042C255.632 183.207 258.375 187.62 258.693 191.316C258.971 194.775 258.455 198.63 257.739 202.009C256.944 205.746 255.195 209.124 253.724 212.583C251.101 218.784 250.028 225.819 250.385 232.537C250.664 238.341 252.413 244.383 256.705 248.517C260.919 252.531 267.12 254.598 272.725 252.452C273.44 252.174 273.122 251.021 272.407 251.299C265.212 254.082 257.461 249.51 254.162 243.031C250.385 235.638 251.061 226.058 253.048 218.267C254.122 214.093 256.189 210.357 257.699 206.382C259.051 202.804 259.528 198.988 259.806 195.212C260.044 191.992 260.045 188.415 257.978 185.751C256.348 183.684 253.684 182.333 251.061 182.85C248.477 183.366 246.092 185.791 246.49 188.534C246.847 191.316 249.789 193.145 252.452 192.39C253.128 192.231 252.81 191.078 252.055 191.316Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M260.482 251.459C272.049 252.77 281.072 244.304 289.777 238.063C294.468 234.684 299.317 231.345 304.405 228.602C306.989 227.211 309.732 226.019 312.594 225.383C315.098 224.826 320.305 223.912 321.975 226.575C322.372 227.211 323.406 226.615 323.008 225.979C320.544 222.083 313.508 223.713 309.97 224.866C304.207 226.774 298.999 230.272 293.991 233.651C288.823 237.149 284.014 241.084 278.846 244.582C273.4 248.239 267.199 251.061 260.482 250.266C259.687 250.147 259.726 251.339 260.482 251.459Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M217.234 169.415C216.478 181.141 218.704 192.827 223.673 203.48C223.991 204.156 225.025 203.56 224.707 202.884C219.857 192.43 217.711 180.902 218.466 169.415C218.466 168.659 217.273 168.659 217.234 169.415Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M224.428 204.395C234.445 203.321 244.184 200.539 253.247 196.166C253.923 195.848 253.327 194.815 252.651 195.133C243.787 199.426 234.247 202.169 224.428 203.202C223.673 203.282 223.673 204.474 224.428 204.395Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M251.617 192.549C252.015 193.622 252.452 194.695 252.85 195.769C253.128 196.484 254.281 196.166 254.003 195.451C253.605 194.377 253.168 193.304 252.77 192.231C252.492 191.555 251.339 191.833 251.617 192.549Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M246.053 161.226C246.728 168.62 246.649 176.649 249.511 183.566C249.789 184.281 250.942 183.963 250.663 183.248C247.841 176.411 247.921 168.5 247.285 161.226C247.165 160.471 245.973 160.471 246.053 161.226Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M218.943 169.653C222.6 166.99 226.853 165.479 231.186 164.247C235.996 162.895 240.885 161.425 245.933 161.623C246.689 161.663 246.689 160.471 245.933 160.431C240.806 160.272 235.797 161.743 230.868 163.094C226.416 164.326 222.083 165.877 218.347 168.619C217.711 169.096 218.307 170.13 218.943 169.653Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M232.1 192.509C229.119 191.038 227.489 188.057 227.131 184.837C226.734 181.22 228.324 178.716 231.186 176.689C233.929 174.701 237.148 173.23 240.448 174.9C243.707 176.53 245.178 179.988 246.052 183.327C246.251 184.082 247.404 183.764 247.205 183.009C246.211 179.153 244.343 175.258 240.487 173.588C236.751 171.958 233.134 173.707 230.113 175.973C227.012 178.279 225.502 181.18 226.018 185.076C226.456 188.614 228.324 191.913 231.544 193.503C232.18 193.9 232.776 192.867 232.1 192.509Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M230.55 192.589C232.498 195.053 235.956 194.974 238.778 194.497C242.038 193.94 245.377 192.629 247.007 189.568C247.364 188.892 246.331 188.296 245.973 188.972C244.582 191.595 241.799 192.708 239.017 193.265C236.433 193.781 233.174 194.06 231.385 191.754C230.908 191.118 230.073 191.993 230.55 192.589Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M246.052 182.93C246.37 184.082 246.529 185.275 246.569 186.467C246.609 187.223 247.801 187.223 247.762 186.467C247.722 185.156 247.523 183.884 247.205 182.612C247.006 181.856 245.854 182.174 246.052 182.93Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M211.748 170.726C212.106 178.716 213.02 186.626 214.61 194.457C215.008 196.444 215.445 198.472 215.962 200.459C216.28 201.731 216.518 203.122 217.552 203.997C219.38 205.627 222.202 204.911 224.269 204.235C224.985 203.997 224.667 202.844 223.951 203.083C222.64 203.52 221.248 203.957 219.897 203.719C217.79 203.401 217.472 201.532 217.035 199.744C216.28 196.643 215.644 193.503 215.087 190.363C213.934 183.883 213.259 177.285 212.98 170.726C212.941 169.971 211.748 169.971 211.748 170.726Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M212.305 170.965C214.332 170.885 216.28 170.567 218.188 169.931C218.903 169.693 218.585 168.54 217.87 168.778C216.041 169.375 214.213 169.732 212.265 169.772C211.55 169.812 211.55 171.004 212.305 170.965Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M212.702 170.011C217.194 166.473 222.56 164.326 227.966 162.657C230.55 161.862 233.173 161.067 235.837 160.431C239.017 159.636 242.554 159.318 245.257 161.544C245.854 162.021 246.688 161.186 246.092 160.709C241.163 156.655 234.286 159.517 228.92 161.107C222.838 162.935 216.876 165.201 211.828 169.176C211.231 169.653 212.106 170.488 212.702 170.011Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M223.633 163.69C221.646 160.868 219.857 157.887 218.983 154.508C218.068 151.01 217.949 147.194 217.592 143.617C217.512 142.861 216.32 142.861 216.399 143.617C216.797 147.313 216.876 151.209 217.83 154.826C218.744 158.284 220.573 161.385 222.6 164.287C223.037 164.923 224.071 164.326 223.633 163.69Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M216.876 142.981C217.075 142.861 216.955 142.861 216.876 142.663C216.796 142.464 216.757 142.186 216.717 141.987C216.677 141.709 216.717 140.993 217.154 141.033C217.472 141.033 217.472 141.669 217.472 141.907C217.472 142.066 217.512 142.265 217.432 142.424C217.313 142.663 217.273 142.504 217.353 142.702C217.075 141.987 215.922 142.305 216.2 143.02C216.598 144.133 218.068 143.974 218.506 142.981C218.903 142.066 218.704 140.278 217.591 139.96C216.359 139.562 215.445 140.834 215.485 141.947C215.524 142.901 216.081 144.809 217.393 144.094C218.148 143.656 217.552 142.623 216.876 142.981Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M233.332 143.935C235.201 148.903 235.797 154.15 234.922 159.397C234.803 160.153 235.956 160.471 236.075 159.715C236.95 154.23 236.433 148.784 234.485 143.617C234.207 142.941 233.054 143.219 233.332 143.935Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M233.372 142.703C232.537 142.504 232.776 141.311 233.611 141.51C234.008 141.59 234.207 142.067 234.286 142.424C234.286 142.544 234.207 143.498 233.889 143.219C233.293 142.742 232.458 143.577 233.054 144.054C233.929 144.809 235.161 144.293 235.439 143.18C235.717 142.146 235.201 140.914 234.247 140.437C233.332 140 232.14 140.477 231.782 141.431C231.385 142.464 232.06 143.577 233.094 143.816C233.809 144.014 234.127 142.862 233.372 142.703Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M215.644 197.756C213.458 197.518 211.271 197.915 209.403 199.068C208.29 199.744 206.462 201.135 206.859 202.685C207.296 204.434 210.556 204.752 211.907 205.11C214.61 205.826 217.353 206.223 220.136 206.462C220.891 206.541 220.891 205.309 220.136 205.269C216.717 204.991 213.338 204.395 210.079 203.361C209.085 203.043 207.575 202.924 208.648 201.135C208.966 200.579 209.92 200.102 210.516 199.784C212.106 198.949 213.855 198.75 215.644 198.949C216.399 199.028 216.399 197.836 215.644 197.756Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M219.698 206.342C222.083 208.012 224.707 210.476 227.529 211.351C230.471 212.225 234.088 211.907 237.109 211.669C237.864 211.629 237.864 210.437 237.109 210.476C234.207 210.675 230.669 211.033 227.847 210.198C225.144 209.403 222.56 206.899 220.295 205.309C219.698 204.872 219.102 205.905 219.698 206.342Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M236.314 211.271C229.834 228.125 230.55 249.233 240.964 264.417C245.575 271.175 252.651 276.541 260.998 277.495C269.704 278.489 279.124 275.706 287.035 272.248C296.058 268.313 304.167 262.469 311.163 255.553C311.719 254.996 310.885 254.162 310.328 254.718C298.602 266.285 282.901 275.388 266.166 276.382C246.49 277.574 235.996 257.938 233.849 240.925C232.617 230.987 233.889 220.891 237.467 211.55C237.745 210.834 236.592 210.556 236.314 211.271Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M229.874 190.959C227.489 188.534 226.496 184.957 227.37 181.697C228.602 177.126 233.412 173.548 238.54 174.383C244.502 175.337 246.53 181.538 246.768 184.678C246.848 185.712 247.046 188.614 245.138 190.641C244.622 191.197 244.145 191.436 243.31 191.913C241.601 192.867 239.454 194.059 236.592 193.94C232.697 193.741 230.192 191.277 229.874 190.959Z",
                fill: "#EC615B"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.16",
                d:
                  "M241.601 158.801C242.674 159.437 243.787 160.073 244.86 160.749C240.567 161.107 234.803 162.021 228.483 164.486C224.349 166.076 220.931 167.944 218.188 169.693C217.949 173.27 217.949 177.444 218.506 182.055C219.46 190.363 221.726 197.12 223.872 202.01C224.906 202.964 226.178 203.997 227.728 204.832C233.929 208.211 240.368 207.058 242.793 206.462C241.601 209.562 239.931 214.292 238.341 220.175C234.843 232.935 234.406 241.084 233.571 241.044C232.736 241.004 232.1 232.975 233.253 224.786C234.048 219.023 235.598 214.412 236.831 211.232C234.923 211.47 233.333 211.351 232.22 211.232C228.443 210.794 225.701 209.324 223.713 208.25C222.123 207.376 220.851 206.501 219.977 205.865C218.347 205.746 216.16 205.508 213.577 205.11C209.005 204.395 208.21 203.878 207.932 203.162C207.415 201.89 208.528 200.181 209.562 199.307C211.152 197.955 213.577 197.756 215.803 198.71C214.849 194.417 213.974 189.568 213.418 184.241C212.822 178.756 212.623 173.708 212.662 169.176C216.2 166.95 220.891 164.406 226.655 162.339C232.379 160.352 237.506 159.318 241.601 158.801Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.11",
                d:
                  "M247.841 188.216C248.517 187.063 251.816 187.183 253.923 188.773C256.427 190.641 257.143 194.536 256.069 195.411C255.433 195.888 254.241 195.49 253.565 195.053C252.174 194.139 252.134 192.509 252.134 192.35C251.896 192.35 249.312 192.191 248.199 190.204C248 189.846 247.444 188.852 247.841 188.216Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.09",
                d:
                  "M218.029 170.13C218.267 173.469 218.983 178.517 221.368 184.162C222.322 186.427 223.475 189.17 225.422 191.555C231.266 198.591 241.402 198.949 244.82 198.949C239.216 200.38 233.611 201.771 228.006 203.202C235.837 203.56 245.258 205.11 248.159 211.152C251.101 217.353 244.423 222.6 242.793 235.717C242.674 236.751 240.13 259.528 252.413 267.875C260.561 273.4 271.532 269.942 279.204 267.517C300.55 260.76 313.548 244.661 319.868 235.161C319.312 238.579 318.04 243.946 314.701 249.59C309.772 257.898 303.173 262.111 296.774 266.206C287.512 272.128 279.602 274.394 277.733 274.911C271.373 276.62 266.285 278.011 260.363 276.938C247.404 274.593 240.13 262.39 238.54 259.766C229.437 244.542 233.015 227.052 234.843 218.188C235.479 215.167 236.155 212.702 236.672 210.993C235.042 211.311 232.22 211.629 228.92 210.794C224.23 209.641 221.249 206.899 220.056 205.627C212.106 205.428 207.972 204.514 207.694 202.844C207.495 201.691 209.085 200.221 212.504 198.392C213.497 198.273 214.491 198.154 215.445 198.034C214.412 188.932 213.338 179.789 212.305 170.686C214.213 170.488 216.121 170.329 218.029 170.13Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M301.027 306.79C300.272 313.269 299.596 318.516 299.119 321.696C331.396 324.916 363.673 328.136 395.95 331.356C399.328 314.7 402.031 294.825 402.548 272.327C402.946 255.195 401.952 239.652 400.362 225.978C396.665 223.554 390.941 220.294 383.389 218.068C375.717 215.802 369.675 215.604 362.122 215.246C356.478 214.968 349.084 214.65 339.823 216.279C334.218 217.273 325.99 219.34 316.728 223.991C312.077 233.173 309.494 240.964 308.063 246.092C303.094 264.019 304.644 274.95 301.027 306.79Z",
                fill: "#009051"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.16",
                d:
                  "M371.305 215.842C372.139 217.87 373.332 221.169 374.246 225.343C377.625 240.805 372.934 248.994 370.867 267.16C368.602 286.915 373.292 288.068 369.754 301.742C366.733 313.468 360.811 322.094 356.438 327.5C369.635 328.931 382.792 330.362 395.989 331.793C396.466 329.209 397.102 325.672 397.778 321.418C398.692 315.893 400.322 305.797 401.395 295.422C402.747 282.265 402.747 272.089 402.747 264.258C402.747 253.843 402.27 240.925 400.72 226.058C399.09 225.025 396.824 223.713 394.042 222.322C391.06 220.851 386.728 218.744 380.805 217.313C378.38 216.717 375.2 216.081 371.305 215.842Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.13",
                d:
                  "M400.322 226.456C399.05 232.06 397.182 240.726 395.353 251.458C391.06 276.62 391.895 284.371 387.761 296.257C384.86 304.604 379.056 316.251 366.098 328.494C375.916 329.448 385.774 330.402 395.592 331.356C398.852 316.529 400.481 303.69 401.316 293.752C402.906 275.229 402.35 260.641 401.952 249.948C401.555 240.448 400.918 232.418 400.322 226.456Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M391.06 224.627C390.226 225.104 389.192 226.296 387.165 228.642C385.853 230.152 385.217 230.907 384.7 231.663C383.428 233.571 382.872 235.479 382.236 239.931C381.6 244.303 381.282 246.529 381.202 249.391C381.043 256.268 382.077 262.429 383.468 269.346C386.131 282.463 387.324 284.212 388.834 292.957C390.106 300.351 390.544 306.432 390.703 310.288C389.311 311.918 387.324 314.382 385.138 317.562C381.004 323.604 378.897 328.295 377.545 331.077C375.16 335.887 371.066 342.565 363.752 350.237C362.719 350.396 361.089 350.515 359.221 350.038C356.08 349.203 355.643 347.454 352.423 346.62C351.271 346.302 351.787 346.659 346.66 346.421C343.042 346.262 341.969 346.023 340.896 346.818C339.902 347.534 339.107 348.965 339.465 350.237C339.902 351.747 341.89 352.86 344.195 352.463C341.015 353.258 338.789 354.53 337.398 355.484C335.689 356.676 332.389 358.942 332.866 361.128C333.145 362.4 334.695 363.394 334.933 363.553C335.728 364.07 336.523 364.269 337 364.348C337.04 364.587 337.398 366.057 338.869 366.972C340.459 367.965 342.128 367.449 342.367 367.369C342.724 368.085 343.4 369.198 344.632 369.993C346.858 371.384 349.999 371.225 352.662 369.595C352.622 370.39 352.741 371.503 353.497 372.219C354.61 373.292 356.597 372.934 359.26 372.219C366.376 370.35 369.953 369.396 372.02 366.972C372.895 365.938 374.644 363.553 375.121 359.499C381.838 354.57 387.006 350.038 390.544 346.779C400.799 337.358 409.226 329.408 414.592 316.926C417.335 310.527 418.25 305.399 418.488 303.61C419.243 298.681 419.124 294.547 418.488 287.67C417.812 280.396 416.699 272.208 414.155 259.249C413.837 257.699 411.77 247.284 407.159 235.041C405.927 231.742 404.098 227.33 399.766 225.144C399.169 224.985 394.439 222.679 391.06 224.627Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M390.703 224.15C381.918 230.431 380.169 242.912 380.527 252.929C380.964 265.45 384.86 277.415 387.563 289.539C389.153 296.654 390.305 303.849 390.146 311.163C390.146 311.918 391.339 311.918 391.339 311.163C391.697 296.098 386.45 281.867 383.508 267.279C381.998 259.687 381.083 251.856 382.077 244.105C382.952 237.109 385.337 229.477 391.299 225.184C391.895 224.746 391.299 223.713 390.703 224.15Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M394.439 308.539C386.847 311.719 383.19 319.709 379.294 326.426C374.405 334.893 369.317 343.241 362.48 350.316C361.963 350.873 362.798 351.707 363.315 351.151C369.556 344.711 374.405 337.159 378.897 329.408C382.991 322.412 386.728 313.031 394.717 309.652C395.473 309.374 395.155 308.221 394.439 308.539Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M390.544 225.78C395.552 222.441 401.077 226.455 403.741 230.788C406.404 235.081 408.193 240.05 409.783 244.82C413.122 254.877 414.91 265.371 416.182 275.865C417.415 286.12 419.203 297.131 417.295 307.386C415.387 317.562 408.709 326.109 402.151 333.82C394.678 342.565 386.171 350.316 376.83 356.994C376.194 357.432 376.79 358.465 377.426 358.028C386.29 351.708 394.439 344.394 401.634 336.245C408.511 328.414 415.825 319.55 418.17 309.135C420.634 298.125 418.647 286.2 417.335 275.149C415.984 263.979 413.956 252.77 410.18 242.117C408.352 236.989 406.324 231.106 402.508 227.091C399.328 223.752 394.121 222.003 389.987 224.746C389.311 225.183 389.908 226.217 390.544 225.78Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M343.798 351.747C342.804 351.548 340.896 351.35 340.34 350.435C340.34 349.521 340.379 348.647 340.379 347.732C340.697 347.534 341.015 347.414 341.373 347.335C341.89 347.176 342.446 347.136 343.003 347.096C345.467 346.818 348.607 346.222 350.992 347.017C353.02 347.693 354.808 349.044 356.796 349.799C358.863 350.555 361.009 351.032 363.196 351.27C363.951 351.35 363.951 350.157 363.196 350.078C361.208 349.839 359.3 349.442 357.432 348.766C355.524 348.09 353.894 347.017 352.066 346.182C349.204 344.87 345.467 345.586 342.486 345.944C340.777 346.142 338.591 346.778 338.432 348.845C338.233 351.588 341.294 352.542 343.4 352.94C344.235 353.019 344.553 351.866 343.798 351.747Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M349.323 352.224C346.62 351.231 343.838 351.708 341.214 352.781C338.909 353.695 336.245 354.729 334.576 356.597C333.542 357.71 331.595 360.612 332.072 362.281C332.588 364.03 335.291 364.984 336.921 364.666C337.676 364.507 337.358 363.355 336.603 363.514C334.218 363.991 332.986 361.963 333.821 360.135C334.059 359.578 334.337 359.061 334.616 358.545C335.609 356.955 337.04 356.08 338.67 355.285C341.89 353.695 345.388 352.105 349.005 353.417C349.721 353.655 350.039 352.503 349.323 352.224Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M351.072 356.04C346.541 356.716 339.266 357.511 336.842 362.122C334.814 365.978 339.425 369.476 342.923 367.647C343.599 367.29 343.003 366.256 342.327 366.614C340.101 367.767 336.961 365.978 337.637 363.315C338.074 361.486 340.101 360.373 341.691 359.618C344.712 358.187 348.131 357.67 351.39 357.153C352.145 357.074 351.827 355.921 351.072 356.04Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M377.784 356.358C375.359 357.392 374.524 359.658 373.809 362.043C373.173 364.229 372.378 366.018 370.351 367.25C368.681 368.244 366.733 368.76 364.905 369.396C362.957 370.072 361.009 370.788 359.062 371.463C358.187 371.781 357.273 372.179 356.359 372.417C355.882 372.576 355.405 372.656 354.928 372.696C353.417 372.099 352.98 371.185 353.695 370.032C354.49 368.442 356.557 367.091 357.949 366.097C359.499 365.024 361.129 364.189 362.878 363.553C363.593 363.315 363.275 362.162 362.56 362.4C360.493 363.116 358.585 364.149 356.836 365.421C355.365 366.495 353.576 367.767 352.662 369.396C352.066 370.47 351.946 371.901 352.741 372.894C353.735 374.127 355.325 373.928 356.677 373.53C359.3 372.775 361.884 371.662 364.507 370.748C366.654 369.993 368.959 369.357 370.947 368.204C372.457 367.329 373.57 366.137 374.246 364.507C375.24 362.122 375.319 358.664 378.102 357.471C378.817 357.233 378.499 356.08 377.784 356.358Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M355.683 360.93C352.622 361.287 349.402 361.645 346.501 362.679C344.672 363.315 341.651 364.984 341.452 367.21C341.214 369.555 344.513 370.668 346.342 370.947C349.204 371.384 352.185 370.47 354.53 368.84C355.166 368.403 354.57 367.369 353.934 367.806C352.185 368.999 350.237 369.754 348.091 369.834C345.944 369.913 340.777 368.363 343.837 365.62C346.819 362.917 351.867 362.559 355.683 362.082C356.438 362.043 356.438 360.85 355.683 360.93Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.09",
                d:
                  "M394.36 224.667C391.418 226.773 397.421 238.5 401.555 250.027C405.887 261.992 411.969 278.846 409.544 296.733C407 315.495 395.95 329.09 389.272 337.278C382.435 345.666 375.518 351.549 370.311 355.404C347.017 361.089 342.128 364.626 342.287 366.892C342.367 367.886 343.48 369.198 344.672 369.834C347.773 371.503 351.589 369.357 352.145 369.039C352.145 369.993 352.304 372.298 353.735 373.053C354.769 373.57 355.921 373.053 357.193 372.537C363.792 369.834 364.547 371.185 368.92 368.522C370.549 367.528 371.742 366.773 372.934 365.302C375.002 362.758 375.479 359.896 375.598 358.346C379.454 355.563 384.144 351.946 389.192 347.415C396.665 340.737 404.456 333.701 411.055 322.611C413.957 317.761 416.461 313.468 417.733 307.148C418.846 301.464 418.329 297.449 417.455 289.539C414.871 265.251 415.785 267.159 415.07 263.105C413.599 255.036 413.042 256.109 408.392 239.374C408.352 239.255 407.279 235.32 404.655 230.828C403.065 228.125 402.032 227.052 400.919 226.296C399.17 224.985 395.791 223.673 394.36 224.667Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.1",
                d:
                  "M417.335 289.658C416.461 289.578 415.825 294.308 413.44 301.622C409.306 314.263 404.099 323.087 398.613 330.521C393.128 337.914 385.734 347.216 376.234 357.352C388.358 348.289 397.182 339.584 403.065 333.144C412.605 322.73 414.99 317.721 416.342 313.865C420.396 302.099 418.727 289.777 417.335 289.658Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.11",
                d:
                  "M354.173 371.821C353.974 371.145 356.836 369.794 362.56 367.011C367.409 364.666 371.344 362.679 374.047 361.327C373.729 363.354 372.934 365.938 370.828 367.25C370.232 367.608 369.834 367.727 368.96 368.005C363.752 369.635 362.997 371.066 359.3 371.821C357.313 372.258 354.332 372.457 354.173 371.821Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.1",
                d:
                  "M342.883 366.017C344.99 366.176 348.091 366.216 351.787 365.66C358.068 364.706 362.798 362.4 362.918 362.678C362.997 362.877 361.01 363.672 357.83 365.54C354.093 367.727 354.093 368.283 352.026 369.118C351.032 369.515 346.024 371.582 343.877 369.356C342.963 368.402 342.844 366.932 342.883 366.017Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M291.566 156.734C291.169 158.563 291.089 160.431 291.169 164.088C291.248 167.427 291.487 174.741 294.587 183.685C296.257 188.534 298.443 194.854 304.048 201.373C304.048 201.373 311.998 210.556 323.764 214.252C327.023 215.286 329.607 215.564 332.31 215.008C335.41 214.411 337.636 212.901 338.869 211.907C339.544 212.98 340.498 214.729 340.975 217.075C341.731 220.692 340.657 222.282 341.89 225.064C342.168 225.7 343.241 227.966 345.706 229.198C348.21 230.431 350.674 229.834 352.821 229.318C354.411 228.92 357.949 227.847 360.731 224.667C361.685 223.554 363.196 221.845 363.235 219.499C363.235 217.949 362.599 216.796 362.321 216.28C361.645 215.047 360.731 211.669 358.903 204.911C357.67 200.38 357.829 196.762 358.108 189.568C358.267 185.911 358.664 181.061 359.817 175.377C360.612 175.814 362.122 176.45 363.911 176.132C367.051 175.576 368.602 172.435 369.317 170.965C369.516 170.567 372.855 163.452 368.8 158.443C368.403 157.966 365.183 154.111 361.566 155.224C358.942 156.019 357.909 158.881 357.75 159.358C356.915 158.364 356.08 157.211 355.246 155.86C353.218 152.481 352.264 149.261 351.827 146.836C343.798 147.194 337.477 146.28 333.145 145.405C324.201 143.577 321.458 141.271 313.588 141.192C308.778 141.112 303.054 141.073 298.244 144.928C293.236 149.023 291.924 155.065 291.566 156.734Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M290.692 160.391C289.976 175.894 294.15 191.953 305.24 203.281C310.09 208.25 316.052 212.185 322.69 214.332C326.109 215.445 329.925 216.359 333.463 215.326C337.12 214.213 340.538 211.748 343.678 209.562C350.794 204.593 357.114 197.955 358.863 189.21C359.022 188.455 357.869 188.137 357.71 188.892C356.16 196.603 350.913 202.685 344.752 207.336C341.85 209.522 338.71 211.629 335.45 213.259C331.634 215.167 327.858 214.69 323.883 213.497C310.527 209.482 300.271 198.392 295.501 185.513C292.56 177.523 291.526 168.937 291.924 160.431C291.924 159.636 290.731 159.636 290.692 160.391Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M338.869 212.702C340.141 216.16 340.975 219.698 341.413 223.395C341.492 224.15 342.685 224.15 342.605 223.395C342.168 219.618 341.333 215.961 340.021 212.424C339.743 211.668 338.59 211.986 338.869 212.702Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M357.631 190.283C357.233 195.013 357.472 199.784 358.346 204.474C358.823 206.899 359.459 209.284 360.254 211.629C361.129 214.173 362.44 216.757 362.281 219.5C362.003 224.031 357.869 227.33 353.854 228.602C349.522 229.993 341.85 229.238 342.406 222.997C342.486 222.242 341.293 222.242 341.214 222.997C340.816 227.609 345.189 230.391 349.323 230.51C353.854 230.59 358.704 228.403 361.486 224.786C365.064 220.056 362.679 215.286 361.089 210.277C358.982 203.838 358.267 197.08 358.823 190.323C358.863 189.528 357.67 189.528 357.631 190.283Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M340.22 212.543C345.825 209.601 350.515 205.269 353.815 199.902C354.212 199.266 353.179 198.63 352.781 199.306C349.561 204.553 345.03 208.687 339.584 211.549C338.948 211.907 339.544 212.901 340.22 212.543Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M340.3 213.259C343.758 211.549 346.62 209.045 349.323 206.302C351.827 203.758 354.133 201.055 355.524 197.716C355.802 197.001 354.65 196.683 354.371 197.398C352.98 200.737 350.516 203.401 348.011 205.945C345.547 208.449 342.883 210.675 339.703 212.225C338.988 212.543 339.584 213.577 340.3 213.259Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M340.657 213.974C347.534 210.158 353.02 204.355 356.279 197.2C356.597 196.524 355.564 195.888 355.246 196.603C352.066 203.56 346.739 209.244 340.061 212.941C339.385 213.298 340.021 214.332 340.657 213.974Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M313.866 165.44C313.945 172.555 314.502 179.63 315.456 186.666C315.496 187.024 316.052 187.223 316.33 187.024C318.715 185.275 320.822 183.287 322.77 181.061C323.287 180.465 322.412 179.63 321.935 180.227C320.067 182.373 318.04 184.321 315.734 186.03C316.012 186.149 316.33 186.269 316.609 186.388C315.655 179.471 315.138 172.475 315.058 165.479C315.058 164.645 313.866 164.645 313.866 165.44Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M304.723 174.661C303.769 174.184 303.014 173.469 302.577 172.475C302.219 171.72 301.543 168.858 303.292 169.335C304.286 169.613 305.081 171.163 305.359 172.038C305.518 172.515 305.677 173.111 305.558 173.628C305.598 174.184 305.32 174.582 304.723 174.78C304.445 174.582 304.246 174.343 304.048 174.065C303.571 173.469 302.736 174.303 303.213 174.9C304.445 176.49 306.353 176.251 306.711 174.144C307.069 171.998 305.956 169.732 304.246 168.5C302.458 167.228 301.066 168.341 300.987 170.368C300.907 172.594 302.219 174.621 304.167 175.615C304.803 176.052 305.399 175.019 304.723 174.661Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M301.861 169.852C302.299 171.919 303.292 173.747 304.763 175.258C305.2 175.735 305.876 175.218 305.757 174.661C305.399 172.753 303.531 171.283 303.69 169.295C303.332 169.454 303.014 169.573 302.656 169.732C303.809 171.084 304.485 172.594 304.803 174.343C305.002 174.105 305.2 173.827 305.359 173.588C304.127 173.588 303.412 172.435 302.855 171.521C302.458 170.885 301.424 171.481 301.822 172.117C302.617 173.429 303.65 174.781 305.359 174.781C305.797 174.781 305.995 174.383 305.916 174.025C305.598 172.078 304.723 170.368 303.491 168.898C303.133 168.46 302.497 168.858 302.458 169.335C302.299 171.521 304.207 172.952 304.564 175.019C304.882 174.82 305.24 174.622 305.558 174.423C304.207 173.032 303.372 171.402 302.935 169.534C302.855 168.778 301.702 169.096 301.861 169.852Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M333.9 171.203C332.946 170.726 332.191 170.011 331.753 169.017C331.396 168.262 330.72 165.4 332.469 165.877C333.463 166.155 334.258 167.705 334.536 168.58C334.695 169.057 334.854 169.653 334.735 170.17C334.774 170.726 334.496 171.124 333.9 171.322C333.622 171.124 333.423 170.885 333.224 170.607C332.747 170.011 331.912 170.845 332.389 171.442C333.622 173.032 335.53 172.793 335.887 170.686C336.245 168.54 335.132 166.274 333.423 165.042C331.634 163.77 330.243 164.883 330.163 166.91C330.084 169.136 331.396 171.163 333.343 172.157C333.979 172.594 334.576 171.561 333.9 171.203Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M330.998 166.353C331.436 168.42 332.429 170.249 333.9 171.759C334.337 172.236 335.013 171.72 334.894 171.163C334.536 169.255 332.668 167.784 332.827 165.797C332.469 165.956 332.151 166.075 331.793 166.234C332.946 167.586 333.622 169.096 333.94 170.845C334.138 170.607 334.337 170.328 334.496 170.09C333.264 170.09 332.549 168.937 331.992 168.023C331.595 167.387 330.561 167.983 330.959 168.619C331.754 169.931 332.787 171.282 334.496 171.282C334.933 171.282 335.132 170.885 335.053 170.527C334.735 168.579 333.86 166.87 332.628 165.399C332.27 164.962 331.634 165.36 331.595 165.837C331.436 168.023 333.344 169.454 333.701 171.521C334.019 171.322 334.377 171.123 334.695 170.925C333.344 169.533 332.509 167.904 332.072 166.035C331.992 165.32 330.839 165.638 330.998 166.353Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M296.614 162.537C297.608 158.721 302.458 157.847 304.763 161.067C305.2 161.703 306.234 161.106 305.797 160.47C302.935 156.456 296.773 157.37 295.501 162.219C295.263 162.975 296.416 163.253 296.614 162.537Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M326.149 157.171C328.573 151.884 334.973 154.468 337.676 157.966C338.153 158.562 339.187 157.966 338.71 157.37C337 155.104 334.615 153.196 331.674 152.958C328.971 152.719 326.268 154.071 325.115 156.575C324.797 157.251 325.831 157.847 326.149 157.171Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M312.117 196.802C309.613 192.191 315.496 192.628 318.398 192.35C321.458 192.072 324.44 191.118 327.103 189.567C329.965 187.938 331.793 185.394 334.297 183.406C335.371 182.532 336.961 181.538 338.431 182.333C339.664 183.009 340.141 184.758 340.26 185.99C340.459 187.858 339.982 189.766 339.306 191.515C337.398 196.643 333.82 200.896 328.534 202.645C322.532 204.593 315.536 202.208 312.117 196.802C311.72 196.166 310.686 196.762 311.084 197.398C313.906 201.89 319.232 204.712 324.519 204.513C329.925 204.354 335.092 201.214 338.074 196.802C340.578 193.065 343.917 185.076 339.544 181.578C337.12 179.63 334.178 181.816 332.389 183.565C329.528 186.387 326.825 188.852 322.929 190.164C320.822 190.879 318.676 191.157 316.45 191.237C314.979 191.277 313.469 191.277 312.117 191.992C309.772 193.264 309.931 195.331 311.084 197.398C311.441 198.074 312.475 197.478 312.117 196.802Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M311.441 196.881C322.412 197.597 332.906 192.231 338.511 182.73C338.908 182.055 337.875 181.458 337.477 182.134C332.071 191.316 322.015 196.404 311.441 195.689C310.686 195.649 310.686 196.842 311.441 196.881Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M356.955 192.986C354.212 201.651 348.17 208.886 340.181 213.258C339.505 213.616 340.101 214.65 340.777 214.292C349.005 209.76 355.246 202.287 358.068 193.304C358.307 192.588 357.194 192.27 356.955 192.986Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M358.148 160.272C358.585 157.092 361.884 155.581 364.826 156.575C367.767 157.608 369.397 160.47 369.794 163.412C370.231 166.393 369.595 169.573 368.085 172.197C366.535 174.86 363.037 177.325 360.175 174.781C359.618 174.264 358.744 175.098 359.34 175.615C362.083 178.08 365.899 176.927 368.085 174.303C370.629 171.243 371.623 166.751 370.947 162.856C370.311 159.198 367.886 155.78 364.031 155.104C360.811 154.548 357.472 156.575 356.995 159.914C356.915 160.709 358.068 161.027 358.148 160.272Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M349.323 156.058C349.522 157.132 349.681 159.318 351.271 160.272C352.94 161.266 355.325 160.391 357.114 159.517C357.193 159.318 358.585 155.78 362.083 155.184C364.905 154.707 367.012 156.456 367.687 156.973C370.112 158.96 370.589 161.743 370.867 163.333C371.424 166.433 370.629 168.858 370.231 170.249C369.874 171.442 369.397 172.873 368.125 174.343C367.608 174.94 366.733 175.933 365.342 176.53C362.917 177.523 360.493 176.53 359.777 176.212C359.062 176.808 358.108 177.682 357.313 178.954C357.313 178.954 357.233 179.074 357.154 179.193C355.921 181.26 356.995 185.831 357.154 188.375C357.233 189.886 357.074 192.112 355.762 194.894C357.233 195.57 362.043 197.518 367.846 196.007C369.516 195.57 373.809 194.417 376.91 190.283C380.368 185.672 379.851 180.624 379.692 179.431C381.679 177.643 382.673 175.854 383.15 174.741C383.468 174.025 385.615 168.977 383.468 166.751C382.594 165.877 381.838 166.234 381.123 165.479C380.169 164.525 379.891 162.22 382.792 156.376C383.428 156.376 383.786 156.178 384.025 156.019C385.138 155.104 384.701 152.362 382.872 149.221C385.337 147.87 387.801 146.518 390.266 145.207C388.357 145.048 385.615 144.571 383.11 142.822C379.414 140.278 378.937 136.899 376.472 133.48C374.564 130.817 371.146 127.597 364.348 125.451C365.899 124.378 368.085 122.708 370.351 120.363C372.02 118.614 375.677 114.4 374.922 113.486C374.405 112.89 372.259 114.162 369.595 115.156C364.666 116.944 360.532 116.666 354.133 116.189C345.507 115.513 344.593 114.003 337.398 113.128C332.668 112.532 323.724 111.538 313.786 115.036C304.445 118.336 298.801 124.02 296.336 126.524C294.07 128.83 288.426 135.11 285.405 144.65C283.934 149.261 282.543 154.031 285.007 158.324C286.558 160.987 288.982 162.418 290.612 163.174C290.453 160.55 290.493 155.462 293.593 150.652C298.204 143.537 306.433 141.907 312.475 140.715C317.284 139.761 328.255 137.614 337.994 143.656C341.651 145.922 348.289 150.016 349.323 156.058Z",
                fill: "#5222D0"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M311.521 196.683C312.037 197.677 313.071 199.227 314.82 200.658C315.217 200.976 317.086 202.447 319.948 203.242C324.4 204.434 328.295 203.202 329.806 202.606C334.417 200.777 336.722 197.438 337.676 195.967C338.71 194.417 340.657 191.476 340.538 187.381C340.459 184.917 339.664 183.009 339.107 181.896C338.71 182.293 338.153 182.89 337.477 183.605C335.172 186.07 333.701 187.938 333.224 188.534C330.322 191.992 325.95 193.94 324.559 194.536C319.312 196.842 314.422 196.921 311.521 196.683Z",
                fill: "black"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M295.78 128.352C293.832 130.3 292.6 132.327 291.884 133.56C289.499 137.574 288.665 141.072 288.068 143.577C287.353 146.717 286.598 151.447 287.075 157.29C287.194 158.682 288.028 159.795 289.181 160.152C289.976 160.391 290.652 160.192 290.97 160.073C291.208 158.562 291.805 156.297 293.275 153.912C295.859 149.658 299.596 147.671 301.782 146.558C306.234 144.292 310.169 143.934 312.793 143.696C318.795 143.219 323.287 144.491 324.281 144.769C328.534 146.001 331.634 147.989 333.701 149.301C337.557 151.725 338.114 152.958 341.691 154.508C345.666 156.257 348.091 156.138 348.886 156.058C350.118 155.979 352.384 155.78 354.491 154.11C356.399 152.6 357.114 150.652 357.392 149.778C361.129 151.407 363.872 153.117 365.7 154.389C370.033 157.37 372.458 160.113 378.301 163.412C379.295 163.968 380.169 164.406 380.686 164.684C381.322 162.06 381.958 159.437 382.594 156.853C381.759 156.257 380.527 155.382 378.977 154.309C373.372 150.414 369.556 147.79 364.587 145.206C363.156 144.451 361.089 143.457 358.466 142.344C359.022 140.198 359.738 136.263 358.346 131.85C357.83 130.181 356.995 127.637 354.65 125.57C353.179 124.298 351.708 123.702 350.834 123.423C340.856 119.846 330.243 119.687 330.243 119.687C324.44 119.607 316.649 119.568 307.427 122.231C301.742 123.861 298.403 125.729 295.78 128.352Z",
                fill: "white"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M291.526 159.993C294.309 144.809 315.297 140.874 327.421 146.359C330.76 147.87 333.9 149.778 337 151.686C339.703 153.355 342.486 155.064 345.586 155.82C350.158 156.933 355.842 155.502 357.472 150.652C357.71 149.937 356.557 149.619 356.319 150.334C355.206 153.673 351.549 155.184 348.25 155.064C344.553 154.905 341.254 152.878 338.193 151.05C332.429 147.552 326.467 143.656 319.55 142.98C307.943 141.867 292.798 146.757 290.413 159.715C290.215 160.391 291.367 160.749 291.526 159.993Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M290.334 158.96C289.738 158.841 289.142 158.722 288.506 158.602C288.386 158.284 288.227 157.966 288.108 157.648C287.949 157.251 287.87 156.814 287.79 156.376C287.631 155.462 287.591 154.508 287.552 153.554C287.512 151.726 287.591 149.857 287.75 148.029C288.029 144.094 288.744 140.158 290.453 136.581C293.594 129.943 299.954 125.491 306.751 123.106C314.264 120.482 322.452 119.926 330.362 120.124C337.955 120.323 346.501 120.999 353.099 125.093C357.472 127.796 357.989 132.964 358.108 137.734C358.227 142.345 357.512 146.876 356.041 151.209C355.802 151.924 356.955 152.242 357.194 151.527C358.704 147.075 359.459 142.424 359.3 137.734C359.181 133.918 358.943 128.909 356.16 126.007C353.338 123.026 348.767 121.555 344.871 120.641C340.26 119.568 335.45 119.131 330.72 118.972C313.985 118.415 292.083 122.271 287.552 141.351C286.439 145.922 285.922 151.209 286.518 155.899C286.717 157.37 287.114 159.318 288.386 160.272C289.42 161.027 290.851 160.789 291.368 159.596C291.686 158.881 290.652 158.284 290.334 158.96Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M288.704 157.966C291.447 147.83 300.351 140.158 310.567 138.33C316.171 137.336 322.015 138.012 327.301 140.079C332.787 142.185 336.762 145.842 341.055 149.738C344.911 153.276 350.118 156.336 355.365 153.912C356.041 153.594 355.444 152.56 354.769 152.878C348.17 155.939 342.645 149.46 338.352 145.524C334.456 141.987 329.766 139.363 324.678 137.932C314.74 135.15 304.048 137.217 296.217 144.014C292.083 147.631 289.022 152.361 287.591 157.648C287.353 158.403 288.505 158.721 288.704 157.966Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M357.074 149.698C365.064 154.548 372.855 159.715 380.487 165.081C381.123 165.519 381.719 164.485 381.083 164.048C373.451 158.642 365.66 153.514 357.671 148.665C357.035 148.267 356.438 149.301 357.074 149.698Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M358.545 142.305C366.654 146.836 374.524 151.805 382.077 157.211C382.713 157.648 383.309 156.615 382.673 156.177C375.081 150.771 367.25 145.803 359.141 141.271C358.465 140.874 357.869 141.907 358.545 142.305Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M381.838 156.456C381.004 159 380.447 161.544 380.129 164.207C380.05 164.962 381.242 164.962 381.322 164.207C381.6 161.663 382.156 159.198 382.991 156.774C383.23 156.058 382.077 155.74 381.838 156.456Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M309.692 138.529C316.132 132.367 322.611 126.286 329.17 120.204C329.726 119.687 328.891 118.852 328.335 119.369C321.816 125.411 315.297 131.533 308.857 137.694C308.301 138.211 309.136 139.045 309.692 138.529Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M325.831 139.045C331.634 133.281 337.438 127.518 343.241 121.714C343.798 121.158 342.923 120.323 342.406 120.879C336.603 126.643 330.799 132.407 324.996 138.21C324.439 138.767 325.274 139.602 325.831 139.045Z",
                fill: "#161616"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.15",
                d:
                  "M299.953 147.234C299.755 145.644 299.556 144.094 299.357 142.504C301.225 141.232 304.326 139.403 308.42 138.37C317.205 136.104 324.598 138.886 327.977 140.158C330.521 141.112 333.542 142.225 336.682 144.889C339.107 146.956 339.067 147.83 342.009 150.215C344.712 152.441 347.335 154.508 350.714 154.349C352.741 154.27 354.331 153.395 355.246 152.759C356.12 151.527 356.955 150.255 357.829 149.023C358.744 149.142 364.468 150.016 367.091 154.747C367.489 155.422 367.369 155.701 368.284 158.284C369.913 162.935 370.351 163.054 370.669 164.605C370.748 164.962 371.583 170.011 368.085 173.31C365.382 175.894 361.765 175.735 360.97 175.695C359.817 178.875 359.618 181.618 359.578 183.406C359.578 186.149 359.539 189.488 361.765 192.469C362.56 193.543 364.348 195.967 367.489 196.206C371.265 196.484 373.769 193.344 374.008 193.066C368.761 194.059 363.474 195.053 358.227 196.007C358.187 200.221 358.823 203.48 359.419 205.666C360.85 211.072 362.917 213.418 362.758 217.909C362.679 220.692 361.725 222.958 360.97 224.428C358.545 217.631 356.08 210.874 353.656 204.076C351.032 206.104 348.409 208.171 345.745 210.198C346.779 207.972 347.852 205.706 348.886 203.48C350.237 197.597 350.515 192.509 350.476 188.693C350.396 183.088 348.886 177.523 345.944 166.393C344.155 159.715 342.923 156.138 339.624 153.157C338.471 152.123 337.159 151.368 334.496 149.818C328.653 146.439 325.751 144.73 322.253 143.895C314.979 142.186 308.539 144.133 305.479 145.087C303.133 145.763 301.265 146.558 299.953 147.234Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.13",
                d:
                  "M313.786 165.161C312.912 168.977 312.157 173.191 311.6 177.802C311.322 180.346 311.123 182.77 311.004 185.116C312.713 185.513 314.422 185.911 316.132 186.308C315.337 179.272 314.581 172.237 313.786 165.161Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.09",
                d:
                  "M356.08 170.646C355.564 173.469 354.888 176.41 354.013 179.471C349.959 193.503 343.201 204.354 337.04 212.185C337.835 211.827 350.873 205.626 355.047 196.245C356.16 193.781 357.074 191.714 357.114 188.812C357.193 185.076 355.802 183.645 356.756 180.862C357.71 178.199 359.578 177.841 359.698 175.854C359.817 173.747 357.829 171.918 356.08 170.646Z",
                fill: "#606060"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                opacity: "0.1",
                d:
                  "M302.935 143.1C302.696 144.809 304.644 146.359 305.638 147.154C311.203 151.646 316.251 147.671 326.069 149.659C334.377 151.368 335.967 155.303 344.553 155.422C347.574 155.462 350.039 155.025 351.668 154.667C350.516 154.429 348.767 153.912 346.859 152.918C343.559 151.209 341.612 149.062 340.896 148.307C337.04 144.213 330.124 140.039 325.115 138.489C315.377 135.428 303.491 139.244 302.935 143.1Z",
                fill: "#606060"
              }
            })
          ]
        )
      ])
    ]),
    _vm._v(" "),
    _c("form", { staticClass: "form-steps" }, [
      _vm.activeStep === 1
        ? _c("div", { staticClass: "form-step" }, [
            _c("div", { staticClass: "summarize__file" }, [
              _c(
                "form",
                {
                  staticClass: "dropzone",
                  attrs: {
                    id: "upload-widget",
                    method: "post",
                    action: "/upload"
                  }
                },
                [
                  _c("input", {
                    attrs: { name: "file", type: "file", accept: "image/*" },
                    on: { change: _vm.previewImage }
                  }),
                  _vm._v(" "),
                  _vm._m(0),
                  _vm._v(" "),
                  _c("small", [_vm._v(" or ")]),
                  _vm._v(" "),
                  _c("div", { staticClass: "button__container" }, [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [_vm._v("paste text")]
                    )
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "summarize__bottom" }, [
                    _c(
                      "svg",
                      {
                        attrs: {
                          fill: "none",
                          xmlns: "http://www.w3.org/2000/svg"
                        }
                      },
                      [
                        _c("path", {
                          attrs: {
                            "fill-rule": "evenodd",
                            "clip-rule": "evenodd",
                            d:
                              "M12.9.904c-.508-.45-1.33-.448-1.833 0L2.963 8.115c-.979.861.489 2.152 1.468 1.29l6.161-5.417c.205-.18.37-.123.37.128v16.51c0 .504.465.912 1.038.912s1.038-.408 1.038-.912V4.116c0-.25.162-.311.37-.128l6.162 5.418c.978.86 2.446-.43 1.467-1.29L12.9.903zm-6.1 11.26H3.16c-1.437 0-2.6 1.023-2.6 2.285v15.509c0 1.262 1.164 2.285 2.603 2.285h17.674c1.438 0 2.603-1.022 2.603-2.285V14.449c0-1.26-1.166-2.284-2.6-2.284H17.2c-.574 0-1.04.408-1.04.912 0 .505.466.913 1.04.913h3.64c.285 0 .52.206.52.46v15.508c0 .255-.233.46-.523.46H3.163c-.29 0-.523-.206-.523-.46V14.449c0-.255.233-.459.52-.459H6.8c.574 0 1.04-.409 1.04-.913s-.466-.912-1.04-.912z",
                            fill: "#009051"
                          }
                        })
                      ]
                    ),
                    _vm._v(" "),
                    _c("p", { staticClass: "summarize__text-gray" }, [
                      _vm._v(
                        "\n              select a file from your computer\n            "
                      )
                    ])
                  ])
                ]
              )
            ]),
            _vm._v(" "),
            _vm._m(1)
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 2
        ? _c("div", { staticClass: "form-step" }, [
            _vm._m(2),
            _vm._v(" "),
            _c("div", { staticClass: "form-step__block" }, [
              _vm._m(3),
              _vm._v(" "),
              _c("div", { staticClass: "form-step__btns" }, [
                _c("div", { staticClass: "form-step__edit" }, [
                  _c("span", [_vm._v("ready to summarize?")]),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "form-step__btn",
                      attrs: {
                        type: "button",
                        "data-toggle": "modal",
                        "data-target": "#editText"
                      }
                    },
                    [
                      _vm._v("\n              edit text\n              "),
                      _c(
                        "svg",
                        {
                          attrs: {
                            width: "24",
                            height: "24",
                            viewBox: "0 0 24 24",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                          }
                        },
                        [
                          _c("path", {
                            attrs: {
                              d:
                                "M23.3662 3.23185L20.7638 0.638516C19.874 -0.241484 18.429 -0.241484 17.5459 0.638516L2.72104 15.4052C2.69428 15.4318 2.67421 15.4518 2.65414 15.4785C2.64745 15.4852 2.64745 15.4918 2.64076 15.4985C2.62738 15.5185 2.60731 15.5385 2.59393 15.5652C2.58724 15.5718 2.58724 15.5785 2.58055 15.5852C2.56717 15.6052 2.55379 15.6252 2.5471 15.6518C2.54041 15.6585 2.54041 15.6718 2.53372 15.6785C2.52703 15.6985 2.51365 15.7185 2.50696 15.7452C2.50696 15.7518 2.50027 15.7518 2.50027 15.7585L0.0183103 22.7052C-0.102108 23.0452 -0.0151396 23.4252 0.239078 23.6785C0.419706 23.8585 0.660543 23.9518 0.901381 23.9518C1.00842 23.9518 1.11546 23.9318 1.21581 23.8985L8.1934 21.4318C8.20009 21.4318 8.20009 21.4252 8.20678 21.4252C8.22685 21.4185 8.24692 21.4052 8.27368 21.3985C8.28037 21.3918 8.29375 21.3918 8.30044 21.3852C8.32051 21.3718 8.34058 21.3652 8.36734 21.3518C8.37403 21.3452 8.38072 21.3452 8.38741 21.3385C8.40748 21.3252 8.42755 21.3118 8.44762 21.2918C8.45431 21.2852 8.461 21.2852 8.46769 21.2785C8.49445 21.2585 8.52121 21.2385 8.54128 21.2118L20.8909 8.90518L23.3662 6.43852C24.2559 5.55185 24.2559 4.11852 23.3662 3.23185ZM2.44675 21.4852L3.77136 17.7785L6.16635 20.1652L2.44675 21.4852ZM7.87898 19.2252L4.70795 16.0718L15.733 5.09852L18.904 8.25852L7.87898 19.2252ZM22.0416 5.10518L20.2286 6.91852L17.0576 3.75852L18.8705 1.95852C19.0244 1.80518 19.2786 1.80518 19.4392 1.95852L22.0416 4.55185C22.1419 4.65185 22.162 4.77185 22.162 4.83185C22.162 4.89185 22.1486 5.00518 22.0416 5.10518Z",
                              fill: "#009051"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "button__container form-button__container" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              yes, summarize now\n            "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "button button-black",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.prev()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              no, go back and reupload\n            "
                        )
                      ]
                    )
                  ]
                )
              ])
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 3
        ? _c("div", { staticClass: "form-step  form-img" }, [
            _vm.imageData.length > 0
              ? _c("div", { staticClass: "form-step__img" }, [
                  _c("img", {
                    staticClass: "preview",
                    attrs: { src: _vm.imageData }
                  })
                ])
              : _vm._e(),
            _vm._v(" "),
            _c("div", { staticClass: "form-step__block" }, [
              _vm._m(4),
              _vm._v(" "),
              _c("div", { staticClass: "form-step__btns" }, [
                _c("div", { staticClass: "form-step__edit" }, [
                  _c("span", [_vm._v("ready to summarize?")]),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "form-step__btn",
                      attrs: {
                        type: "button",
                        "data-toggle": "modal",
                        "data-target": "#editText"
                      }
                    },
                    [
                      _vm._v("\n              edit text\n              "),
                      _c(
                        "svg",
                        {
                          attrs: {
                            width: "24",
                            height: "24",
                            viewBox: "0 0 24 24",
                            fill: "none",
                            xmlns: "http://www.w3.org/2000/svg"
                          }
                        },
                        [
                          _c("path", {
                            attrs: {
                              d:
                                "M23.3662 3.23185L20.7638 0.638516C19.874 -0.241484 18.429 -0.241484 17.5459 0.638516L2.72104 15.4052C2.69428 15.4318 2.67421 15.4518 2.65414 15.4785C2.64745 15.4852 2.64745 15.4918 2.64076 15.4985C2.62738 15.5185 2.60731 15.5385 2.59393 15.5652C2.58724 15.5718 2.58724 15.5785 2.58055 15.5852C2.56717 15.6052 2.55379 15.6252 2.5471 15.6518C2.54041 15.6585 2.54041 15.6718 2.53372 15.6785C2.52703 15.6985 2.51365 15.7185 2.50696 15.7452C2.50696 15.7518 2.50027 15.7518 2.50027 15.7585L0.0183103 22.7052C-0.102108 23.0452 -0.0151396 23.4252 0.239078 23.6785C0.419706 23.8585 0.660543 23.9518 0.901381 23.9518C1.00842 23.9518 1.11546 23.9318 1.21581 23.8985L8.1934 21.4318C8.20009 21.4318 8.20009 21.4252 8.20678 21.4252C8.22685 21.4185 8.24692 21.4052 8.27368 21.3985C8.28037 21.3918 8.29375 21.3918 8.30044 21.3852C8.32051 21.3718 8.34058 21.3652 8.36734 21.3518C8.37403 21.3452 8.38072 21.3452 8.38741 21.3385C8.40748 21.3252 8.42755 21.3118 8.44762 21.2918C8.45431 21.2852 8.461 21.2852 8.46769 21.2785C8.49445 21.2585 8.52121 21.2385 8.54128 21.2118L20.8909 8.90518L23.3662 6.43852C24.2559 5.55185 24.2559 4.11852 23.3662 3.23185ZM2.44675 21.4852L3.77136 17.7785L6.16635 20.1652L2.44675 21.4852ZM7.87898 19.2252L4.70795 16.0718L15.733 5.09852L18.904 8.25852L7.87898 19.2252ZM22.0416 5.10518L20.2286 6.91852L17.0576 3.75852L18.8705 1.95852C19.0244 1.80518 19.2786 1.80518 19.4392 1.95852L22.0416 4.55185C22.1419 4.65185 22.162 4.77185 22.162 4.83185C22.162 4.89185 22.1486 5.00518 22.0416 5.10518Z",
                              fill: "#009051"
                            }
                          })
                        ]
                      )
                    ]
                  )
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "button__container form-button__container" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              yes, summarize now\n            "
                        )
                      ]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "button button-black",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.prev()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              no, go back and reupload\n            "
                        )
                      ]
                    )
                  ]
                )
              ])
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 4
        ? _c("div", { staticClass: "step-log form-step" }, [
            _c("div", { staticClass: "step-log__title" }, [
              _vm._v("summary created!")
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "step-log__row" }, [
              _vm._m(5),
              _vm._v(" "),
              _c("div", { staticClass: "step-log__block" }, [
                _vm._m(6),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "button__container",
                    on: {
                      click: function($event) {
                        $event.preventDefault()
                        return _vm.next()
                      }
                    }
                  },
                  [
                    _c(
                      "a",
                      { staticClass: "button", attrs: { href: "singup.html" } },
                      [_vm._v(" get started! ")]
                    )
                  ]
                ),
                _vm._v(" "),
                _vm._m(7)
              ])
            ])
          ])
        : _vm._e(),
      _vm._v(" "),
      _vm.activeStep === 5
        ? _c("div", { staticClass: "form-step step-log" }, [
            _c("div", { staticClass: "step-log__title" }, [
              _vm._v(
                "\n        summary created now save it and start studying!\n      "
              )
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "step__row" }, [
              _vm._m(8),
              _vm._v(" "),
              _c("div", { staticClass: "form-step__finish" }, [
                _c("h5", { staticClass: "form-step__finish-title" }, [
                  _vm._v(
                    "\n            ready to name and save summary?\n          "
                  )
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-form__group" }, [
                  _c(
                    "label",
                    {
                      staticClass: "step-form__label",
                      attrs: { for: "title" }
                    },
                    [_vm._v("book title*")]
                  ),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model.trim",
                        value: _vm.info.title,
                        expression: "info.title",
                        modifiers: { trim: true }
                      }
                    ],
                    staticClass: "step__input form-input",
                    attrs: { type: "text", id: "title" },
                    domProps: { value: _vm.info.title },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(_vm.info, "title", $event.target.value.trim())
                      },
                      blur: function($event) {
                        return _vm.$forceUpdate()
                      }
                    }
                  })
                ]),
                _vm._v(" "),
                _vm._m(9),
                _vm._v(" "),
                _c("p", { staticClass: "step-form__label" }, [
                  _vm._v("chapter number and name*")
                ]),
                _vm._v(" "),
                _vm._m(10),
                _vm._v(" "),
                _vm._m(11),
                _vm._v(" "),
                _vm._m(12),
                _vm._v(" "),
                _vm._m(13),
                _vm._v(" "),
                _vm._m(14),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "button__container form-button__container" },
                  [
                    _c(
                      "button",
                      {
                        staticClass: "button",
                        attrs: { type: "button", disabled: !_vm.formReady },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.next()
                          }
                        }
                      },
                      [_vm._v("\n              yes, save now\n            ")]
                    ),
                    _vm._v(" "),
                    _c(
                      "button",
                      {
                        staticClass: "button button-black",
                        attrs: { type: "button" },
                        on: {
                          click: function($event) {
                            $event.preventDefault()
                            return _vm.prev()
                          }
                        }
                      },
                      [
                        _vm._v(
                          "\n              no, go back and reupload\n            "
                        )
                      ]
                    )
                  ]
                )
              ])
            ])
          ])
        : _vm._e()
    ]),
    _vm._v(" "),
    _c(
      "div",
      {
        staticClass: "modal fade modal__form-edit",
        attrs: {
          id: "editText",
          tabindex: "-1",
          role: "dialog",
          "aria-hidden": "true"
        }
      },
      [
        _c(
          "div",
          {
            staticClass: "modal-dialog modal-dialog-centered",
            attrs: { role: "document" }
          },
          [
            _c("div", { staticClass: "modal-content" }, [
              _c(
                "button",
                {
                  staticClass: "close",
                  attrs: { type: "button", "data-dismiss": "modal" }
                },
                [
                  _c(
                    "svg",
                    {
                      attrs: {
                        width: "26",
                        height: "26",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          d:
                            "M15.73 13.235l9.048-9.211a1.99 1.99 0 000-2.78 1.906 1.906 0 00-2.73 0L13 10.456 3.952 1.244a1.906 1.906 0 00-2.73 0 1.99 1.99 0 000 2.78l9.048 9.211-9.048 9.212a1.99 1.99 0 000 2.78c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582L13 16.015l9.048 9.212c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582a1.99 1.99 0 000-2.78l-9.022-9.212z",
                          fill: "#009051"
                        }
                      })
                    ]
                  )
                ]
              ),
              _vm._v(" "),
              _c("h5", { staticClass: "filter__title" }, [
                _vm._v("edit summary")
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "modal-body" }, [
                _c("textarea", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.inputValue,
                      expression: "inputValue"
                    }
                  ],
                  staticClass: "form-step__prg",
                  attrs: { name: "texts" },
                  domProps: { value: _vm.inputValue },
                  on: {
                    input: function($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.inputValue = $event.target.value
                    }
                  }
                })
              ]),
              _vm._v(" "),
              _vm._m(15)
            ])
          ]
        )
      ]
    )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("p", [_vm._v("drag your jpeg "), _c("br"), _vm._v("or png here")])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-step__block" }, [
      _c("div", [
        _c("div", { staticClass: "form-step__title" }, [
          _vm._v(
            "\n            upload a file or paste in text to start our AI summarization\n            engines! It’s free.\n          "
          )
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "form-step__prg" }, [
          _c("p", [
            _vm._v(
              "\n              Our learning platform allows you to summarize your academic\n              materials for less reading time!\n            "
            )
          ]),
          _vm._v(" "),
          _c("p", [
            _vm._v(
              "\n              From the text you upload, our AI creates a Study Set complete\n              with the Summary plus Flashcards and a Quiz for you to study\n              with. We do that by using an image a book, an academic journal\n              pdf or anything really, and our engines do the rest!\n            "
            )
          ]),
          _vm._v(" "),
          _c("p", [_vm._v("Upload a file to see for yourself.")])
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-step__block-text" }, [
      _c("div", { staticClass: "form-step__prg" }, [
        _vm._v(
          "\n          Historian Lauren Ristvet defines agriculture as the “‘domestication’\n          of plants… causing it to change genetically from its wild ancestor\n          in ways [that make] it more useful to human consum-ers.”12 She and\n          hundreds of other scholars from Hobbes to Marx have pointed to the\n          Neolithic Revolution, that is, the move from a hunter-gatherer world\n          to an agricultural one, as the root of what we today refer to as\n          civilization. Without agriculture we don’t have empires, written\n          language, factories, universities, or railroads. Despite its\n          importance, much remains unclear about why and where agriculture\n          began. Instead, scholars hold a handful of well-regarded theories\n          about the roots (pun intended) of agriculture.\n        "
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "form-step__title" }, [
        _vm._v(
          "\n            upload a file or paste in text to start our AI summarization\n            engines! It’s free.\n          "
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "form-step__prg" }, [
        _c("p", [
          _vm._v(
            "\n              Our learning platform allows you to summarize your academic\n              materials for less reading time!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "\n              From the text you upload, our AI creates a Study Set complete\n              with the Summary plus Flashcards and a Quiz for you to study\n              with. We do that by using an image a book, an academic journal\n              pdf or anything really, and our engines do the rest!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("Upload a file to see for yourself.")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", [
      _c("div", { staticClass: "form-step__title" }, [
        _vm._v(
          "\n            upload a file or paste in text to start our AI summarization\n            engines! It’s free.\n          "
        )
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "form-step__prg" }, [
        _c("p", [
          _vm._v(
            "\n              Our learning platform allows you to summarize your academic\n              materials for less reading time!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "\n              From the text you upload, our AI creates a Study Set complete\n              with the Summary plus Flashcards and a Quiz for you to study\n              with. We do that by using an image a book, an academic journal\n              pdf or anything really, and our engines do the rest!\n            "
          )
        ]),
        _vm._v(" "),
        _c("p", [_vm._v("Upload a file to see for yourself.")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-log__prg" }, [
      _c("div", { staticClass: "step-log__prg-back" }),
      _vm._v(" "),
      _c("b", [_vm._v(" summary ")]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus\n            faucibus lectus phasellus etiam aliquet malesuada. Venenatis,\n            aenean tellus facilisi amet, id pretium phasellus nullam id.\n            Ornare sagittis, rutrum eu duis. Feugiat et lectus enim id. Proin\n            imperdiet adipiscing rhoncus consectetur non. Id risus aliquet\n            lacus ultrices imperdiet at ut amet laoreet. Pellentesque\n            vestibulum, convallis in blandit. Vulputate convallis netus id\n            arcu enim lectus vestibulum. Egestas massa pretium sit lacus massa\n            porta.\n          "
        )
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cursus\n            faucibus lectus phasellus etiam aliquet malesuada. Venenatis,\n            aenean tellus facilisi amet, id pretium phasellus nullam id.\n            Ornare sagittis, rutrum eu duis. Feugiat et lectus enim id. Proin\n            imperdiet adipiscing rhoncus consectetur non. Id risus aliquet\n            lacus ultrices imperdiet at ut amet laoreet. Pellentesque\n            vestibulum, convallis in blandit. Vulputate convallis netus id\n            arcu enim lectus vestibulum. Egestas massa pretium sit lacus massa\n            porta\n          "
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("h3", { staticClass: "step-log__title" }, [
      _c("b", [_vm._v(" You’re almost there! ")]),
      _vm._v(
        "\n            Create an account for FREE and get access to our suite of\n            features!\n          "
      )
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "summarize__link" }, [
      _vm._v("\n            Already have an account? "),
      _c("a", { attrs: { href: "login.html" } }, [_vm._v("LOG IN")]),
      _vm._v(" now.\n              :)\n          ")
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-log__prg" }, [
      _c("b", [_vm._v(" your summary ")]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "\n            Agriculture is the process of domesticating plants - the Neolithic\n            Revolution, also called the Agricultural Revolution, was when\n            humans first started to grow their own food. This meant that\n            people didn’t have to hunt and gather their food anymore. Instead,\n            they could grow it themselves on farms. This was the beginning of\n            civilization. The Ice Age was a period of time when the Earth was\n            colder. People could not grow crops during the Ice Age, but they\n            could after the Ice Age ended. Ristvet says the warming trend of\n            the Holocene made it possible for people to grow crops, because it\n            made the land warmer and more stable. The warming also changed the\n            habitats of the animals people hunted for food. She says that when\n            the Ice Age ended, the animals that people hunted for food started\n            to die out. This made it harder for people to get food. It also\n            made sense for people to grow their own food. In the past, humans\n            used to live as hunter-gatherers. But then people in some parts of\n            the world started growing their own food on farms. They grew\n            wheat, rye, barley and millet in West Asia, and they grew potatoes\n            in the Andes. Then other people saw how good it was to grow their\n            own food, and they started farming too. This shows people were\n            ready to farm when the climate was right.\n          "
        )
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__group" }, [
      _c(
        "label",
        { staticClass: "step-form__label", attrs: { for: "author" } },
        [_vm._v("author(s)*")]
      ),
      _vm._v(" "),
      _c("input", {
        staticClass: "step__input form-input",
        attrs: { type: "text", id: "author" }
      })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__groups" }, [
      _c("div", { staticClass: "step-form__group step-form__group-number" }, [
        _c("input", {
          staticClass: "step__input form-input",
          attrs: { type: "number", id: "numb" }
        }),
        _vm._v(" "),
        _c("small", { staticClass: "step-form__muted" }, [_vm._v("number")])
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "step-form__group" }, [
        _c("input", {
          staticClass: "step__input form-input",
          attrs: { type: "text", id: "name" }
        }),
        _vm._v(" "),
        _c("small", { staticClass: "step-form__muted" }, [_vm._v("name")])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__group" }, [
      _c("label", { staticClass: "step-form__label" }, [_vm._v("curriculum*")]),
      _vm._v(" "),
      _c("div", { staticClass: "step__select" }, [
        _c("span", { staticClass: "myarrow" }),
        _vm._v(" "),
        _c("select", [
          _c("option", [_vm._v("Кофе")]),
          _vm._v(" "),
          _c("option", [_vm._v("Чай")]),
          _vm._v(" "),
          _c("option", [_vm._v("Вода")]),
          _vm._v(" "),
          _c("option", {
            attrs: { value: "", hidden: "", disabled: "", selected: "" }
          })
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "step-form__group" }, [
      _c("label", { staticClass: "step-form__label" }, [_vm._v("topic*")]),
      _vm._v(" "),
      _c("div", { staticClass: "step__select" }, [
        _c("span", { staticClass: "myarrow" }),
        _vm._v(" "),
        _c("select", [
          _c("option", [_vm._v("Кофе")]),
          _vm._v(" "),
          _c("option", [_vm._v("Чай")]),
          _vm._v(" "),
          _c("option", [_vm._v("Вода")]),
          _vm._v(" "),
          _c("option", {
            attrs: { value: "", hidden: "", disabled: "", selected: "" }
          })
        ])
      ])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "rating__subtitle" }, [
      _vm._v("\n            how is our algorithm doing?*\n            "),
      _c("span", [_vm._v(" five star rating ")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "rating-area" }, [
      _c("input", {
        attrs: { type: "radio", id: "star-5", name: "rating", value: "5" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-5", title: "Оценка «5»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-4", name: "rating", value: "4" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-4", title: "Оценка «4»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-3", name: "rating", value: "3" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-3", title: "Оценка «3»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-2", name: "rating", value: "2" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-2", title: "Оценка «2»" } }),
      _vm._v(" "),
      _c("input", {
        attrs: { type: "radio", id: "star-1", name: "rating", value: "1" }
      }),
      _vm._v(" "),
      _c("label", { attrs: { for: "star-1", title: "Оценка «1»" } })
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "button__container" }, [
      _c(
        "button",
        {
          staticClass: "button",
          attrs: { type: "button", "data-dismiss": "modal" }
        },
        [_vm._v("\n            save changes\n          ")]
      ),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "button button-black",
          attrs: { type: "button", "data-dismiss": "modal" }
        },
        [_vm._v("\n            cancel\n          ")]
      )
    ])
  }
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Studyset.vue?vue&type=template&id=7fe01f76&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/js/components/Studyset.vue?vue&type=template&id=7fe01f76& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "container" }, [
    _c("h4", { staticClass: "studyset__subtitle" }, [
      _vm._v("\n                  Study set:\n               ")
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "studyset__title-block history" }, [
      _c("div", { staticClass: "studyset__title-icon" }, [
        _c(
          "svg",
          {
            attrs: {
              width: "64",
              height: "91",
              fill: "none",
              xmlns: "http://www.w3.org/2000/svg"
            }
          },
          [
            _c("path", {
              attrs: {
                d:
                  "M6.95 53.715c.019.018.032.04.051.056a27.13 27.13 0 005.475 4.894l-2.702 4.652a31.958 31.958 0 01-2.701-1.949A1.8 1.8 0 004.15 62.94a1.789 1.789 0 00.652 1.207 35.564 35.564 0 003.172 2.27l-1.794 3.09a1.787 1.787 0 00.654 2.448A1.8 1.8 0 009.29 71.3l1.8-3.098a36.101 36.101 0 0014.614 3.915v4.053L15.41 78.736a5.384 5.384 0 00-2.942 1.905 5.355 5.355 0 00-1.14 3.308v.785a5.372 5.372 0 001.58 3.799 5.405 5.405 0 003.81 1.575h21.563a5.405 5.405 0 003.81-1.575 5.372 5.372 0 001.58-3.799v-.785a5.355 5.355 0 00-1.14-3.309 5.383 5.383 0 00-2.942-1.904L29.297 76.17v-4.067a35.967 35.967 0 0020.776-7.888 35.783 35.783 0 0012.134-18.571 35.689 35.689 0 00-1.16-22.133 35.815 35.815 0 00-14.01-17.21L48.82 3.23A1.788 1.788 0 0047.502.558a1.802 1.802 0 00-1.791.878l-1.786 3.076a36.644 36.644 0 00-3.185-1.46 1.801 1.801 0 00-2.334 1.005 1.788 1.788 0 001.01 2.326c.931.368 1.828.786 2.708 1.23l-2.72 4.684A26.816 26.816 0 0027.5 9.498h-.002a27.011 27.011 0 00-18.362 7.237A26.85 26.85 0 00.642 34.504l-.002.007v.006c-.041.614-.093 1.227-.093 1.851A26.686 26.686 0 006.95 53.715zm38.542-32.18a6.945 6.945 0 01-1.82 2.294c-2.01 0-2.883 1.74-3.404 2.781a8.39 8.39 0 01-.437.802c-1.448-.007-2.304-.137-3.536-2.593a6.871 6.871 0 00-3.5-3.488 3.368 3.368 0 01-1.89-1.886 18.637 18.637 0 01-1.506-6.268 23.38 23.38 0 018.895 2.555 23.314 23.314 0 017.198 5.803zm-19.7-8.368a22.635 22.635 0 001.897 7.88 6.871 6.871 0 003.5 3.489 3.368 3.368 0 011.891 1.886c2.118 4.223 4.519 4.572 6.998 4.572 2.01 0 2.883-1.74 3.404-2.781.133-.279.28-.55.444-.812a5.774 5.774 0 003.783-2.658 23.195 23.195 0 012.715 16.088A23.245 23.245 0 0141.87 54.74a23.376 23.376 0 01-15.615 4.882 23.361 23.361 0 01-14.99-6.545c.46-.34.895-.714 1.301-1.116.897-.874 1.336-1.261 2.357-1.261a8.758 8.758 0 004.397-1.085 5.215 5.215 0 012.79-.706c4.719 0 7.188-2.703 7.188-5.374 0-2.672-2.469-5.374-7.188-5.374-.998.02-1.995.092-2.986.215-3.043.322-6.184.649-8.321-1.482A14.136 14.136 0 004.398 33.1a23.273 23.273 0 017.177-13.721 23.402 23.402 0 0114.217-6.212zm-.089 30.367c0 .867-1.26 1.791-3.594 1.791a8.758 8.758 0 00-4.397 1.085 5.215 5.215 0 01-2.79.706 6.503 6.503 0 00-4.871 2.285c-.349.37-.743.695-1.175.965a23.085 23.085 0 01-4.715-13.597 10.895 10.895 0 014.1 2.657c3.353 3.341 7.91 2.859 11.24 2.512.954-.101 1.854-.196 2.608-.196 2.334 0 3.594.924 3.594 1.792zm14.375 40.415v.785c0 .475-.19.93-.527 1.267a1.8 1.8 0 01-1.27.525H16.72a1.8 1.8 0 01-1.27-.525 1.79 1.79 0 01-.527-1.267v-.785a1.787 1.787 0 011.36-1.739L27.5 79.416l11.216 2.794a1.797 1.797 0 011.362 1.739zm5.157-74.544a32.227 32.227 0 0113.772 19.517 32.14 32.14 0 01-3.47 23.611A32.308 32.308 0 0136.724 67.29 32.413 32.413 0 0112.89 65.1l2.707-4.66a26.974 26.974 0 0017.533 2.213 26.913 26.913 0 0015.126-9.112 26.768 26.768 0 006.19-16.503 26.762 26.762 0 00-5.419-16.771c-.01-.019-.027-.033-.038-.052a27.11 27.11 0 00-6.465-6.143l2.71-4.667z",
                fill: "#fff"
              }
            }),
            _vm._v(" "),
            _c("path", {
              attrs: {
                d:
                  "M20.313 30.994a5.687 5.687 0 003.734-1.65 5.653 5.653 0 001.656-3.724c0-6.612-1.41-8.956-5.39-8.956-5.391 0-5.391 3.806-5.391 7.165 0 5.921 2.932 7.165 5.39 7.165zm1.796-5.374a2.095 2.095 0 01-1.797 1.792c-.758 0-1.796 0-1.796-3.583s0-3.583 1.797-3.583c.963 0 1.796 0 1.796 5.374zm9.792 22.052c-.912 1.626-2.292 4.08-.28 6.085a4.01 4.01 0 002.942 1.22 13.278 13.278 0 006.508-2.786l-.993-1.492-1-1.489c-1.028.684-4.152 2.775-4.894 2.096a6.609 6.609 0 01.853-1.882 8.61 8.61 0 001.448-4.1 2.472 2.472 0 011.384-2.389c.151-.064.313-.1.477-.105a.638.638 0 01.462.179c.633.631 2.316 2.31 2.169 3.81a3.625 3.625 0 01-1.895 2.39l.996 1.49.997 1.49a6.948 6.948 0 002.322-2.106 6.921 6.921 0 001.156-2.91c.316-3.188-2.24-5.737-3.204-6.697a4.382 4.382 0 00-4.856-.85 6.069 6.069 0 00-2.67 2.304 6.042 6.042 0 00-.932 3.395 6.457 6.457 0 01-.99 2.347z",
                fill: "#fff"
              }
            })
          ]
        )
      ]),
      _vm._v(" "),
      _c("h2", { staticClass: "studyset__title" }, [
        _vm._v(
          "\n                     " +
            _vm._s(_vm.infoset.title) +
            "\n                  "
        )
      ])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "studyset__caption" }, [
      _vm._v(
        "\n                  Chapter " +
          _vm._s(_vm.infoset.number) +
          " - " +
          _vm._s(_vm.infoset.name) +
          "\n               "
      )
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "studyset__prerequisits" }, [
      _vm._m(0),
      _vm._v(" "),
      _c("ul", { staticClass: "studyset__prerequisits-tegs" }, [
        _c("li", [
          _c("span", [
            _vm._v(
              "\n                           " +
                _vm._s(_vm.infoset.curriculum) +
                "\n                        "
            )
          ])
        ]),
        _vm._v(" "),
        _c("li", [
          _c("span", [
            _vm._v(
              "\n                           " +
                _vm._s(_vm.infoset.topic) +
                "\n                        "
            )
          ])
        ])
      ])
    ]),
    _vm._v(" "),
    _c("div", { staticClass: "studyset__author" }, [
      _c("div", { staticClass: "studyset__author-txt" }, [
        _vm._v(
          "\n                     Authors: " +
            _vm._s(_vm.infoset.author) +
            "\n                  "
        )
      ]),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "studyset__author-btn",
          attrs: {
            type: "button",
            "data-toggle": "modal",
            "data-target": "#studysetModal"
          }
        },
        [
          _c(
            "svg",
            {
              attrs: {
                width: "36",
                height: "36",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg"
              }
            },
            [
              _c("path", {
                attrs: {
                  d:
                    "M4.896 34.6h20.541a3.936 3.936 0 002.755-1.128 3.81 3.81 0 001.141-2.722v-11.9c0-.279-.112-.546-.31-.742a1.069 1.069 0 00-1.503 0c-.2.196-.312.463-.312.742v11.9c0 .464-.186.91-.518 1.237a1.782 1.782 0 01-1.253.513H4.896c-.47 0-.92-.184-1.252-.513a1.74 1.74 0 01-.519-1.237v-20.3c0-.464.187-.91.519-1.237A1.782 1.782 0 014.896 8.7h12.041c.282 0 .552-.11.752-.308a1.044 1.044 0 000-1.484c-.2-.197-.47-.308-.752-.308H4.896A3.92 3.92 0 002.14 7.728 3.827 3.827 0 001 10.45v20.3c0 1.021.41 2 1.141 2.722A3.92 3.92 0 004.896 34.6z",
                  fill: "#009051",
                  stroke: "#009051",
                  "stroke-width": ".8"
                }
              }),
              _vm._v(" "),
              _c("path", {
                attrs: {
                  d:
                    "M28.356 2.134l-14.677 14.49a1.05 1.05 0 00-.297.532l-1.049 4.956a1.037 1.037 0 00.22.877 1.06 1.06 0 00.829.383h.212l5.015-.994c.205-.043.392-.146.538-.294L31.814 9.568l1.997-1.974a3.822 3.822 0 00.931-2.64 3.829 3.829 0 00-1.12-2.565 3.926 3.926 0 00-5.264-.255zm-10.441 18.2l-3.13.616.623-3.094 11.687-11.55 2.508 2.478-11.688 11.55zm14.45-14.28l-1.247 1.232-2.521-2.436 1.246-1.232a1.774 1.774 0 011.254-.513 1.791 1.791 0 011.254.513 1.751 1.751 0 01.52 1.24 1.734 1.734 0 01-.52 1.238l.014-.042z",
                  fill: "#009051",
                  stroke: "#009051",
                  "stroke-width": ".8"
                }
              })
            ]
          )
        ]
      )
    ]),
    _vm._v(" "),
    _c(
      "div",
      {
        staticClass: "modal fade",
        attrs: {
          id: "studysetModal",
          tabindex: "-1",
          role: "dialog",
          "aria-hidden": "true"
        }
      },
      [
        _c(
          "div",
          {
            staticClass: "modal-dialog modal-dialog-centered studyset-modal",
            attrs: { role: "document" }
          },
          [
            _c("div", { staticClass: "modal-content" }, [
              _c(
                "button",
                {
                  staticClass: "close",
                  attrs: { type: "button", "data-dismiss": "modal" }
                },
                [
                  _c(
                    "svg",
                    {
                      attrs: {
                        width: "26",
                        height: "26",
                        fill: "none",
                        xmlns: "http://www.w3.org/2000/svg"
                      }
                    },
                    [
                      _c("path", {
                        attrs: {
                          d:
                            "M15.73 13.235l9.048-9.211a1.99 1.99 0 000-2.78 1.906 1.906 0 00-2.73 0L13 10.456 3.952 1.244a1.906 1.906 0 00-2.73 0 1.99 1.99 0 000 2.78l9.048 9.211-9.048 9.212a1.99 1.99 0 000 2.78c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582L13 16.015l9.048 9.212c.364.37.858.582 1.352.582.494 0 .988-.185 1.352-.582a1.99 1.99 0 000-2.78l-9.022-9.212z",
                          fill: "#009051"
                        }
                      })
                    ]
                  )
                ]
              ),
              _vm._v(" "),
              _c("h5", { staticClass: "filter__title" }, [
                _vm._v("edit study set information")
              ]),
              _vm._v(" "),
              _c("form", { staticClass: "form-step__finish" }, [
                _c("div", { staticClass: "step-form__group" }, [
                  _c(
                    "label",
                    {
                      staticClass: "step-form__label",
                      attrs: { for: "title" }
                    },
                    [_vm._v("book title*")]
                  ),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model.trim",
                        value: _vm.infoset.title,
                        expression: "infoset.title",
                        modifiers: { trim: true }
                      }
                    ],
                    staticClass: "step__input form-input",
                    attrs: { type: "text", id: "title" },
                    domProps: { value: _vm.infoset.title },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(
                          _vm.infoset,
                          "title",
                          $event.target.value.trim()
                        )
                      },
                      blur: function($event) {
                        return _vm.$forceUpdate()
                      }
                    }
                  })
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-form__group" }, [
                  _c(
                    "label",
                    {
                      staticClass: "step-form__label",
                      attrs: { for: "author" }
                    },
                    [_vm._v("author(s)*")]
                  ),
                  _vm._v(" "),
                  _c("input", {
                    directives: [
                      {
                        name: "model",
                        rawName: "v-model.trim",
                        value: _vm.infoset.author,
                        expression: "infoset.author",
                        modifiers: { trim: true }
                      }
                    ],
                    staticClass: "step__input form-input",
                    attrs: { type: "text", id: "author" },
                    domProps: { value: _vm.infoset.author },
                    on: {
                      input: function($event) {
                        if ($event.target.composing) {
                          return
                        }
                        _vm.$set(
                          _vm.infoset,
                          "author",
                          $event.target.value.trim()
                        )
                      },
                      blur: function($event) {
                        return _vm.$forceUpdate()
                      }
                    }
                  })
                ]),
                _vm._v(" "),
                _c("p", { staticClass: "step-form__label" }, [
                  _vm._v("chapter number and name*")
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-form__groups" }, [
                  _c(
                    "div",
                    { staticClass: "step-form__group step-form__group-number" },
                    [
                      _c("input", {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.infoset.number,
                            expression: "infoset.number",
                            modifiers: { trim: true }
                          }
                        ],
                        staticClass: "step__input form-input",
                        attrs: { type: "number", id: "numb" },
                        domProps: { value: _vm.infoset.number },
                        on: {
                          input: function($event) {
                            if ($event.target.composing) {
                              return
                            }
                            _vm.$set(
                              _vm.infoset,
                              "number",
                              $event.target.value.trim()
                            )
                          },
                          blur: function($event) {
                            return _vm.$forceUpdate()
                          }
                        }
                      }),
                      _vm._v(" "),
                      _c("small", { staticClass: "step-form__muted" }, [
                        _vm._v("number")
                      ])
                    ]
                  ),
                  _vm._v(" "),
                  _c("div", { staticClass: "step-form__group" }, [
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model.trim",
                          value: _vm.infoset.name,
                          expression: "infoset.name",
                          modifiers: { trim: true }
                        }
                      ],
                      staticClass: "step__input form-input",
                      attrs: { type: "text", id: "name" },
                      domProps: { value: _vm.infoset.name },
                      on: {
                        input: function($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.infoset,
                            "name",
                            $event.target.value.trim()
                          )
                        },
                        blur: function($event) {
                          return _vm.$forceUpdate()
                        }
                      }
                    }),
                    _vm._v(" "),
                    _c("small", { staticClass: "step-form__muted" }, [
                      _vm._v("name")
                    ])
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-form__group" }, [
                  _c("label", { staticClass: "step-form__label" }, [
                    _vm._v("curriculum*")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "step__select" }, [
                    _c("span", { staticClass: "myarrow" }),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.infoset.curriculum,
                            expression: "infoset.curriculum",
                            modifiers: { trim: true }
                          }
                        ],
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.infoset,
                              "curriculum",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      [
                        _c("option", [_vm._v("IB")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("IB1")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("IB2")]),
                        _vm._v(" "),
                        _c("option", {
                          attrs: {
                            value: "",
                            hidden: "",
                            disabled: "",
                            selected: ""
                          }
                        })
                      ]
                    )
                  ])
                ]),
                _vm._v(" "),
                _c("div", { staticClass: "step-form__group" }, [
                  _c("label", { staticClass: "step-form__label" }, [
                    _vm._v("topic*")
                  ]),
                  _vm._v(" "),
                  _c("div", { staticClass: "step__select" }, [
                    _c("span", { staticClass: "myarrow" }),
                    _vm._v(" "),
                    _c(
                      "select",
                      {
                        directives: [
                          {
                            name: "model",
                            rawName: "v-model.trim",
                            value: _vm.infoset.topic,
                            expression: "infoset.topic",
                            modifiers: { trim: true }
                          }
                        ],
                        on: {
                          change: function($event) {
                            var $$selectedVal = Array.prototype.filter
                              .call($event.target.options, function(o) {
                                return o.selected
                              })
                              .map(function(o) {
                                var val = "_value" in o ? o._value : o.value
                                return val
                              })
                            _vm.$set(
                              _vm.infoset,
                              "topic",
                              $event.target.multiple
                                ? $$selectedVal
                                : $$selectedVal[0]
                            )
                          }
                        }
                      },
                      [
                        _c("option", [_vm._v("History")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("Art")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("Geography")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("Literature")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("Mathematics")]),
                        _vm._v(" "),
                        _c("option", [_vm._v("Science")]),
                        _vm._v(" "),
                        _c("option", {
                          attrs: {
                            value: "",
                            hidden: "",
                            disabled: "",
                            selected: ""
                          }
                        })
                      ]
                    )
                  ])
                ]),
                _vm._v(" "),
                _vm._m(1)
              ])
            ])
          ]
        )
      ]
    )
  ])
}
var staticRenderFns = [
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "studyset__prerequisits-txt" }, [
      _c("b", [
        _vm._v("\n                        Prerequisits:\n                     ")
      ]),
      _vm._v(" "),
      _c("span", [_vm._v("Global History")])
    ])
  },
  function() {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "button__container" }, [
      _c(
        "button",
        {
          staticClass: "button",
          attrs: { type: "button", "data-dismiss": "modal" }
        },
        [
          _vm._v(
            "\n                              save changes\n                            "
          )
        ]
      )
    ])
  }
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ normalizeComponent)
/* harmony export */ });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ "./node_modules/vue/dist/vue.esm.js":
/*!******************************************!*\
  !*** ./node_modules/vue/dist/vue.esm.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Generate a string containing static keys from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof __webpack_require__.g !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = __webpack_require__.g['process'] && __webpack_require__.g['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
Dep.target = null;
var targetStack = [];

function pushTarget (target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget () {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i], vm);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  var haveExpectedTypes = expectedTypes.some(function (t) { return t; });
  if (!valid && haveExpectedTypes) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;

function assertType (value, type, vm) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    try {
      valid = value instanceof type;
    } catch (e) {
      warn('Invalid prop type: "' + String(type) + '" is not a constructor', vm);
      valid = false;
    }
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

var functionTypeCheckRE = /^\s*function (\w+)/;

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(functionTypeCheckRE);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  // check if we need to specify expected value
  if (
    expectedTypes.length === 1 &&
    isExplicable(expectedType) &&
    isExplicable(typeof value) &&
    !isBoolean(expectedType, receivedType)
  ) {
    message += " with value " + (styleValue(value, expectedType));
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + (styleValue(value, receivedType)) + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

var EXPLICABLE_TYPES = ['string', 'number', 'boolean'];
function isExplicable (value) {
  return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var isUsingMicroTask = false;

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    var vnode = res && res[0];
    return res && (
      !vnode ||
      (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallbackRender,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) {
    // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn('slot v-bind without argument expects an Object', this);
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes =
      scopedSlotFn(props) ||
      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);
  } else {
    nodes =
      this.$slots[name] ||
      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
  return eventKeyCode === undefined
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  // we know it's MountedComponentVNode but flow doesn't
  vnode,
  // activeInstance in lifecycle state
  parent
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : 0
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if ( true && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure(("vue " + name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure(("vue " + name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before () {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||
    (!newScopedSlots && vm.$scopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : 0;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        var info = "callback for watcher \"" + (this.expression) + "\"";
        invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      } else if (vm.$options.methods && key in vm.$options.methods) {
        warn(("The computed property \"" + key + "\" is already defined as a method."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      var info = "callback for immediate watcher \"" + (watcher.expression) + "\"";
      pushTarget();
      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);
      popTarget();
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */





function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var entry = cache[key];
    if (entry) {
      var name = entry.name;
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var entry = cache[key];
  if (entry && (!current || entry.tag !== current.tag)) {
    entry.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  methods: {
    cacheVNode: function cacheVNode() {
      var ref = this;
      var cache = ref.cache;
      var keys = ref.keys;
      var vnodeToCache = ref.vnodeToCache;
      var keyToCache = ref.keyToCache;
      if (vnodeToCache) {
        var tag = vnodeToCache.tag;
        var componentInstance = vnodeToCache.componentInstance;
        var componentOptions = vnodeToCache.componentOptions;
        cache[keyToCache] = {
          name: getComponentName(componentOptions),
          tag: tag,
          componentInstance: componentInstance,
        };
        keys.push(keyToCache);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
        this.vnodeToCache = null;
      }
    }
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.cacheVNode();
    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  updated: function updated () {
    this.cacheVNode();
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        // delay setting the cache until update
        this.vnodeToCache = vnode;
        this.keyToCache = key;
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.14';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false'
    ? 'false'
    // allow arbitrary string value for contenteditable
    : key === 'contenteditable' && isValidContentEditableValue(value)
      ? value
      : 'true'
};

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
       true && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps = /*#__PURE__*/Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key &&
    a.asyncFactory === b.asyncFactory && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (true) {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if ( true && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (true) {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (true) {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (
    oldVnode,
    vnode,
    insertedVnodeQueue,
    ownerArray,
    index,
    removeOnly
  ) {
    if (oldVnode === vnode) {
      return
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (true) {
          checkDuplicateKeys(ch);
        }
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (true) {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ( true &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ( true &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (true) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm)) {
          removeVnodes([oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur, vnode.data.pre);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value, isInPre) {
  if (isInPre || el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && value !== '' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
  }
}

/*  */



/* eslint-disable no-unused-vars */
function baseWarn (msg, range) {
  console.error(("[Vue compiler]: " + msg));
}
/* eslint-enable no-unused-vars */

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value, range, dynamic) {
  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));
  el.plain = false;
}

function addAttr (el, name, value, range, dynamic) {
  var attrs = dynamic
    ? (el.dynamicAttrs || (el.dynamicAttrs = []))
    : (el.attrs || (el.attrs = []));
  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));
  el.plain = false;
}

// add a raw attr (use this in preTransforms)
function addRawAttr (el, name, value, range) {
  el.attrsMap[name] = value;
  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  isDynamicArg,
  modifiers,
  range
) {
  (el.directives || (el.directives = [])).push(rangeSetItem({
    name: name,
    rawName: rawName,
    value: value,
    arg: arg,
    isDynamicArg: isDynamicArg,
    modifiers: modifiers
  }, range));
  el.plain = false;
}

function prependModifierMarker (symbol, name, dynamic) {
  return dynamic
    ? ("_p(" + name + ",\"" + symbol + "\")")
    : symbol + name // mark the event as captured
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn,
  range,
  dynamic
) {
  modifiers = modifiers || emptyObject;
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
     true && warn &&
    modifiers.prevent && modifiers.passive
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.',
      range
    );
  }

  // normalize click.right and click.middle since they don't actually fire
  // this is technically browser-specific, but at least for now browsers are
  // the only target envs that have right/middle clicks.
  if (modifiers.right) {
    if (dynamic) {
      name = "(" + name + ")==='click'?'contextmenu':(" + name + ")";
    } else if (name === 'click') {
      name = 'contextmenu';
      delete modifiers.right;
    }
  } else if (modifiers.middle) {
    if (dynamic) {
      name = "(" + name + ")==='click'?'mouseup':(" + name + ")";
    } else if (name === 'click') {
      name = 'mouseup';
    }
  }

  // check capture modifier
  if (modifiers.capture) {
    delete modifiers.capture;
    name = prependModifierMarker('!', name, dynamic);
  }
  if (modifiers.once) {
    delete modifiers.once;
    name = prependModifierMarker('~', name, dynamic);
  }
  /* istanbul ignore if */
  if (modifiers.passive) {
    delete modifiers.passive;
    name = prependModifierMarker('&', name, dynamic);
  }

  var events;
  if (modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }

  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);
  if (modifiers !== emptyObject) {
    newHandler.modifiers = modifiers;
  }

  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }

  el.plain = false;
}

function getRawBindingAttr (
  el,
  name
) {
  return el.rawAttrsMap[':' + name] ||
    el.rawAttrsMap['v-bind:' + name] ||
    el.rawAttrsMap[name]
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.
function getAndRemoveAttr (
  el,
  name,
  removeFromMap
) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  if (removeFromMap) {
    delete el.attrsMap[name];
  }
  return val
}

function getAndRemoveAttrByRegex (
  el,
  name
) {
  var list = el.attrsList;
  for (var i = 0, l = list.length; i < l; i++) {
    var attr = list[i];
    if (name.test(attr.name)) {
      list.splice(i, 1);
      return attr
    }
  }
}

function rangeSetItem (
  item,
  range
) {
  if (range) {
    if (range.start != null) {
      item.start = range.start;
    }
    if (range.end != null) {
      item.end = range.end;
    }
  }
  return item
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
      "? " + baseValueExpression + ".trim()" +
      ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: JSON.stringify(value),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var res = parseModel(value);
  if (res.key === null) {
    return (value + "=" + assignment)
  } else {
    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
  }
}

/**
 * Parse a v-model expression into a base path and a final key segment.
 * Handles both dot-path and possible square brackets.
 *
 * Possible cases:
 *
 * - test
 * - test[key]
 * - test[test1[key]]
 * - test["a"][key]
 * - xxx.test[a[a].test1[key]]
 * - test.xxx.a["asa"][test1[key]]
 *
 */

var len, str, chr, index$1, expressionPos, expressionEndPos;



function parseModel (val) {
  // Fix https://github.com/vuejs/vue/pull/7730
  // allow v-model="obj.val " (trailing whitespace)
  val = val.trim();
  len = val.length;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    index$1 = val.lastIndexOf('.');
    if (index$1 > -1) {
      return {
        exp: val.slice(0, index$1),
        key: '"' + val.slice(index$1 + 1) + '"'
      }
    } else {
      return {
        exp: val,
        key: null
      }
    }
  }

  str = val;
  index$1 = expressionPos = expressionEndPos = 0;

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.slice(0, expressionPos),
    key: val.slice(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (true) {
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead.",
        el.rawAttrsMap['v-model']
      );
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (true) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.',
      el.rawAttrsMap['v-model']
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
    "?_i(" + value + "," + valueBinding + ")>-1" + (
      trueValueBinding === 'true'
        ? (":(" + value + ")")
        : (":_q(" + value + "," + trueValueBinding + ")")
    )
  );
  addHandler(el, 'change',
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
      "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;

  // warn if v-bind:value conflicts with v-model
  // except for inputs with v-bind:type
  if (true) {
    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (value$1 && !typeBinding) {
      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
      warn$1(
        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
        'because the latter already expands to a value binding internally',
        el.rawAttrsMap[binding]
      );
    }
  }

  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1 (event, handler, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.
var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1 (
  name,
  handler,
  capture,
  passive
) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;
    handler = original._wrapper = function (e) {
      if (
        // no bubbling, should always fire.
        // this is just a safety net in case event.timeStamp is unreliable in
        // certain weird environments...
        e.target === e.currentTarget ||
        // event is fired after handler attachment
        e.timeStamp >= attachedTimestamp ||
        // bail for environments that have buggy event.timeStamp implementations
        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
        // #9681 QtWebEngine event.timeStamp is negative value
        e.timeStamp <= 0 ||
        // #9448 bail if event is fired in another document in a multi-page
        // electron/nw.js app, since event.timeStamp will be using a different
        // starting reference
        e.target.ownerDocument !== document
      ) {
        return original.apply(this, arguments)
      }
    };
  }
  target$1.addEventListener(
    name,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  name,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    name,
    handler._wrapper || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

var svgContainer;

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;
      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }
      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if (
      // skip the update if old and new VDOM state is the same.
      // `value` is handled separately because the DOM value may be temporarily
      // out of sync with VDOM state due to focus, composition and modifiers.
      // This  #4521 by skipping the unnecessary `checked` update.
      cur !== oldProps[key]
    ) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

var whitespaceRE = /\s+/;

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  // JSDOM may return undefined for transition properties
  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors
function toMs (s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if ( true && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if ( true && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
     true && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: directive,
  show: show
};

/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

var isVShowDirective = function (d) { return d.name === 'show'; };

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(isNotTextNode);
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if ( true && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if ( true &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  beforeMount: function beforeMount () {
    var this$1 = this;

    var update = this._update;
    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1);
      // force removing pass
      this$1.__patch__(
        this$1._vnode,
        this$1.kept,
        false, // hydrating
        true // removeOnly (!important, avoids unnecessary moves)
      );
      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (true) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (e && e.target !== el) {
            return
          }
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        true
      ) {
        console[console.info ? 'info' : 'log'](
          'Download the Vue Devtools extension for a better development experience:\n' +
          'https://github.com/vuejs/vue-devtools'
        );
      }
    }
    if ( true &&
      config.productionTip !== false &&
      typeof console !== 'undefined'
    ) {
      console[console.info ? 'info' : 'log'](
        "You are running Vue in development mode.\n" +
        "Make sure to turn on production mode when deploying for production.\n" +
        "See more tips at https://vuejs.org/guide/deployment.html"
      );
    }
  }, 0);
}

/*  */

var defaultTagRE = /\{\{((?:.|\r?\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});



function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var rawTokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index, tokenValue;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      rawTokens.push(tokenValue = text.slice(lastIndex, index));
      tokens.push(JSON.stringify(tokenValue));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    rawTokens.push({ '@binding': exp });
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    rawTokens.push(tokenValue = text.slice(lastIndex));
    tokens.push(JSON.stringify(tokenValue));
  }
  return {
    expression: tokens.join('+'),
    tokens: rawTokens
  }
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if ( true && staticClass) {
    var res = parseText(staticClass, options.delimiters);
    if (res) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.',
        el.rawAttrsMap['class']
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
};

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (true) {
      var res = parseText(staticStyle, options.delimiters);
      if (res) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.',
          el.rawAttrsMap['style']
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
};

/*  */

var decoder;

var he = {
  decode: function decode (html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent
  }
};

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/**
 * Not type-checking this file because it's mostly vendor code.
 */

// Regular Expressions for parsing tags and attributes
var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
var dynamicArgAttribute = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
var ncname = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + (unicodeRegExp.source) + "]*";
var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
var startTagOpen = new RegExp(("^<" + qnameCapture));
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
var doctype = /^<!DOCTYPE [^>]+>/i;
// #7298: escape - to avoid being passed as HTML comment when inlined in page
var comment = /^<!\--/;
var conditionalComment = /^<!\[/;

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n',
  '&#9;': '\t',
  '&#39;': "'"
};
var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);
            }
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {
            advance(1);
          }
          continue
        }
      }

      var text = (void 0), rest = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (
          !endTag.test(rest) &&
          !startTagOpen.test(rest) &&
          !comment.test(rest) &&
          !conditionalComment.test(rest)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
      }

      if (textEnd < 0) {
        text = html;
      }

      if (text) {
        advance(text.length);
      }

      if (options.chars && text) {
        options.chars(text, index - text.length, index);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if ( true && !stack.length && options.warn) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""), { start: index + html.length });
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {
        attr.start = index;
        advance(attr[0].length);
        attr.end = index;
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      var value = args[3] || args[4] || args[5] || '';
      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
        ? options.shouldDecodeNewlinesForHref
        : options.shouldDecodeNewlines;
      attrs[i] = {
        name: args[1],
        value: decodeAttr(value, shouldDecodeNewlines)
      };
      if ( true && options.outputSourceRange) {
        attrs[i].start = args.start + args[0].match(/^\s*/).length;
        attrs[i].end = args.end;
      }
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    // Find the closest opened tag of the same type
    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if ( true &&
          (i > pos || !tagName) &&
          options.warn
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag."),
            { start: stack[i].start, end: stack[i].end }
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:|^#/;
var forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
var stripParensRE = /^\(|\)$/g;
var dynamicArgRE = /^\[.*\]$/;

var argRE = /:(.*)$/;
var bindRE = /^:|^\.|^v-bind:/;
var modifierRE = /\.[^.\]]+(?=[^\]]*$)/g;

var slotRE = /^v-slot(:|$)|^#/;

var lineBreakRE = /[\r\n]/;
var whitespaceRE$1 = /[ \f\t\r\n]+/g;

var invalidAttributeRE = /[\s"'<>\/=]/;

var decodeHTMLCached = cached(he.decode);

var emptySlotScopeToken = "_empty_";

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;
var maybeComponent;

function createASTElement (
  tag,
  attrs,
  parent
) {
  return {
    type: 1,
    tag: tag,
    attrsList: attrs,
    attrsMap: makeAttrsMap(attrs),
    rawAttrsMap: {},
    parent: parent,
    children: []
  }
}

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;
  var isReservedTag = options.isReservedTag || no;
  maybeComponent = function (el) { return !!(
    el.component ||
    el.attrsMap[':is'] ||
    el.attrsMap['v-bind:is'] ||
    !(el.attrsMap.is ? isReservedTag(el.attrsMap.is) : isReservedTag(el.tag))
  ); };
  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var whitespaceOption = options.whitespace;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg, range) {
    if (!warned) {
      warned = true;
      warn$2(msg, range);
    }
  }

  function closeElement (element) {
    trimEndingWhitespace(element);
    if (!inVPre && !element.processed) {
      element = processElement(element, options);
    }
    // tree management
    if (!stack.length && element !== root) {
      // allow root elements with v-if, v-else-if and v-else
      if (root.if && (element.elseif || element.else)) {
        if (true) {
          checkRootConstraints(element);
        }
        addIfCondition(root, {
          exp: element.elseif,
          block: element
        });
      } else if (true) {
        warnOnce(
          "Component template should contain exactly one root element. " +
          "If you are using v-if on multiple elements, " +
          "use v-else-if to chain them instead.",
          { start: element.start }
        );
      }
    }
    if (currentParent && !element.forbidden) {
      if (element.elseif || element.else) {
        processIfConditions(element, currentParent);
      } else {
        if (element.slotScope) {
          // scoped slot
          // keep it in the children list so that v-else(-if) conditions can
          // find it as the prev node.
          var name = element.slotTarget || '"default"'
          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        }
        currentParent.children.push(element);
        element.parent = currentParent;
      }
    }

    // final children cleanup
    // filter out scoped slots
    element.children = element.children.filter(function (c) { return !(c).slotScope; });
    // remove trailing whitespace node again
    trimEndingWhitespace(element);

    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
    // apply post-transforms
    for (var i = 0; i < postTransforms.length; i++) {
      postTransforms[i](element, options);
    }
  }

  function trimEndingWhitespace (el) {
    // remove trailing whitespace node
    if (!inPre) {
      var lastNode;
      while (
        (lastNode = el.children[el.children.length - 1]) &&
        lastNode.type === 3 &&
        lastNode.text === ' '
      ) {
        el.children.pop();
      }
    }
  }

  function checkRootConstraints (el) {
    if (el.tag === 'slot' || el.tag === 'template') {
      warnOnce(
        "Cannot use <" + (el.tag) + "> as component root element because it may " +
        'contain multiple nodes.',
        { start: el.start }
      );
    }
    if (el.attrsMap.hasOwnProperty('v-for')) {
      warnOnce(
        'Cannot use v-for on stateful component root element because ' +
        'it renders multiple elements.',
        el.rawAttrsMap['v-for']
      );
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
    shouldKeepComment: options.comments,
    outputSourceRange: options.outputSourceRange,
    start: function start (tag, attrs, unary, start$1, end) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = createASTElement(tag, attrs, currentParent);
      if (ns) {
        element.ns = ns;
      }

      if (true) {
        if (options.outputSourceRange) {
          element.start = start$1;
          element.end = end;
          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {
            cumulated[attr.name] = attr;
            return cumulated
          }, {});
        }
        attrs.forEach(function (attr) {
          if (invalidAttributeRE.test(attr.name)) {
            warn$2(
              "Invalid dynamic argument expression: attribute names cannot contain " +
              "spaces, quotes, <, >, / or =.",
              {
                start: attr.start + attr.name.indexOf("["),
                end: attr.start + attr.name.length
              }
            );
          }
        });
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
         true && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.',
          { start: element.start }
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        element = preTransforms[i](element, options) || element;
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else if (!element.processed) {
        // structural directives
        processFor(element);
        processIf(element);
        processOnce(element);
      }

      if (!root) {
        root = element;
        if (true) {
          checkRootConstraints(root);
        }
      }

      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        closeElement(element);
      }
    },

    end: function end (tag, start, end$1) {
      var element = stack[stack.length - 1];
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      if ( true && options.outputSourceRange) {
        element.end = end$1;
      }
      closeElement(element);
    },

    chars: function chars (text, start, end) {
      if (!currentParent) {
        if (true) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.',
              { start: start }
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored."),
              { start: start }
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      if (inPre || text.trim()) {
        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);
      } else if (!children.length) {
        // remove the whitespace-only node right after an opening tag
        text = '';
      } else if (whitespaceOption) {
        if (whitespaceOption === 'condense') {
          // in condense mode, remove the whitespace node if it contains
          // line break, otherwise condense to a single space
          text = lineBreakRE.test(text) ? '' : ' ';
        } else {
          text = ' ';
        }
      } else {
        text = preserveWhitespace ? ' ' : '';
      }
      if (text) {
        if (!inPre && whitespaceOption === 'condense') {
          // condense consecutive whitespaces into single space
          text = text.replace(whitespaceRE$1, ' ');
        }
        var res;
        var child;
        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
          child = {
            type: 2,
            expression: res.expression,
            tokens: res.tokens,
            text: text
          };
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          child = {
            type: 3,
            text: text
          };
        }
        if (child) {
          if ( true && options.outputSourceRange) {
            child.start = start;
            child.end = end;
          }
          children.push(child);
        }
      }
    },
    comment: function comment (text, start, end) {
      // adding anything as a sibling to the root node is forbidden
      // comments should still be allowed, but ignored
      if (currentParent) {
        var child = {
          type: 3,
          text: text,
          isComment: true
        };
        if ( true && options.outputSourceRange) {
          child.start = start;
          child.end = end;
        }
        currentParent.children.push(child);
      }
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var list = el.attrsList;
  var len = list.length;
  if (len) {
    var attrs = el.attrs = new Array(len);
    for (var i = 0; i < len; i++) {
      attrs[i] = {
        name: list[i].name,
        value: JSON.stringify(list[i].value)
      };
      if (list[i].start != null) {
        attrs[i].start = list[i].start;
        attrs[i].end = list[i].end;
      }
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processElement (
  element,
  options
) {
  processKey(element);

  // determine whether this is a plain element after
  // removing structural attributes
  element.plain = (
    !element.key &&
    !element.scopedSlots &&
    !element.attrsList.length
  );

  processRef(element);
  processSlotContent(element);
  processSlotOutlet(element);
  processComponent(element);
  for (var i = 0; i < transforms.length; i++) {
    element = transforms[i](element, options) || element;
  }
  processAttrs(element);
  return element
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if (true) {
      if (el.tag === 'template') {
        warn$2(
          "<template> cannot be keyed. Place the key on real elements instead.",
          getRawBindingAttr(el, 'key')
        );
      }
      if (el.for) {
        var iterator = el.iterator2 || el.iterator1;
        var parent = el.parent;
        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {
          warn$2(
            "Do not use v-for index as key on <transition-group> children, " +
            "this is the same as not using keys.",
            getRawBindingAttr(el, 'key'),
            true /* tip */
          );
        }
      }
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var res = parseFor(exp);
    if (res) {
      extend(el, res);
    } else if (true) {
      warn$2(
        ("Invalid v-for expression: " + exp),
        el.rawAttrsMap['v-for']
      );
    }
  }
}



function parseFor (exp) {
  var inMatch = exp.match(forAliasRE);
  if (!inMatch) { return }
  var res = {};
  res.for = inMatch[2].trim();
  var alias = inMatch[1].trim().replace(stripParensRE, '');
  var iteratorMatch = alias.match(forIteratorRE);
  if (iteratorMatch) {
    res.alias = alias.replace(forIteratorRE, '').trim();
    res.iterator1 = iteratorMatch[1].trim();
    if (iteratorMatch[2]) {
      res.iterator2 = iteratorMatch[2].trim();
    }
  } else {
    res.alias = alias;
  }
  return res
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (true) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if.",
      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if ( true && children[i].text !== ' ') {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored.",
          children[i]
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

// handle content being passed to a component as slot,
// e.g. <template slot="xxx">, <div slot-scope="xxx">
function processSlotContent (el) {
  var slotScope;
  if (el.tag === 'template') {
    slotScope = getAndRemoveAttr(el, 'scope');
    /* istanbul ignore if */
    if ( true && slotScope) {
      warn$2(
        "the \"scope\" attribute for scoped slots have been deprecated and " +
        "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
        "can also be used on plain elements in addition to <template> to " +
        "denote scoped slots.",
        el.rawAttrsMap['scope'],
        true
      );
    }
    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
    /* istanbul ignore if */
    if ( true && el.attrsMap['v-for']) {
      warn$2(
        "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
        "(v-for takes higher priority). Use a wrapper <template> for the " +
        "scoped slot to make it clearer.",
        el.rawAttrsMap['slot-scope'],
        true
      );
    }
    el.slotScope = slotScope;
  }

  // slot="xxx"
  var slotTarget = getBindingAttr(el, 'slot');
  if (slotTarget) {
    el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);
    // preserve slot as an attribute for native shadow DOM compat
    // only for non-scoped slots.
    if (el.tag !== 'template' && !el.slotScope) {
      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));
    }
  }

  // 2.6 v-slot syntax
  {
    if (el.tag === 'template') {
      // v-slot on <template>
      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);
      if (slotBinding) {
        if (true) {
          if (el.slotTarget || el.slotScope) {
            warn$2(
              "Unexpected mixed usage of different slot syntaxes.",
              el
            );
          }
          if (el.parent && !maybeComponent(el.parent)) {
            warn$2(
              "<template v-slot> can only appear at the root level inside " +
              "the receiving component",
              el
            );
          }
        }
        var ref = getSlotName(slotBinding);
        var name = ref.name;
        var dynamic = ref.dynamic;
        el.slotTarget = name;
        el.slotTargetDynamic = dynamic;
        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf
      }
    } else {
      // v-slot on component, denotes default slot
      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);
      if (slotBinding$1) {
        if (true) {
          if (!maybeComponent(el)) {
            warn$2(
              "v-slot can only be used on components or <template>.",
              slotBinding$1
            );
          }
          if (el.slotScope || el.slotTarget) {
            warn$2(
              "Unexpected mixed usage of different slot syntaxes.",
              el
            );
          }
          if (el.scopedSlots) {
            warn$2(
              "To avoid scope ambiguity, the default slot should also use " +
              "<template> syntax when there are other named slots.",
              slotBinding$1
            );
          }
        }
        // add the component's children to its default slot
        var slots = el.scopedSlots || (el.scopedSlots = {});
        var ref$1 = getSlotName(slotBinding$1);
        var name$1 = ref$1.name;
        var dynamic$1 = ref$1.dynamic;
        var slotContainer = slots[name$1] = createASTElement('template', [], el);
        slotContainer.slotTarget = name$1;
        slotContainer.slotTargetDynamic = dynamic$1;
        slotContainer.children = el.children.filter(function (c) {
          if (!c.slotScope) {
            c.parent = slotContainer;
            return true
          }
        });
        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;
        // remove children as they are returned from scopedSlots now
        el.children = [];
        // mark el non-plain so data gets generated
        el.plain = false;
      }
    }
  }
}

function getSlotName (binding) {
  var name = binding.name.replace(slotRE, '');
  if (!name) {
    if (binding.name[0] !== '#') {
      name = 'default';
    } else if (true) {
      warn$2(
        "v-slot shorthand syntax requires a slot name.",
        binding
      );
    }
  }
  return dynamicArgRE.test(name)
    // dynamic [name]
    ? { name: name.slice(1, -1), dynamic: true }
    // static name
    : { name: ("\"" + name + "\""), dynamic: false }
}

// handle <slot/> outlets
function processSlotOutlet (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if ( true && el.key) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead.",
        getRawBindingAttr(el, 'key')
      );
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name.replace(dirRE, ''));
      // support .foo shorthand syntax for the .prop modifier
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isDynamic = dynamicArgRE.test(name);
        if (isDynamic) {
          name = name.slice(1, -1);
        }
        if (
           true &&
          value.trim().length === 0
        ) {
          warn$2(
            ("The value for a v-bind expression cannot be empty. Found in \"v-bind:" + name + "\"")
          );
        }
        if (modifiers) {
          if (modifiers.prop && !isDynamic) {
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel && !isDynamic) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            syncGen = genAssignmentCode(value, "$event");
            if (!isDynamic) {
              addHandler(
                el,
                ("update:" + (camelize(name))),
                syncGen,
                null,
                false,
                warn$2,
                list[i]
              );
              if (hyphenate(name) !== camelize(name)) {
                addHandler(
                  el,
                  ("update:" + (hyphenate(name))),
                  syncGen,
                  null,
                  false,
                  warn$2,
                  list[i]
                );
              }
            } else {
              // handler w/ dynamic event name
              addHandler(
                el,
                ("\"update:\"+(" + name + ")"),
                syncGen,
                null,
                false,
                warn$2,
                list[i],
                true // dynamic
              );
            }
          }
        }
        if ((modifiers && modifiers.prop) || (
          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
        )) {
          addProp(el, name, value, list[i], isDynamic);
        } else {
          addAttr(el, name, value, list[i], isDynamic);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        isDynamic = dynamicArgRE.test(name);
        if (isDynamic) {
          name = name.slice(1, -1);
        }
        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        isDynamic = false;
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
          if (dynamicArgRE.test(arg)) {
            arg = arg.slice(1, -1);
            isDynamic = true;
          }
        }
        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);
        if ( true && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (true) {
        var res = parseText(value, delimiters);
        if (res) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.',
            list[i]
          );
        }
      }
      addAttr(el, name, JSON.stringify(value), list[i]);
      // #6887 firefox doesn't update muted state if set via attribute
      // even immediately after element creation
      if (!el.component &&
          name === 'muted' &&
          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
        addProp(el, name, 'true', list[i]);
      }
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
       true &&
      map[attrs[i].name] && !isIE && !isEdge
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead.",
        el.rawAttrsMap['v-model']
      );
    }
    _el = _el.parent;
  }
}

/*  */

function preTransformNode (el, options) {
  if (el.tag === 'input') {
    var map = el.attrsMap;
    if (!map['v-model']) {
      return
    }

    var typeBinding;
    if (map[':type'] || map['v-bind:type']) {
      typeBinding = getBindingAttr(el, 'type');
    }
    if (!map.type && !typeBinding && map['v-bind']) {
      typeBinding = "(" + (map['v-bind']) + ").type";
    }

    if (typeBinding) {
      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
      // 1. checkbox
      var branch0 = cloneASTElement(el);
      // process for on the main node
      processFor(branch0);
      addRawAttr(branch0, 'type', 'checkbox');
      processElement(branch0, options);
      branch0.processed = true; // prevent it from double-processed
      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
      addIfCondition(branch0, {
        exp: branch0.if,
        block: branch0
      });
      // 2. add radio else-if condition
      var branch1 = cloneASTElement(el);
      getAndRemoveAttr(branch1, 'v-for', true);
      addRawAttr(branch1, 'type', 'radio');
      processElement(branch1, options);
      addIfCondition(branch0, {
        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
        block: branch1
      });
      // 3. other
      var branch2 = cloneASTElement(el);
      getAndRemoveAttr(branch2, 'v-for', true);
      addRawAttr(branch2, ':type', typeBinding);
      processElement(branch2, options);
      addIfCondition(branch0, {
        exp: ifCondition,
        block: branch2
      });

      if (hasElse) {
        branch0.else = true;
      } else if (elseIfCondition) {
        branch0.elseif = elseIfCondition;
      }

      return branch0
    }
  }
}

function cloneASTElement (el) {
  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
}

var model$1 = {
  preTransformNode: preTransformNode
};

var modules$1 = [
  klass$1,
  style$1,
  model$1
];

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"), dir);
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"), dir);
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/;
var fnInvokeRE = /\([^)]*?\);*$/;
var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

// KeyboardEvent.keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// KeyboardEvent.key aliases
var keyNames = {
  // #7880: IE11 and Edge use `Esc` for Escape key name.
  esc: ['Esc', 'Escape'],
  tab: 'Tab',
  enter: 'Enter',
  // #9112: IE11 uses `Spacebar` for Space key name.
  space: [' ', 'Spacebar'],
  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
  up: ['Up', 'ArrowUp'],
  left: ['Left', 'ArrowLeft'],
  right: ['Right', 'ArrowRight'],
  down: ['Down', 'ArrowDown'],
  // #9112: IE11 uses `Del` for Delete key name.
  'delete': ['Backspace', 'Delete', 'Del']
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative
) {
  var prefix = isNative ? 'nativeOn:' : 'on:';
  var staticHandlers = "";
  var dynamicHandlers = "";
  for (var name in events) {
    var handlerCode = genHandler(events[name]);
    if (events[name] && events[name].dynamic) {
      dynamicHandlers += name + "," + handlerCode + ",";
    } else {
      staticHandlers += "\"" + name + "\":" + handlerCode + ",";
    }
  }
  staticHandlers = "{" + (staticHandlers.slice(0, -1)) + "}";
  if (dynamicHandlers) {
    return prefix + "_d(" + staticHandlers + ",[" + (dynamicHandlers.slice(0, -1)) + "])"
  } else {
    return prefix + staticHandlers
  }
}

function genHandler (handler) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);
  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));

  if (!handler.modifiers) {
    if (isMethodPath || isFunctionExpression) {
      return handler.value
    }
    return ("function($event){" + (isFunctionInvocation ? ("return " + (handler.value)) : handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else if (key === 'exact') {
        var modifiers = (handler.modifiers);
        genModifierCode += genGuard(
          ['ctrl', 'shift', 'alt', 'meta']
            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
            .join('||')
        );
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? ("return " + (handler.value) + ".apply(null, arguments)")
      : isFunctionExpression
        ? ("return (" + (handler.value) + ").apply(null, arguments)")
        : isFunctionInvocation
          ? ("return " + (handler.value))
          : handler.value;
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return (
    // make sure the key filters only apply to KeyboardEvents
    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake
    // key events that do not have keyCode property...
    "if(!$event.type.indexOf('key')&&" +
    (keys.map(genFilterCode).join('&&')) + ")return null;"
  )
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var keyCode = keyCodes[key];
  var keyName = keyNames[key];
  return (
    "_k($event.keyCode," +
    (JSON.stringify(key)) + "," +
    (JSON.stringify(keyCode)) + "," +
    "$event.key," +
    "" + (JSON.stringify(keyName)) +
    ")"
  )
}

/*  */

function on (el, dir) {
  if ( true && dir.modifiers) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
};

/*  */





var CodegenState = function CodegenState (options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };
  this.onceId = 0;
  this.staticRenderFns = [];
  this.pre = false;
};



function generate (
  ast,
  options
) {
  var state = new CodegenState(options);
  // fix #11483, Root level <script> tags should not be rendered.
  var code = ast ? (ast.tag === 'script' ? 'null' : genElement(ast, state)) : '_c("div")';
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: state.staticRenderFns
  }
}

function genElement (el, state) {
  if (el.parent) {
    el.pre = el.pre || el.parent.pre;
  }

  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state)
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {
    return genChildren(el, state) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el, state)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data;
      if (!el.plain || (el.pre && state.maybeComponent(el))) {
        data = genData$2(el, state);
      }

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el, state) {
  el.staticProcessed = true;
  // Some elements (templates) need to behave differently inside of a v-pre
  // node.  All pre nodes are static roots, so we can use this as a location to
  // wrap a state change and reset it upon exiting the pre node.
  var originalPreState = state.pre;
  if (el.pre) {
    state.pre = el.pre;
  }
  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
  state.pre = originalPreState;
  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
       true && state.warn(
        "v-once can only be used inside v-for that is keyed. ",
        el.rawAttrsMap['v-once']
      );
      return genElement(el, state)
    }
    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
  } else {
    return genStatic(el, state)
  }
}

function genIf (
  el,
  state,
  altGen,
  altEmpty
) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
}

function genIfConditions (
  conditions,
  state,
  altGen,
  altEmpty
) {
  if (!conditions.length) {
    return altEmpty || '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return altGen
      ? altGen(el, state)
      : el.once
        ? genOnce(el, state)
        : genElement(el, state)
  }
}

function genFor (
  el,
  state,
  altGen,
  altHelper
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if ( true &&
    state.maybeComponent(el) &&
    el.tag !== 'slot' &&
    el.tag !== 'template' &&
    !el.key
  ) {
    state.warn(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      el.rawAttrsMap['v-for'],
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + ((altGen || genElement)(el, state)) +
    '})'
}

function genData$2 (el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:" + (genProps(el.attrs)) + ",";
  }
  // DOM props
  if (el.props) {
    data += "domProps:" + (genProps(el.props)) + ",";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true)) + ",";
  }
  // slot target
  // only for non-scoped slots
  if (el.slotTarget && !el.slotScope) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el, el.scopedSlots, state)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind dynamic argument wrap
  // v-bind with dynamic arguments must be applied using the same v-bind object
  // merge helper so that class/style/mustUseProp attrs are handled correctly.
  if (el.dynamicAttrs) {
    data = "_b(" + data + ",\"" + (el.tag) + "\"," + (genProps(el.dynamicAttrs)) + ")";
  }
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data
}

function genDirectives (el, state) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:" + (dir.isDynamicArg ? dir.arg : ("\"" + (dir.arg) + "\""))) : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el, state) {
  var ast = el.children[0];
  if ( true && (
    el.children.length !== 1 || ast.type !== 1
  )) {
    state.warn(
      'Inline-template components must have exactly one child element.',
      { start: el.start }
    );
  }
  if (ast && ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (
  el,
  slots,
  state
) {
  // by default scoped slots are considered "stable", this allows child
  // components with only scoped slots to skip forced updates from parent.
  // but in some cases we have to bail-out of this optimization
  // for example if the slot contains dynamic names, has v-if or v-for on them...
  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {
    var slot = slots[key];
    return (
      slot.slotTargetDynamic ||
      slot.if ||
      slot.for ||
      containsSlotChild(slot) // is passing down slot from parent which may be dynamic
    )
  });

  // #9534: if a component with scoped slots is inside a conditional branch,
  // it's possible for the same component to be reused but with different
  // compiled slot content. To avoid that, we generate a unique key based on
  // the generated code of all the slot contents.
  var needsKey = !!el.if;

  // OR when it is inside another scoped slot or v-for (the reactivity may be
  // disconnected due to the intermediate scope variable)
  // #9438, #9506
  // TODO: this can be further optimized by properly analyzing in-scope bindings
  // and skip force updating ones that do not actually use scope variables.
  if (!needsForceUpdate) {
    var parent = el.parent;
    while (parent) {
      if (
        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||
        parent.for
      ) {
        needsForceUpdate = true;
        break
      }
      if (parent.if) {
        needsKey = true;
      }
      parent = parent.parent;
    }
  }

  var generatedSlots = Object.keys(slots)
    .map(function (key) { return genScopedSlot(slots[key], state); })
    .join(',');

  return ("scopedSlots:_u([" + generatedSlots + "]" + (needsForceUpdate ? ",null,true" : "") + (!needsForceUpdate && needsKey ? (",null,false," + (hash(generatedSlots))) : "") + ")")
}

function hash(str) {
  var hash = 5381;
  var i = str.length;
  while(i) {
    hash = (hash * 33) ^ str.charCodeAt(--i);
  }
  return hash >>> 0
}

function containsSlotChild (el) {
  if (el.type === 1) {
    if (el.tag === 'slot') {
      return true
    }
    return el.children.some(containsSlotChild)
  }
  return false
}

function genScopedSlot (
  el,
  state
) {
  var isLegacySyntax = el.attrsMap['slot-scope'];
  if (el.if && !el.ifProcessed && !isLegacySyntax) {
    return genIf(el, state, genScopedSlot, "null")
  }
  if (el.for && !el.forProcessed) {
    return genFor(el, state, genScopedSlot)
  }
  var slotScope = el.slotScope === emptySlotScopeToken
    ? ""
    : String(el.slotScope);
  var fn = "function(" + slotScope + "){" +
    "return " + (el.tag === 'template'
      ? el.if && isLegacySyntax
        ? ("(" + (el.if) + ")?" + (genChildren(el, state) || 'undefined') + ":undefined")
        : genChildren(el, state) || 'undefined'
      : genElement(el, state)) + "}";
  // reverse proxy v-slot without scope on this.$slots
  var reverseProxy = slotScope ? "" : ",proxy:true";
  return ("{key:" + (el.slotTarget || "\"default\"") + ",fn:" + fn + reverseProxy + "}")
}

function genChildren (
  el,
  state,
  checkSkip,
  altGenElement,
  altGenNode
) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      var normalizationType = checkSkip
        ? state.maybeComponent(el$1) ? ",1" : ",0"
        : "";
      return ("" + ((altGenElement || genElement)(el$1, state)) + normalizationType)
    }
    var normalizationType$1 = checkSkip
      ? getNormalizationType(children, state.maybeComponent)
      : 0;
    var gen = altGenNode || genNode;
    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType$1 ? ("," + normalizationType$1) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (
  children,
  maybeComponent
) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function genNode (node, state) {
  if (node.type === 1) {
    return genElement(node, state)
  } else if (node.type === 3 && node.isComment) {
    return genComment(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genComment (comment) {
  return ("_e(" + (JSON.stringify(comment.text)) + ")")
}

function genSlot (el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? (",function(){return " + children + "}") : '');
  var attrs = el.attrs || el.dynamicAttrs
    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({
        // slot props are camelized
        name: camelize(attr.name),
        value: attr.value,
        dynamic: attr.dynamic
      }); }))
    : null;
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (
  componentName,
  el,
  state
) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var staticProps = "";
  var dynamicProps = "";
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    var value = transformSpecialNewlines(prop.value);
    if (prop.dynamic) {
      dynamicProps += (prop.name) + "," + value + ",";
    } else {
      staticProps += "\"" + (prop.name) + "\":" + value + ",";
    }
  }
  staticProps = "{" + (staticProps.slice(0, -1)) + "}";
  if (dynamicProps) {
    return ("_d(" + staticProps + ",[" + (dynamicProps.slice(0, -1)) + "])")
  } else {
    return staticProps
  }
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */



// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast, warn) {
  if (ast) {
    checkNode(ast, warn);
  }
}

function checkNode (node, warn) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          var range = node.rawAttrsMap[name];
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), warn, range);
          } else if (name === 'v-slot' || name[0] === '#') {
            checkFunctionParameterExpression(value, (name + "=\"" + value + "\""), warn, range);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), warn, range);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), warn, range);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], warn);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, warn, node);
  }
}

function checkEvent (exp, text, warn, range) {
  var stripped = exp.replace(stripStringRE, '');
  var keywordMatch = stripped.match(unaryOperatorsRE);
  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {
    warn(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim()),
      range
    );
  }
  checkExpression(exp, text, warn, range);
}

function checkFor (node, text, warn, range) {
  checkExpression(node.for || '', text, warn, range);
  checkIdentifier(node.alias, 'v-for alias', text, warn, range);
  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);
  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);
}

function checkIdentifier (
  ident,
  type,
  text,
  warn,
  range
) {
  if (typeof ident === 'string') {
    try {
      new Function(("var " + ident + "=_"));
    } catch (e) {
      warn(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())), range);
    }
  }
}

function checkExpression (exp, text, warn, range) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      warn(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim()),
        range
      );
    } else {
      warn(
        "invalid expression: " + (e.message) + " in\n\n" +
        "    " + exp + "\n\n" +
        "  Raw expression: " + (text.trim()) + "\n",
        range
      );
    }
  }
}

function checkFunctionParameterExpression (exp, text, warn, range) {
  try {
    new Function(exp, '');
  } catch (e) {
    warn(
      "invalid function parameter expression: " + (e.message) + " in\n\n" +
      "    " + exp + "\n\n" +
      "  Raw expression: " + (text.trim()) + "\n",
      range
    );
  }
}

/*  */

var range = 2;

function generateCodeFrame (
  source,
  start,
  end
) {
  if ( start === void 0 ) start = 0;
  if ( end === void 0 ) end = source.length;

  var lines = source.split(/\r?\n/);
  var count = 0;
  var res = [];
  for (var i = 0; i < lines.length; i++) {
    count += lines[i].length + 1;
    if (count >= start) {
      for (var j = i - range; j <= i + range || end > count; j++) {
        if (j < 0 || j >= lines.length) { continue }
        res.push(("" + (j + 1) + (repeat$1(" ", 3 - String(j + 1).length)) + "|  " + (lines[j])));
        var lineLength = lines[j].length;
        if (j === i) {
          // push underline
          var pad = start - (count - lineLength) + 1;
          var length = end > count ? lineLength - pad : end - start;
          res.push("   |  " + repeat$1(" ", pad) + repeat$1("^", length));
        } else if (j > i) {
          if (end > count) {
            var length$1 = Math.min(end - count, lineLength);
            res.push("   |  " + repeat$1("^", length$1));
          }
          count += lineLength + 1;
        }
      }
      break
    }
  }
  return res.join('\n')
}

function repeat$1 (str, n) {
  var result = '';
  if (n > 0) {
    while (true) { // eslint-disable-line
      if (n & 1) { result += str; }
      n >>>= 1;
      if (n <= 0) { break }
      str += str;
    }
  }
  return result
}

/*  */



function createFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompileToFunctionFn (compile) {
  var cache = Object.create(null);

  return function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = extend({}, options);
    var warn$$1 = options.warn || warn;
    delete options.warn;

    /* istanbul ignore if */
    if (true) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn$$1(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (cache[key]) {
      return cache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (true) {
      if (compiled.errors && compiled.errors.length) {
        if (options.outputSourceRange) {
          compiled.errors.forEach(function (e) {
            warn$$1(
              "Error compiling template:\n\n" + (e.msg) + "\n\n" +
              generateCodeFrame(template, e.start, e.end),
              vm
            );
          });
        } else {
          warn$$1(
            "Error compiling template:\n\n" + template + "\n\n" +
            compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
            vm
          );
        }
      }
      if (compiled.tips && compiled.tips.length) {
        if (options.outputSourceRange) {
          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });
        } else {
          compiled.tips.forEach(function (msg) { return tip(msg, vm); });
        }
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors)
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (true) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn$$1(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (cache[key] = res)
  }
}

/*  */

function createCompilerCreator (baseCompile) {
  return function createCompiler (baseOptions) {
    function compile (
      template,
      options
    ) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];

      var warn = function (msg, range, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        if ( true && options.outputSourceRange) {
          // $flow-disable-line
          var leadingSpaceLength = template.match(/^\s*/)[0].length;

          warn = function (msg, range, tip) {
            var data = { msg: msg };
            if (range) {
              if (range.start != null) {
                data.start = range.start + leadingSpaceLength;
              }
              if (range.end != null) {
                data.end = range.end + leadingSpaceLength;
              }
            }
            (tip ? tips : errors).push(data);
          };
        }
        // merge custom modules
        if (options.modules) {
          finalOptions.modules =
            (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(
            Object.create(baseOptions.directives || null),
            options.directives
          );
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      finalOptions.warn = warn;

      var compiled = baseCompile(template.trim(), finalOptions);
      if (true) {
        detectErrors(compiled.ast, warn);
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    }
  }
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  if (options.optimize !== false) {
    optimize(ast, options);
  }
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compile = ref$1.compile;
var compileToFunctions = ref$1.compileToFunctions;

/*  */

// check whether current browser encodes a char inside attribute values
var div;
function getShouldDecode (href) {
  div = div || document.createElement('div');
  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
  return div.innerHTML.indexOf('&#10;') > 0
}

// #3663: IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
// #6828: chrome encodes content in a[href]
var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue.prototype.$mount;
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
     true && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if ( true && !template) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (true) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if ( true && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        outputSourceRange: "development" !== 'production',
        shouldDecodeNewlines: shouldDecodeNewlines,
        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if ( true && config.performance && mark) {
        mark('compile end');
        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue.compile = compileToFunctions;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Vue);


/***/ }),

/***/ "./node_modules/vuedraggable/dist/vuedraggable.umd.js":
/*!************************************************************!*\
  !*** ./node_modules/vuedraggable/dist/vuedraggable.umd.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory(__webpack_require__(/*! sortablejs */ "./node_modules/sortablejs/modular/sortable.esm.js"));
	else {}
})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE_a352__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __nested_webpack_require_688__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_688__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__nested_webpack_require_688__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__nested_webpack_require_688__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__nested_webpack_require_688__.d = function(exports, name, getter) {
/******/ 		if(!__nested_webpack_require_688__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__nested_webpack_require_688__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__nested_webpack_require_688__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __nested_webpack_require_688__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__nested_webpack_require_688__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_688__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__nested_webpack_require_688__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__nested_webpack_require_688__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__nested_webpack_require_688__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__nested_webpack_require_688__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __nested_webpack_require_688__(__nested_webpack_require_688__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "01f9":
/***/ (function(module, exports, __nested_webpack_require_4164__) {

"use strict";

var LIBRARY = __nested_webpack_require_4164__("2d00");
var $export = __nested_webpack_require_4164__("5ca1");
var redefine = __nested_webpack_require_4164__("2aba");
var hide = __nested_webpack_require_4164__("32e9");
var Iterators = __nested_webpack_require_4164__("84f2");
var $iterCreate = __nested_webpack_require_4164__("41a0");
var setToStringTag = __nested_webpack_require_4164__("7f20");
var getPrototypeOf = __nested_webpack_require_4164__("38fd");
var ITERATOR = __nested_webpack_require_4164__("2b4c")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "02f4":
/***/ (function(module, exports, __nested_webpack_require_7070__) {

var toInteger = __nested_webpack_require_7070__("4588");
var defined = __nested_webpack_require_7070__("be13");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "0390":
/***/ (function(module, exports, __nested_webpack_require_7783__) {

"use strict";

var at = __nested_webpack_require_7783__("02f4")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "0bfb":
/***/ (function(module, exports, __nested_webpack_require_8134__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __nested_webpack_require_8134__("cb7c");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "0d58":
/***/ (function(module, exports, __nested_webpack_require_8593__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __nested_webpack_require_8593__("ce10");
var enumBugKeys = __nested_webpack_require_8593__("e11e");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "1495":
/***/ (function(module, exports, __nested_webpack_require_8892__) {

var dP = __nested_webpack_require_8892__("86cc");
var anObject = __nested_webpack_require_8892__("cb7c");
var getKeys = __nested_webpack_require_8892__("0d58");

module.exports = __nested_webpack_require_8892__("9e1e") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "214f":
/***/ (function(module, exports, __nested_webpack_require_9392__) {

"use strict";

__nested_webpack_require_9392__("b0c5");
var redefine = __nested_webpack_require_9392__("2aba");
var hide = __nested_webpack_require_9392__("32e9");
var fails = __nested_webpack_require_9392__("79e5");
var defined = __nested_webpack_require_9392__("be13");
var wks = __nested_webpack_require_9392__("2b4c");
var regexpExec = __nested_webpack_require_9392__("520a");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "230e":
/***/ (function(module, exports, __nested_webpack_require_12849__) {

var isObject = __nested_webpack_require_12849__("d3f4");
var document = __nested_webpack_require_12849__("7726").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "23c6":
/***/ (function(module, exports, __nested_webpack_require_13233__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __nested_webpack_require_13233__("2d95");
var TAG = __nested_webpack_require_13233__("2b4c")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "2621":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "2aba":
/***/ (function(module, exports, __nested_webpack_require_14160__) {

var global = __nested_webpack_require_14160__("7726");
var hide = __nested_webpack_require_14160__("32e9");
var has = __nested_webpack_require_14160__("69a8");
var SRC = __nested_webpack_require_14160__("ca5a")('src');
var $toString = __nested_webpack_require_14160__("fa5b");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__nested_webpack_require_14160__("8378").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "2aeb":
/***/ (function(module, exports, __nested_webpack_require_15334__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __nested_webpack_require_15334__("cb7c");
var dPs = __nested_webpack_require_15334__("1495");
var enumBugKeys = __nested_webpack_require_15334__("e11e");
var IE_PROTO = __nested_webpack_require_15334__("613b")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __nested_webpack_require_15334__("230e")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __nested_webpack_require_15334__("fab2").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "2b4c":
/***/ (function(module, exports, __nested_webpack_require_16945__) {

var store = __nested_webpack_require_16945__("5537")('wks');
var uid = __nested_webpack_require_16945__("ca5a");
var Symbol = __nested_webpack_require_16945__("7726").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "2d00":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "2d95":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "2fdb":
/***/ (function(module, exports, __nested_webpack_require_17667__) {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __nested_webpack_require_17667__("5ca1");
var context = __nested_webpack_require_17667__("d2c8");
var INCLUDES = 'includes';

$export($export.P + $export.F * __nested_webpack_require_17667__("5147")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "32e9":
/***/ (function(module, exports, __nested_webpack_require_18235__) {

var dP = __nested_webpack_require_18235__("86cc");
var createDesc = __nested_webpack_require_18235__("4630");
module.exports = __nested_webpack_require_18235__("9e1e") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "38fd":
/***/ (function(module, exports, __nested_webpack_require_18611__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __nested_webpack_require_18611__("69a8");
var toObject = __nested_webpack_require_18611__("4bf8");
var IE_PROTO = __nested_webpack_require_18611__("613b")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "41a0":
/***/ (function(module, exports, __nested_webpack_require_19205__) {

"use strict";

var create = __nested_webpack_require_19205__("2aeb");
var descriptor = __nested_webpack_require_19205__("4630");
var setToStringTag = __nested_webpack_require_19205__("7f20");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__nested_webpack_require_19205__("32e9")(IteratorPrototype, __nested_webpack_require_19205__("2b4c")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "456d":
/***/ (function(module, exports, __nested_webpack_require_19831__) {

// 19.1.2.14 Object.keys(O)
var toObject = __nested_webpack_require_19831__("4bf8");
var $keys = __nested_webpack_require_19831__("0d58");

__nested_webpack_require_19831__("5eda")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "4588":
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "4630":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "4bf8":
/***/ (function(module, exports, __nested_webpack_require_20609__) {

// 7.1.13 ToObject(argument)
var defined = __nested_webpack_require_20609__("be13");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "5147":
/***/ (function(module, exports, __nested_webpack_require_20831__) {

var MATCH = __nested_webpack_require_20831__("2b4c")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "520a":
/***/ (function(module, exports, __nested_webpack_require_21176__) {

"use strict";


var regexpFlags = __nested_webpack_require_21176__("0bfb");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "52a7":
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "5537":
/***/ (function(module, exports, __nested_webpack_require_23109__) {

var core = __nested_webpack_require_23109__("8378");
var global = __nested_webpack_require_23109__("7726");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __nested_webpack_require_23109__("2d00") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "5ca1":
/***/ (function(module, exports, __nested_webpack_require_23642__) {

var global = __nested_webpack_require_23642__("7726");
var core = __nested_webpack_require_23642__("8378");
var hide = __nested_webpack_require_23642__("32e9");
var redefine = __nested_webpack_require_23642__("2aba");
var ctx = __nested_webpack_require_23642__("9b43");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "5eda":
/***/ (function(module, exports, __nested_webpack_require_25367__) {

// most Object methods by ES6 should accept primitives
var $export = __nested_webpack_require_25367__("5ca1");
var core = __nested_webpack_require_25367__("8378");
var fails = __nested_webpack_require_25367__("79e5");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "5f1b":
/***/ (function(module, exports, __nested_webpack_require_25845__) {

"use strict";


var classof = __nested_webpack_require_25845__("23c6");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "613b":
/***/ (function(module, exports, __nested_webpack_require_26551__) {

var shared = __nested_webpack_require_26551__("5537")('keys');
var uid = __nested_webpack_require_26551__("ca5a");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "626a":
/***/ (function(module, exports, __nested_webpack_require_26811__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __nested_webpack_require_26811__("2d95");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "6762":
/***/ (function(module, exports, __nested_webpack_require_27194__) {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __nested_webpack_require_27194__("5ca1");
var $includes = __nested_webpack_require_27194__("c366")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__nested_webpack_require_27194__("9c6c")('includes');


/***/ }),

/***/ "6821":
/***/ (function(module, exports, __nested_webpack_require_27659__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __nested_webpack_require_27659__("626a");
var defined = __nested_webpack_require_27659__("be13");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "69a8":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "6a99":
/***/ (function(module, exports, __nested_webpack_require_28155__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __nested_webpack_require_28155__("d3f4");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "7333":
/***/ (function(module, exports, __nested_webpack_require_28898__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var getKeys = __nested_webpack_require_28898__("0d58");
var gOPS = __nested_webpack_require_28898__("2621");
var pIE = __nested_webpack_require_28898__("52a7");
var toObject = __nested_webpack_require_28898__("4bf8");
var IObject = __nested_webpack_require_28898__("626a");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __nested_webpack_require_28898__("79e5")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : $assign;


/***/ }),

/***/ "7726":
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "77f1":
/***/ (function(module, exports, __nested_webpack_require_30635__) {

var toInteger = __nested_webpack_require_30635__("4588");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "79e5":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "7f20":
/***/ (function(module, exports, __nested_webpack_require_31112__) {

var def = __nested_webpack_require_31112__("86cc").f;
var has = __nested_webpack_require_31112__("69a8");
var TAG = __nested_webpack_require_31112__("2b4c")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "8378":
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "84f2":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "86cc":
/***/ (function(module, exports, __nested_webpack_require_31751__) {

var anObject = __nested_webpack_require_31751__("cb7c");
var IE8_DOM_DEFINE = __nested_webpack_require_31751__("c69a");
var toPrimitive = __nested_webpack_require_31751__("6a99");
var dP = Object.defineProperty;

exports.f = __nested_webpack_require_31751__("9e1e") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9b43":
/***/ (function(module, exports, __nested_webpack_require_32441__) {

// optional / simple context binding
var aFunction = __nested_webpack_require_32441__("d8e8");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "9c6c":
/***/ (function(module, exports, __nested_webpack_require_33048__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __nested_webpack_require_33048__("2b4c")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __nested_webpack_require_33048__("32e9")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "9def":
/***/ (function(module, exports, __nested_webpack_require_33448__) {

// 7.1.15 ToLength
var toInteger = __nested_webpack_require_33448__("4588");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "9e1e":
/***/ (function(module, exports, __nested_webpack_require_33750__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__nested_webpack_require_33750__("79e5")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "a352":
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_a352__;

/***/ }),

/***/ "a481":
/***/ (function(module, exports, __nested_webpack_require_34139__) {

"use strict";


var anObject = __nested_webpack_require_34139__("cb7c");
var toObject = __nested_webpack_require_34139__("4bf8");
var toLength = __nested_webpack_require_34139__("9def");
var toInteger = __nested_webpack_require_34139__("4588");
var advanceStringIndex = __nested_webpack_require_34139__("0390");
var regExpExec = __nested_webpack_require_34139__("5f1b");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__nested_webpack_require_34139__("214f")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "aae3":
/***/ (function(module, exports, __nested_webpack_require_38885__) {

// 7.2.8 IsRegExp(argument)
var isObject = __nested_webpack_require_38885__("d3f4");
var cof = __nested_webpack_require_38885__("2d95");
var MATCH = __nested_webpack_require_38885__("2b4c")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "ac6a":
/***/ (function(module, exports, __nested_webpack_require_39282__) {

var $iterators = __nested_webpack_require_39282__("cadf");
var getKeys = __nested_webpack_require_39282__("0d58");
var redefine = __nested_webpack_require_39282__("2aba");
var global = __nested_webpack_require_39282__("7726");
var hide = __nested_webpack_require_39282__("32e9");
var Iterators = __nested_webpack_require_39282__("84f2");
var wks = __nested_webpack_require_39282__("2b4c");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "b0c5":
/***/ (function(module, exports, __nested_webpack_require_41209__) {

"use strict";

var regexpExec = __nested_webpack_require_41209__("520a");
__nested_webpack_require_41209__("5ca1")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "be13":
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "c366":
/***/ (function(module, exports, __nested_webpack_require_41706__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __nested_webpack_require_41706__("6821");
var toLength = __nested_webpack_require_41706__("9def");
var toAbsoluteIndex = __nested_webpack_require_41706__("77f1");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "c649":
/***/ (function(module, __webpack_exports__, __nested_webpack_require_42729__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __nested_webpack_require_42729__.d(__webpack_exports__, "c", function() { return insertNodeAt; });
/* harmony export (binding) */ __nested_webpack_require_42729__.d(__webpack_exports__, "a", function() { return camelize; });
/* harmony export (binding) */ __nested_webpack_require_42729__.d(__webpack_exports__, "b", function() { return console; });
/* harmony export (binding) */ __nested_webpack_require_42729__.d(__webpack_exports__, "d", function() { return removeNode; });
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_42729__("a481");
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_42729__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__);


function getConsole() {
  if (typeof window !== "undefined") {
    return window.console;
  }

  return global.console;
}

var console = getConsole();

function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

var regex = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(regex, function (_, c) {
    return c ? c.toUpperCase() : "";
  });
});

function removeNode(node) {
  if (node.parentElement !== null) {
    node.parentElement.removeChild(node);
  }
}

function insertNodeAt(fatherNode, node, position) {
  var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;
  fatherNode.insertBefore(node, refNode);
}


/* WEBPACK VAR INJECTION */}.call(this, __nested_webpack_require_42729__("c8ba")))

/***/ }),

/***/ "c69a":
/***/ (function(module, exports, __nested_webpack_require_44512__) {

module.exports = !__nested_webpack_require_44512__("9e1e") && !__nested_webpack_require_44512__("79e5")(function () {
  return Object.defineProperty(__nested_webpack_require_44512__("230e")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "ca5a":
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "cadf":
/***/ (function(module, exports, __nested_webpack_require_45568__) {

"use strict";

var addToUnscopables = __nested_webpack_require_45568__("9c6c");
var step = __nested_webpack_require_45568__("d53b");
var Iterators = __nested_webpack_require_45568__("84f2");
var toIObject = __nested_webpack_require_45568__("6821");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __nested_webpack_require_45568__("01f9")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "cb7c":
/***/ (function(module, exports, __nested_webpack_require_46777__) {

var isObject = __nested_webpack_require_46777__("d3f4");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "ce10":
/***/ (function(module, exports, __nested_webpack_require_47019__) {

var has = __nested_webpack_require_47019__("69a8");
var toIObject = __nested_webpack_require_47019__("6821");
var arrayIndexOf = __nested_webpack_require_47019__("c366")(false);
var IE_PROTO = __nested_webpack_require_47019__("613b")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "d2c8":
/***/ (function(module, exports, __nested_webpack_require_47655__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __nested_webpack_require_47655__("aae3");
var defined = __nested_webpack_require_47655__("be13");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "d3f4":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "d53b":
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "d8e8":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "e11e":
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "f559":
/***/ (function(module, exports, __nested_webpack_require_48796__) {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __nested_webpack_require_48796__("5ca1");
var toLength = __nested_webpack_require_48796__("9def");
var context = __nested_webpack_require_48796__("d2c8");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __nested_webpack_require_48796__("5147")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "f6fd":
/***/ (function(module, exports) {

// document.currentScript polyfill by Adam Miller

// MIT license

(function(document){
  var currentScript = "currentScript",
      scripts = document.getElementsByTagName('script'); // Live NodeList collection

  // If browser needs currentScript polyfill, add get currentScript() to the document object
  if (!(currentScript in document)) {
    Object.defineProperty(document, currentScript, {
      get: function(){

        // IE 6-10 supports script readyState
        // IE 10+ support stack trace
        try { throw new Error(); }
        catch (err) {

          // Find the second match for the "at" string to get file src url from stack.
          // Specifically works with the format of stack traces in IE.
          var i, res = ((/.*at [^\(]*\((.*):.+:.+\)$/ig).exec(err.stack) || [false])[1];

          // For all scripts on the page, if src matches or if ready state is interactive, return the script tag
          for(i in scripts){
            if(scripts[i].src == res || scripts[i].readyState == "interactive"){
              return scripts[i];
            }
          }

          // If no match, return null
          return null;
        }
      }
    });
  }
})(document);


/***/ }),

/***/ "f751":
/***/ (function(module, exports, __nested_webpack_require_50913__) {

// 19.1.3.1 Object.assign(target, source)
var $export = __nested_webpack_require_50913__("5ca1");

$export($export.S + $export.F, 'Object', { assign: __nested_webpack_require_50913__("7333") });


/***/ }),

/***/ "fa5b":
/***/ (function(module, exports, __nested_webpack_require_51166__) {

module.exports = __nested_webpack_require_51166__("5537")('native-function-to-string', Function.toString);


/***/ }),

/***/ "fab2":
/***/ (function(module, exports, __nested_webpack_require_51344__) {

var document = __nested_webpack_require_51344__("7726").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __nested_webpack_require_51548__) {

"use strict";
// ESM COMPAT FLAG
__nested_webpack_require_51548__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  if (true) {
    __nested_webpack_require_51548__("f6fd")
  }

  var setPublicPath_i
  if ((setPublicPath_i = window.document.currentScript) && (setPublicPath_i = setPublicPath_i.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))) {
    __nested_webpack_require_51548__.p = setPublicPath_i[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.assign.js
var es6_object_assign = __nested_webpack_require_51548__("f751");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.starts-with.js
var es6_string_starts_with = __nested_webpack_require_51548__("f559");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __nested_webpack_require_51548__("ac6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.iterator.js
var es6_array_iterator = __nested_webpack_require_51548__("cadf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.keys.js
var es6_object_keys = __nested_webpack_require_51548__("456d");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.array.includes.js
var es7_array_includes = __nested_webpack_require_51548__("6762");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.includes.js
var es6_string_includes = __nested_webpack_require_51548__("2fdb");

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: external {"commonjs":"sortablejs","commonjs2":"sortablejs","amd":"sortablejs","root":"Sortable"}
var external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_ = __nested_webpack_require_51548__("a352");
var external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_default = /*#__PURE__*/__nested_webpack_require_51548__.n(external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_);

// EXTERNAL MODULE: ./src/util/helper.js
var helper = __nested_webpack_require_51548__("c649");

// CONCATENATED MODULE: ./src/vuedraggable.js












function buildAttribute(object, propName, value) {
  if (value === undefined) {
    return object;
  }

  object = object || {};
  object[propName] = value;
  return object;
}

function computeVmIndex(vnodes, element) {
  return vnodes.map(function (elt) {
    return elt.elm;
  }).indexOf(element);
}

function _computeIndexes(slots, children, isTransition, footerOffset) {
  if (!slots) {
    return [];
  }

  var elmFromNodes = slots.map(function (elt) {
    return elt.elm;
  });
  var footerIndex = children.length - footerOffset;

  var rawIndexes = _toConsumableArray(children).map(function (elt, idx) {
    return idx >= footerIndex ? elmFromNodes.length : elmFromNodes.indexOf(elt);
  });

  return isTransition ? rawIndexes.filter(function (ind) {
    return ind !== -1;
  }) : rawIndexes;
}

function emit(evtName, evtData) {
  var _this = this;

  this.$nextTick(function () {
    return _this.$emit(evtName.toLowerCase(), evtData);
  });
}

function delegateAndEmit(evtName) {
  var _this2 = this;

  return function (evtData) {
    if (_this2.realList !== null) {
      _this2["onDrag" + evtName](evtData);
    }

    emit.call(_this2, evtName, evtData);
  };
}

function isTransitionName(name) {
  return ["transition-group", "TransitionGroup"].includes(name);
}

function vuedraggable_isTransition(slots) {
  if (!slots || slots.length !== 1) {
    return false;
  }

  var _slots = _slicedToArray(slots, 1),
      componentOptions = _slots[0].componentOptions;

  if (!componentOptions) {
    return false;
  }

  return isTransitionName(componentOptions.tag);
}

function getSlot(slot, scopedSlot, key) {
  return slot[key] || (scopedSlot[key] ? scopedSlot[key]() : undefined);
}

function computeChildrenAndOffsets(children, slot, scopedSlot) {
  var headerOffset = 0;
  var footerOffset = 0;
  var header = getSlot(slot, scopedSlot, "header");

  if (header) {
    headerOffset = header.length;
    children = children ? [].concat(_toConsumableArray(header), _toConsumableArray(children)) : _toConsumableArray(header);
  }

  var footer = getSlot(slot, scopedSlot, "footer");

  if (footer) {
    footerOffset = footer.length;
    children = children ? [].concat(_toConsumableArray(children), _toConsumableArray(footer)) : _toConsumableArray(footer);
  }

  return {
    children: children,
    headerOffset: headerOffset,
    footerOffset: footerOffset
  };
}

function getComponentAttributes($attrs, componentData) {
  var attributes = null;

  var update = function update(name, value) {
    attributes = buildAttribute(attributes, name, value);
  };

  var attrs = Object.keys($attrs).filter(function (key) {
    return key === "id" || key.startsWith("data-");
  }).reduce(function (res, key) {
    res[key] = $attrs[key];
    return res;
  }, {});
  update("attrs", attrs);

  if (!componentData) {
    return attributes;
  }

  var on = componentData.on,
      props = componentData.props,
      componentDataAttrs = componentData.attrs;
  update("on", on);
  update("props", props);
  Object.assign(attributes.attrs, componentDataAttrs);
  return attributes;
}

var eventsListened = ["Start", "Add", "Remove", "Update", "End"];
var eventsToEmit = ["Choose", "Unchoose", "Sort", "Filter", "Clone"];
var readonlyProperties = ["Move"].concat(eventsListened, eventsToEmit).map(function (evt) {
  return "on" + evt;
});
var draggingElement = null;
var props = {
  options: Object,
  list: {
    type: Array,
    required: false,
    default: null
  },
  value: {
    type: Array,
    required: false,
    default: null
  },
  noTransitionOnDrag: {
    type: Boolean,
    default: false
  },
  clone: {
    type: Function,
    default: function _default(original) {
      return original;
    }
  },
  element: {
    type: String,
    default: "div"
  },
  tag: {
    type: String,
    default: null
  },
  move: {
    type: Function,
    default: null
  },
  componentData: {
    type: Object,
    required: false,
    default: null
  }
};
var draggableComponent = {
  name: "draggable",
  inheritAttrs: false,
  props: props,
  data: function data() {
    return {
      transitionMode: false,
      noneFunctionalComponentMode: false
    };
  },
  render: function render(h) {
    var slots = this.$slots.default;
    this.transitionMode = vuedraggable_isTransition(slots);

    var _computeChildrenAndOf = computeChildrenAndOffsets(slots, this.$slots, this.$scopedSlots),
        children = _computeChildrenAndOf.children,
        headerOffset = _computeChildrenAndOf.headerOffset,
        footerOffset = _computeChildrenAndOf.footerOffset;

    this.headerOffset = headerOffset;
    this.footerOffset = footerOffset;
    var attributes = getComponentAttributes(this.$attrs, this.componentData);
    return h(this.getTag(), attributes, children);
  },
  created: function created() {
    if (this.list !== null && this.value !== null) {
      helper["b" /* console */].error("Value and list props are mutually exclusive! Please set one or another.");
    }

    if (this.element !== "div") {
      helper["b" /* console */].warn("Element props is deprecated please use tag props instead. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#element-props");
    }

    if (this.options !== undefined) {
      helper["b" /* console */].warn("Options props is deprecated, add sortable options directly as vue.draggable item, or use v-bind. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#options-props");
    }
  },
  mounted: function mounted() {
    var _this3 = this;

    this.noneFunctionalComponentMode = this.getTag().toLowerCase() !== this.$el.nodeName.toLowerCase() && !this.getIsFunctional();

    if (this.noneFunctionalComponentMode && this.transitionMode) {
      throw new Error("Transition-group inside component is not supported. Please alter tag value or remove transition-group. Current tag value: ".concat(this.getTag()));
    }

    var optionsAdded = {};
    eventsListened.forEach(function (elt) {
      optionsAdded["on" + elt] = delegateAndEmit.call(_this3, elt);
    });
    eventsToEmit.forEach(function (elt) {
      optionsAdded["on" + elt] = emit.bind(_this3, elt);
    });
    var attributes = Object.keys(this.$attrs).reduce(function (res, key) {
      res[Object(helper["a" /* camelize */])(key)] = _this3.$attrs[key];
      return res;
    }, {});
    var options = Object.assign({}, this.options, attributes, optionsAdded, {
      onMove: function onMove(evt, originalEvent) {
        return _this3.onDragMove(evt, originalEvent);
      }
    });
    !("draggable" in options) && (options.draggable = ">*");
    this._sortable = new external_commonjs_sortablejs_commonjs2_sortablejs_amd_sortablejs_root_Sortable_default.a(this.rootContainer, options);
    this.computeIndexes();
  },
  beforeDestroy: function beforeDestroy() {
    if (this._sortable !== undefined) this._sortable.destroy();
  },
  computed: {
    rootContainer: function rootContainer() {
      return this.transitionMode ? this.$el.children[0] : this.$el;
    },
    realList: function realList() {
      return this.list ? this.list : this.value;
    }
  },
  watch: {
    options: {
      handler: function handler(newOptionValue) {
        this.updateOptions(newOptionValue);
      },
      deep: true
    },
    $attrs: {
      handler: function handler(newOptionValue) {
        this.updateOptions(newOptionValue);
      },
      deep: true
    },
    realList: function realList() {
      this.computeIndexes();
    }
  },
  methods: {
    getIsFunctional: function getIsFunctional() {
      var fnOptions = this._vnode.fnOptions;
      return fnOptions && fnOptions.functional;
    },
    getTag: function getTag() {
      return this.tag || this.element;
    },
    updateOptions: function updateOptions(newOptionValue) {
      for (var property in newOptionValue) {
        var value = Object(helper["a" /* camelize */])(property);

        if (readonlyProperties.indexOf(value) === -1) {
          this._sortable.option(value, newOptionValue[property]);
        }
      }
    },
    getChildrenNodes: function getChildrenNodes() {
      if (this.noneFunctionalComponentMode) {
        return this.$children[0].$slots.default;
      }

      var rawNodes = this.$slots.default;
      return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;
    },
    computeIndexes: function computeIndexes() {
      var _this4 = this;

      this.$nextTick(function () {
        _this4.visibleIndexes = _computeIndexes(_this4.getChildrenNodes(), _this4.rootContainer.children, _this4.transitionMode, _this4.footerOffset);
      });
    },
    getUnderlyingVm: function getUnderlyingVm(htmlElt) {
      var index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);

      if (index === -1) {
        //Edge case during move callback: related element might be
        //an element different from collection
        return null;
      }

      var element = this.realList[index];
      return {
        index: index,
        element: element
      };
    },
    getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(_ref) {
      var vue = _ref.__vue__;

      if (!vue || !vue.$options || !isTransitionName(vue.$options._componentTag)) {
        if (!("realList" in vue) && vue.$children.length === 1 && "realList" in vue.$children[0]) return vue.$children[0];
        return vue;
      }

      return vue.$parent;
    },
    emitChanges: function emitChanges(evt) {
      var _this5 = this;

      this.$nextTick(function () {
        _this5.$emit("change", evt);
      });
    },
    alterList: function alterList(onList) {
      if (this.list) {
        onList(this.list);
        return;
      }

      var newList = _toConsumableArray(this.value);

      onList(newList);
      this.$emit("input", newList);
    },
    spliceList: function spliceList() {
      var _arguments = arguments;

      var spliceList = function spliceList(list) {
        return list.splice.apply(list, _toConsumableArray(_arguments));
      };

      this.alterList(spliceList);
    },
    updatePosition: function updatePosition(oldIndex, newIndex) {
      var updatePosition = function updatePosition(list) {
        return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);
      };

      this.alterList(updatePosition);
    },
    getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref2) {
      var to = _ref2.to,
          related = _ref2.related;
      var component = this.getUnderlyingPotencialDraggableComponent(to);

      if (!component) {
        return {
          component: component
        };
      }

      var list = component.realList;
      var context = {
        list: list,
        component: component
      };

      if (to !== related && list && component.getUnderlyingVm) {
        var destination = component.getUnderlyingVm(related);

        if (destination) {
          return Object.assign(destination, context);
        }
      }

      return context;
    },
    getVmIndex: function getVmIndex(domIndex) {
      var indexes = this.visibleIndexes;
      var numberIndexes = indexes.length;
      return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];
    },
    getComponent: function getComponent() {
      return this.$slots.default[0].componentInstance;
    },
    resetTransitionData: function resetTransitionData(index) {
      if (!this.noTransitionOnDrag || !this.transitionMode) {
        return;
      }

      var nodes = this.getChildrenNodes();
      nodes[index].data = null;
      var transitionContainer = this.getComponent();
      transitionContainer.children = [];
      transitionContainer.kept = undefined;
    },
    onDragStart: function onDragStart(evt) {
      this.context = this.getUnderlyingVm(evt.item);
      evt.item._underlying_vm_ = this.clone(this.context.element);
      draggingElement = evt.item;
    },
    onDragAdd: function onDragAdd(evt) {
      var element = evt.item._underlying_vm_;

      if (element === undefined) {
        return;
      }

      Object(helper["d" /* removeNode */])(evt.item);
      var newIndex = this.getVmIndex(evt.newIndex);
      this.spliceList(newIndex, 0, element);
      this.computeIndexes();
      var added = {
        element: element,
        newIndex: newIndex
      };
      this.emitChanges({
        added: added
      });
    },
    onDragRemove: function onDragRemove(evt) {
      Object(helper["c" /* insertNodeAt */])(this.rootContainer, evt.item, evt.oldIndex);

      if (evt.pullMode === "clone") {
        Object(helper["d" /* removeNode */])(evt.clone);
        return;
      }

      var oldIndex = this.context.index;
      this.spliceList(oldIndex, 1);
      var removed = {
        element: this.context.element,
        oldIndex: oldIndex
      };
      this.resetTransitionData(oldIndex);
      this.emitChanges({
        removed: removed
      });
    },
    onDragUpdate: function onDragUpdate(evt) {
      Object(helper["d" /* removeNode */])(evt.item);
      Object(helper["c" /* insertNodeAt */])(evt.from, evt.item, evt.oldIndex);
      var oldIndex = this.context.index;
      var newIndex = this.getVmIndex(evt.newIndex);
      this.updatePosition(oldIndex, newIndex);
      var moved = {
        element: this.context.element,
        oldIndex: oldIndex,
        newIndex: newIndex
      };
      this.emitChanges({
        moved: moved
      });
    },
    updateProperty: function updateProperty(evt, propertyName) {
      evt.hasOwnProperty(propertyName) && (evt[propertyName] += this.headerOffset);
    },
    computeFutureIndex: function computeFutureIndex(relatedContext, evt) {
      if (!relatedContext.element) {
        return 0;
      }

      var domChildren = _toConsumableArray(evt.to.children).filter(function (el) {
        return el.style["display"] !== "none";
      });

      var currentDOMIndex = domChildren.indexOf(evt.related);
      var currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);
      var draggedInList = domChildren.indexOf(draggingElement) !== -1;
      return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;
    },
    onDragMove: function onDragMove(evt, originalEvent) {
      var onMove = this.move;

      if (!onMove || !this.realList) {
        return true;
      }

      var relatedContext = this.getRelatedContextFromMoveEvent(evt);
      var draggedContext = this.context;
      var futureIndex = this.computeFutureIndex(relatedContext, evt);
      Object.assign(draggedContext, {
        futureIndex: futureIndex
      });
      var sendEvt = Object.assign({}, evt, {
        relatedContext: relatedContext,
        draggedContext: draggedContext
      });
      return onMove(sendEvt, originalEvent);
    },
    onDragEnd: function onDragEnd() {
      this.computeIndexes();
      draggingElement = null;
    }
  }
};

if (typeof window !== "undefined" && "Vue" in window) {
  window.Vue.component("draggable", draggableComponent);
}

/* harmony default export */ var vuedraggable = (draggableComponent);
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (vuedraggable);



/***/ })

/******/ })["default"];
});
//# sourceMappingURL=vuedraggable.umd.js.map

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/app": 0,
/******/ 			"css/main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkmy_app"] = self["webpackChunkmy_app"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/main"], () => (__webpack_require__("./src/js/app.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/main"], () => (__webpack_require__("./src/sass/main.sass")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;